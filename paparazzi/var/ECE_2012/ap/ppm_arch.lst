   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ppm_arch.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.tim2_irq_handler,"ax",%progbits
  24              		.align	1
  25              		.global	tim2_irq_handler
  26              		.thumb
  27              		.thumb_func
  29              	tim2_irq_handler:
  30              	.LFB30:
  31              		.file 1 "arch/stm32/subsystems/radio_control/ppm_arch.c"
   1:arch/stm32/subsystems/radio_control/ppm_arch.c **** /*
   2:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * $Id$
   3:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
   4:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * Copyright (C) 2010 The Paparazzi Team
   5:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
   6:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * This file is part of paparazzi.
   7:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
   8:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * it under the terms of the GNU General Public License as published by
  10:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * any later version.
  12:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  13:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * GNU General Public License for more details.
  17:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  18:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * You should have received a copy of the GNU General Public License
  19:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * Boston, MA 02111-1307, USA.
  22:arch/stm32/subsystems/radio_control/ppm_arch.c ****  */
  23:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  24:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "subsystems/radio_control.h"
  25:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "subsystems/radio_control/ppm.h"
  26:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  27:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <stm32/rcc.h>
  28:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <stm32/gpio.h>
  29:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <stm32/tim.h>
  30:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <stm32/misc.h>
  31:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  32:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "sys_time.h"
  33:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  34:arch/stm32/subsystems/radio_control/ppm_arch.c **** /*
  35:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  36:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * This a radio control ppm driver for stm32
  37:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * signal on PA1 TIM2/CH2 (uart1 trig on lisa/L)
  38:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  39:arch/stm32/subsystems/radio_control/ppm_arch.c ****  */
  40:arch/stm32/subsystems/radio_control/ppm_arch.c **** uint8_t  ppm_cur_pulse;
  41:arch/stm32/subsystems/radio_control/ppm_arch.c **** uint32_t ppm_last_pulse_time;
  42:arch/stm32/subsystems/radio_control/ppm_arch.c **** bool_t   ppm_data_valid;
  43:arch/stm32/subsystems/radio_control/ppm_arch.c **** static uint32_t timer_rollover_cnt;
  44:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  45:arch/stm32/subsystems/radio_control/ppm_arch.c **** void tim2_irq_handler(void);
  46:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  47:arch/stm32/subsystems/radio_control/ppm_arch.c **** void ppm_arch_init ( void ) {
  48:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  49:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* TIM2 channel 2 pin (PA.01) configuration */
  50:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitTypeDef GPIO_InitStructure;
  51:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
  52:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  53:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  54:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
  55:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  56:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* TIM2 clock enable */
  57:arch/stm32/subsystems/radio_control/ppm_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  58:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  59:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* GPIOA clock enable */
  60:arch/stm32/subsystems/radio_control/ppm_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
  61:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  62:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Time Base configuration */
  63:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  64:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
  65:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_Period        = 0xFFFF;
  66:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_Prescaler     = 0x8;
  67:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_ClockDivision = 0x0;
  68:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_CounterMode   = TIM_CounterMode_Up;
  69:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
  70:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  71:arch/stm32/subsystems/radio_control/ppm_arch.c ****  /* TIM2 configuration: Input Capture mode ---------------------
  72:arch/stm32/subsystems/radio_control/ppm_arch.c ****      The external signal is connected to TIM2 CH2 pin (PA.01)
  73:arch/stm32/subsystems/radio_control/ppm_arch.c ****      The Rising edge is used as active edge,
  74:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ------------------------------------------------------------ */
  75:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitTypeDef  TIM_ICInitStructure;
  76:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
  77:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
  78:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
  79:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
  80:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICFilter = 0x00;
  81:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInit(TIM2, &TIM_ICInitStructure);
  82:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  83:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Enable the TIM2 global Interrupt */
  84:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitTypeDef NVIC_InitStructure;
  85:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
  86:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
  87:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
  88:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  89:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_Init(&NVIC_InitStructure);
  90:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  91:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* TIM2 enable counter */
  92:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_Cmd(TIM2, ENABLE);
  93:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  94:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Enable the CC2 Interrupt Request */
  95:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ITConfig(TIM2, TIM_IT_CC2|TIM_IT_Update, ENABLE);
  96:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  97:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_last_pulse_time = 0;
  98:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_cur_pulse = RADIO_CONTROL_NB_CHANNEL;
  99:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_rollover_cnt = 0;
 100:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 101:arch/stm32/subsystems/radio_control/ppm_arch.c **** }
 102:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 103:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 104:arch/stm32/subsystems/radio_control/ppm_arch.c **** void tim2_irq_handler(void) {
  32              		.loc 1 104 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
 105:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 106:arch/stm32/subsystems/radio_control/ppm_arch.c ****   if(TIM_GetITStatus(TIM2, TIM_IT_CC2) == SET) {
  39              		.loc 1 106 0
  40 0002 0421     		movs	r1, #4
  41 0004 4FF08040 		mov	r0, #1073741824
  42              		.cfi_offset 14, -4
  43              		.cfi_offset 4, -8
  44 0008 FFF7FEFF 		bl	TIM_GetITStatus
  45 000c 0128     		cmp	r0, #1
  46 000e 0446     		mov	r4, r0
  47 0010 3DD1     		bne	.L2
  48              	.LBB2:
 107:arch/stm32/subsystems/radio_control/ppm_arch.c ****     TIM_ClearITPendingBit(TIM2, TIM_IT_CC2);
  49              		.loc 1 107 0
  50 0012 0421     		movs	r1, #4
  51 0014 4FF08040 		mov	r0, #1073741824
  52 0018 FFF7FEFF 		bl	TIM_ClearITPendingBit
 108:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 109:arch/stm32/subsystems/radio_control/ppm_arch.c ****     uint32_t now = TIM_GetCapture2(TIM2) + timer_rollover_cnt;
  53              		.loc 1 109 0
  54 001c 4FF08040 		mov	r0, #1073741824
  55 0020 FFF7FEFF 		bl	TIM_GetCapture2
  56 0024 244B     		ldr	r3, .L11
  57              	.LBB3:
 110:arch/stm32/subsystems/radio_control/ppm_arch.c ****     DecodePpmFrame(now);
  58              		.loc 1 110 0
  59 0026 254A     		ldr	r2, .L11+4
  60              	.LBE3:
 109:arch/stm32/subsystems/radio_control/ppm_arch.c ****     uint32_t now = TIM_GetCapture2(TIM2) + timer_rollover_cnt;
  61              		.loc 1 109 0
  62 0028 1B68     		ldr	r3, [r3, #0]
  63              	.LBB4:
  64              		.loc 1 110 0
  65 002a 1168     		ldr	r1, [r2, #0]
  66              	.LBE4:
 109:arch/stm32/subsystems/radio_control/ppm_arch.c ****     uint32_t now = TIM_GetCapture2(TIM2) + timer_rollover_cnt;
  67              		.loc 1 109 0
  68 002c C318     		adds	r3, r0, r3
  69              	.LVL0:
  70              	.LBB5:
  71              		.loc 1 110 0
  72 002e 591A     		subs	r1, r3, r1
  73              	.LVL1:
  74 0030 1360     		str	r3, [r2, #0]
  75 0032 234B     		ldr	r3, .L11+8
  76              	.LVL2:
  77 0034 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  78 0036 072A     		cmp	r2, #7
  79 0038 11D1     		bne	.L3
  80 003a 224B     		ldr	r3, .L11+12
  81 003c A1F51C41 		sub	r1, r1, #39936
  82              	.LVL3:
  83 0040 1939     		subs	r1, r1, #25
  84 0042 9942     		cmp	r1, r3
  85 0044 204B     		ldr	r3, .L11+16
  86 0046 08D8     		bhi	.L4
  87 0048 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  88 004a 1AB1     		cbz	r2, .L5
  89 004c 1F4A     		ldr	r2, .L11+20
  90 004e 1470     		strb	r4, [r2, #0]
  91 0050 0022     		movs	r2, #0
  92 0052 1A70     		strb	r2, [r3, #0]
  93              	.L5:
  94 0054 0022     		movs	r2, #0
  95 0056 1A4B     		ldr	r3, .L11+8
  96 0058 17E0     		b	.L9
  97              	.L4:
  98 005a 0022     		movs	r2, #0
  99 005c 15E0     		b	.L9
 100              	.LVL4:
 101              	.L3:
 102 005e A1F5E050 		sub	r0, r1, #7168
 103 0062 2138     		subs	r0, r0, #33
 104 0064 42F2665C 		movw	ip, #9574
 105 0068 6045     		cmp	r0, ip
 106 006a 0AD8     		bhi	.L7
 107 006c 1848     		ldr	r0, .L11+24
 108 006e 20F81210 		strh	r1, [r0, r2, lsl #1]	@ movhi
 109 0072 0132     		adds	r2, r2, #1
 110 0074 D2B2     		uxtb	r2, r2
 111 0076 072A     		cmp	r2, #7
 112 0078 1A70     		strb	r2, [r3, #0]
 113 007a 1BD1     		bne	.L8
 114 007c 124B     		ldr	r3, .L11+16
 115 007e 1C70     		strb	r4, [r3, #0]
 116 0080 10BD     		pop	{r4, pc}
 117              	.L7:
 118 0082 0722     		movs	r2, #7
 119 0084 1A70     		strb	r2, [r3, #0]
 120 0086 104B     		ldr	r3, .L11+16
 121 0088 073A     		subs	r2, r2, #7
 122              	.L9:
 123 008a 1A70     		strb	r2, [r3, #0]
 124 008c 10BD     		pop	{r4, pc}
 125              	.LVL5:
 126              	.L2:
 127              	.LBE5:
 128              	.LBE2:
 111:arch/stm32/subsystems/radio_control/ppm_arch.c ****   }
 112:arch/stm32/subsystems/radio_control/ppm_arch.c ****   else if(TIM_GetITStatus(TIM2, TIM_IT_Update) == SET) {
 129              		.loc 1 112 0
 130 008e 0121     		movs	r1, #1
 131 0090 4FF08040 		mov	r0, #1073741824
 132 0094 FFF7FEFF 		bl	TIM_GetITStatus
 133 0098 0128     		cmp	r0, #1
 134 009a 0146     		mov	r1, r0
 135 009c 0AD1     		bne	.L8
 113:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_rollover_cnt+=(1<<16);
 136              		.loc 1 113 0
 137 009e 064B     		ldr	r3, .L11
 114:arch/stm32/subsystems/radio_control/ppm_arch.c ****     TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 138              		.loc 1 114 0
 139 00a0 4FF08040 		mov	r0, #1073741824
 113:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_rollover_cnt+=(1<<16);
 140              		.loc 1 113 0
 141 00a4 1A68     		ldr	r2, [r3, #0]
 142 00a6 02F58032 		add	r2, r2, #65536
 143 00aa 1A60     		str	r2, [r3, #0]
 115:arch/stm32/subsystems/radio_control/ppm_arch.c ****   }
 116:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 117:arch/stm32/subsystems/radio_control/ppm_arch.c **** }
 144              		.loc 1 117 0
 145 00ac BDE81040 		pop	{r4, lr}
 114:arch/stm32/subsystems/radio_control/ppm_arch.c ****     TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 146              		.loc 1 114 0
 147 00b0 FFF7FEBF 		b	TIM_ClearITPendingBit
 148              	.LVL6:
 149              	.L8:
 150 00b4 10BD     		pop	{r4, pc}
 151              	.L12:
 152 00b6 00BF     		.align	2
 153              	.L11:
 154 00b8 00000000 		.word	.LANCHOR0
 155 00bc 00000000 		.word	.LANCHOR1
 156 00c0 00000000 		.word	.LANCHOR2
 157 00c4 76380100 		.word	79990
 158 00c8 00000000 		.word	.LANCHOR3
 159 00cc 00000000 		.word	ppm_frame_available
 160 00d0 00000000 		.word	ppm_pulses
 161              		.cfi_endproc
 162              	.LFE30:
 164              		.section	.text.ppm_arch_init,"ax",%progbits
 165              		.align	1
 166              		.global	ppm_arch_init
 167              		.thumb
 168              		.thumb_func
 170              	ppm_arch_init:
 171              	.LFB29:
  47:arch/stm32/subsystems/radio_control/ppm_arch.c **** void ppm_arch_init ( void ) {
 172              		.loc 1 47 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 32
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 177              	.LCFI1:
 178              		.cfi_def_cfa_offset 20
  51:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
 179              		.loc 1 51 0
 180 0002 0223     		movs	r3, #2
  47:arch/stm32/subsystems/radio_control/ppm_arch.c **** void ppm_arch_init ( void ) {
 181              		.loc 1 47 0
 182 0004 89B0     		sub	sp, sp, #36
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 56
  52:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 185              		.loc 1 52 0
 186 0006 0425     		movs	r5, #4
 187              		.cfi_offset 14, -4
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 6, -12
 190              		.cfi_offset 5, -16
 191              		.cfi_offset 4, -20
  51:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
 192              		.loc 1 51 0
 193 0008 1F46     		mov	r7, r3	@ movhi
 194 000a ADF81C30 		strh	r3, [sp, #28]	@ movhi
  54:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 195              		.loc 1 54 0
 196 000e 2C48     		ldr	r0, .L15
  53:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 197              		.loc 1 53 0
 198 0010 0133     		adds	r3, r3, #1
  54:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 199              		.loc 1 54 0
 200 0012 07A9     		add	r1, sp, #28
  53:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 201              		.loc 1 53 0
 202 0014 8DF81E30 		strb	r3, [sp, #30]
  52:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 203              		.loc 1 52 0
 204 0018 8DF81F50 		strb	r5, [sp, #31]
  54:arch/stm32/subsystems/radio_control/ppm_arch.c ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
 205              		.loc 1 54 0
 206 001c FFF7FEFF 		bl	GPIO_Init
  57:arch/stm32/subsystems/radio_control/ppm_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 207              		.loc 1 57 0
 208 0020 0120     		movs	r0, #1
 209 0022 0146     		mov	r1, r0
 210 0024 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  64:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
 211              		.loc 1 64 0
 212 0028 03AE     		add	r6, sp, #12
  60:arch/stm32/subsystems/radio_control/ppm_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 213              		.loc 1 60 0
 214 002a 2846     		mov	r0, r5
 215 002c 0121     		movs	r1, #1
 216 002e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  64:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
 217              		.loc 1 64 0
 218 0032 3046     		mov	r0, r6
 219 0034 FFF7FEFF 		bl	TIM_TimeBaseStructInit
  65:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_Period        = 0xFFFF;
 220              		.loc 1 65 0
 221 0038 4FF0FF33 		mov	r3, #-1	@ movhi
  67:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_ClockDivision = 0x0;
 222              		.loc 1 67 0
 223 003c 0024     		movs	r4, #0
  69:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 224              		.loc 1 69 0
 225 003e 3146     		mov	r1, r6
  65:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_Period        = 0xFFFF;
 226              		.loc 1 65 0
 227 0040 ADF81030 		strh	r3, [sp, #16]	@ movhi
  69:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 228              		.loc 1 69 0
 229 0044 4FF08040 		mov	r0, #1073741824
  66:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_Prescaler     = 0x8;
 230              		.loc 1 66 0
 231 0048 4FF00803 		mov	r3, #8	@ movhi
 232 004c ADF80C30 		strh	r3, [sp, #12]	@ movhi
  67:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_ClockDivision = 0x0;
 233              		.loc 1 67 0
 234 0050 ADF81240 		strh	r4, [sp, #18]	@ movhi
  68:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseStructure.TIM_CounterMode   = TIM_CounterMode_Up;
 235              		.loc 1 68 0
 236 0054 ADF80E40 		strh	r4, [sp, #14]	@ movhi
  69:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 237              		.loc 1 69 0
 238 0058 FFF7FEFF 		bl	TIM_TimeBaseInit
  81:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInit(TIM2, &TIM_ICInitStructure);
 239              		.loc 1 81 0
 240 005c 6946     		mov	r1, sp
  76:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_Channel = TIM_Channel_2;
 241              		.loc 1 76 0
 242 005e ADF80050 		strh	r5, [sp, #0]	@ movhi
  81:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInit(TIM2, &TIM_ICInitStructure);
 243              		.loc 1 81 0
 244 0062 4FF08040 		mov	r0, #1073741824
  78:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 245              		.loc 1 78 0
 246 0066 033D     		subs	r5, r5, #3
  77:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
 247              		.loc 1 77 0
 248 0068 ADF80240 		strh	r4, [sp, #2]	@ movhi
  78:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 249              		.loc 1 78 0
 250 006c ADF80450 		strh	r5, [sp, #4]	@ movhi
  79:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 251              		.loc 1 79 0
 252 0070 ADF80640 		strh	r4, [sp, #6]	@ movhi
  80:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICFilter = 0x00;
 253              		.loc 1 80 0
 254 0074 ADF80840 		strh	r4, [sp, #8]	@ movhi
  81:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInit(TIM2, &TIM_ICInitStructure);
 255              		.loc 1 81 0
 256 0078 FFF7FEFF 		bl	TIM_ICInit
  85:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
 257              		.loc 1 85 0
 258 007c 1C23     		movs	r3, #28
  89:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 259              		.loc 1 89 0
 260 007e 06A8     		add	r0, sp, #24
  85:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
 261              		.loc 1 85 0
 262 0080 8DF81830 		strb	r3, [sp, #24]
  86:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 263              		.loc 1 86 0
 264 0084 8DF81970 		strb	r7, [sp, #25]
  87:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 265              		.loc 1 87 0
 266 0088 8DF81A50 		strb	r5, [sp, #26]
  88:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 267              		.loc 1 88 0
 268 008c 8DF81B50 		strb	r5, [sp, #27]
  89:arch/stm32/subsystems/radio_control/ppm_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 269              		.loc 1 89 0
 270 0090 FFF7FEFF 		bl	NVIC_Init
  92:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_Cmd(TIM2, ENABLE);
 271              		.loc 1 92 0
 272 0094 4FF08040 		mov	r0, #1073741824
 273 0098 2946     		mov	r1, r5
 274 009a FFF7FEFF 		bl	TIM_Cmd
  95:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ITConfig(TIM2, TIM_IT_CC2|TIM_IT_Update, ENABLE);
 275              		.loc 1 95 0
 276 009e 2A46     		mov	r2, r5
 277 00a0 4FF08040 		mov	r0, #1073741824
 278 00a4 0521     		movs	r1, #5
 279 00a6 FFF7FEFF 		bl	TIM_ITConfig
  97:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_last_pulse_time = 0;
 280              		.loc 1 97 0
 281 00aa 064B     		ldr	r3, .L15+4
  98:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_cur_pulse = RADIO_CONTROL_NB_CHANNEL;
 282              		.loc 1 98 0
 283 00ac 0722     		movs	r2, #7
  97:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_last_pulse_time = 0;
 284              		.loc 1 97 0
 285 00ae 1C60     		str	r4, [r3, #0]
  98:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_cur_pulse = RADIO_CONTROL_NB_CHANNEL;
 286              		.loc 1 98 0
 287 00b0 054B     		ldr	r3, .L15+8
  78:arch/stm32/subsystems/radio_control/ppm_arch.c ****   TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 288              		.loc 1 78 0
 289 00b2 2E46     		mov	r6, r5	@ movhi
  98:arch/stm32/subsystems/radio_control/ppm_arch.c ****   ppm_cur_pulse = RADIO_CONTROL_NB_CHANNEL;
 290              		.loc 1 98 0
 291 00b4 1A70     		strb	r2, [r3, #0]
  99:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_rollover_cnt = 0;
 292              		.loc 1 99 0
 293 00b6 054B     		ldr	r3, .L15+12
 294 00b8 1C60     		str	r4, [r3, #0]
 101:arch/stm32/subsystems/radio_control/ppm_arch.c **** }
 295              		.loc 1 101 0
 296 00ba 09B0     		add	sp, sp, #36
 297 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 298              	.L16:
 299 00be 00BF     		.align	2
 300              	.L15:
 301 00c0 00080140 		.word	1073809408
 302 00c4 00000000 		.word	.LANCHOR1
 303 00c8 00000000 		.word	.LANCHOR2
 304 00cc 00000000 		.word	.LANCHOR0
 305              		.cfi_endproc
 306              	.LFE29:
 308              		.global	ppm_cur_pulse
 309              		.global	ppm_last_pulse_time
 310              		.global	ppm_data_valid
 311              		.section	.bss.ppm_data_valid,"aw",%nobits
 312              		.set	.LANCHOR3,. + 0
 315              	ppm_data_valid:
 316 0000 00       		.space	1
 317              		.section	.bss.ppm_last_pulse_time,"aw",%nobits
 318              		.align	2
 319              		.set	.LANCHOR1,. + 0
 322              	ppm_last_pulse_time:
 323 0000 00000000 		.space	4
 324              		.section	.bss.timer_rollover_cnt,"aw",%nobits
 325              		.align	2
 326              		.set	.LANCHOR0,. + 0
 329              	timer_rollover_cnt:
 330 0000 00000000 		.space	4
 331              		.section	.bss.ppm_cur_pulse,"aw",%nobits
 332              		.set	.LANCHOR2,. + 0
 335              	ppm_cur_pulse:
 336 0000 00       		.space	1
 337              		.text
 338              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 ppm_arch.c
     /tmp/cc1fJmnd.s:24     .text.tim2_irq_handler:00000000 $t
     /tmp/cc1fJmnd.s:29     .text.tim2_irq_handler:00000000 tim2_irq_handler
     /tmp/cc1fJmnd.s:154    .text.tim2_irq_handler:000000b8 $d
     /tmp/cc1fJmnd.s:165    .text.ppm_arch_init:00000000 $t
     /tmp/cc1fJmnd.s:170    .text.ppm_arch_init:00000000 ppm_arch_init
     /tmp/cc1fJmnd.s:301    .text.ppm_arch_init:000000c0 $d
     /tmp/cc1fJmnd.s:335    .bss.ppm_cur_pulse:00000000 ppm_cur_pulse
     /tmp/cc1fJmnd.s:322    .bss.ppm_last_pulse_time:00000000 ppm_last_pulse_time
     /tmp/cc1fJmnd.s:315    .bss.ppm_data_valid:00000000 ppm_data_valid
     /tmp/cc1fJmnd.s:316    .bss.ppm_data_valid:00000000 $d
     /tmp/cc1fJmnd.s:318    .bss.ppm_last_pulse_time:00000000 $d
     /tmp/cc1fJmnd.s:325    .bss.timer_rollover_cnt:00000000 $d
     /tmp/cc1fJmnd.s:329    .bss.timer_rollover_cnt:00000000 timer_rollover_cnt
     /tmp/cc1fJmnd.s:336    .bss.ppm_cur_pulse:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TIM_GetITStatus
TIM_ClearITPendingBit
TIM_GetCapture2
ppm_frame_available
ppm_pulses
GPIO_Init
RCC_APB1PeriphClockCmd
RCC_APB2PeriphClockCmd
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_ICInit
NVIC_Init
TIM_Cmd
TIM_ITConfig
