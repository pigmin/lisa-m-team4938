   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"nav.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.nav_init_stage,"ax",%progbits
  24              		.align	1
  25              		.global	nav_init_stage
  26              		.thumb
  27              		.thumb_func
  29              	nav_init_stage:
  30              	.LFB34:
  31              		.file 1 "subsystems/nav.c"
   1:subsystems/nav.c **** /*
   2:subsystems/nav.c ****  * $Id$
   3:subsystems/nav.c ****  *
   4:subsystems/nav.c ****  * Copyright (C) 2003-2005  Pascal Brisset, Antoine Drouin
   5:subsystems/nav.c ****  *
   6:subsystems/nav.c ****  * This file is part of paparazzi.
   7:subsystems/nav.c ****  *
   8:subsystems/nav.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:subsystems/nav.c ****  * it under the terms of the GNU General Public License as published by
  10:subsystems/nav.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:subsystems/nav.c ****  * any later version.
  12:subsystems/nav.c ****  *
  13:subsystems/nav.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:subsystems/nav.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:subsystems/nav.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:subsystems/nav.c ****  * GNU General Public License for more details.
  17:subsystems/nav.c ****  *
  18:subsystems/nav.c ****  * You should have received a copy of the GNU General Public License
  19:subsystems/nav.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:subsystems/nav.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:subsystems/nav.c ****  * Boston, MA 02111-1307, USA.
  22:subsystems/nav.c ****  *
  23:subsystems/nav.c ****  */
  24:subsystems/nav.c **** /** \file subsystems/nav.c
  25:subsystems/nav.c ****  *  \brief Regroup functions to compute navigation
  26:subsystems/nav.c ****  *
  27:subsystems/nav.c ****  */
  28:subsystems/nav.c **** 
  29:subsystems/nav.c **** #define NAV_C
  30:subsystems/nav.c **** 
  31:subsystems/nav.c **** #include <math.h>
  32:subsystems/nav.c **** 
  33:subsystems/nav.c **** #include "subsystems/nav.h"
  34:subsystems/nav.c **** #include "subsystems/gps.h"
  35:subsystems/nav.c **** #include "estimator.h"
  36:subsystems/nav.c **** #include "firmwares/fixedwing/stabilization/stabilization_attitude.h"
  37:subsystems/nav.c **** #include "firmwares/fixedwing/guidance/guidance_v.h"
  38:subsystems/nav.c **** #include "firmwares/fixedwing/autopilot.h"
  39:subsystems/nav.c **** #include "inter_mcu.h"
  40:subsystems/nav.c **** #include "subsystems/navigation/traffic_info.h"
  41:subsystems/nav.c **** 
  42:subsystems/nav.c **** #define RCLost() bit_is_set(fbw_state->status, RADIO_REALLY_LOST)
  43:subsystems/nav.c **** 
  44:subsystems/nav.c **** enum oval_status oval_status;
  45:subsystems/nav.c **** 
  46:subsystems/nav.c **** float last_x, last_y;
  47:subsystems/nav.c **** 
  48:subsystems/nav.c **** /** Index of last waypoint. Used only in "go" stage in "route" horiz mode */
  49:subsystems/nav.c **** static uint8_t last_wp __attribute__ ((unused));
  50:subsystems/nav.c **** 
  51:subsystems/nav.c **** float rc_pitch;
  52:subsystems/nav.c **** float carrot_x, carrot_y;
  53:subsystems/nav.c **** 
  54:subsystems/nav.c **** /** Status on the current circle */
  55:subsystems/nav.c **** float nav_circle_radians; /* Cumulated */
  56:subsystems/nav.c **** float nav_circle_trigo_qdr; /* Angle from center to mobile */
  57:subsystems/nav.c **** float nav_radius, nav_course, nav_climb, nav_shift;
  58:subsystems/nav.c **** 
  59:subsystems/nav.c **** 
  60:subsystems/nav.c **** /** Status on the current leg (percentage, 0. < < 1.) in route mode */
  61:subsystems/nav.c **** static float nav_leg_progress;
  62:subsystems/nav.c **** 
  63:subsystems/nav.c **** /** length of the current leg (m) */
  64:subsystems/nav.c **** static float nav_leg_length;
  65:subsystems/nav.c **** 
  66:subsystems/nav.c **** bool_t nav_in_circle = FALSE;
  67:subsystems/nav.c **** bool_t nav_in_segment = FALSE;
  68:subsystems/nav.c **** float nav_circle_x, nav_circle_y, nav_circle_radius;
  69:subsystems/nav.c **** float nav_segment_x_1, nav_segment_y_1, nav_segment_x_2, nav_segment_y_2;
  70:subsystems/nav.c **** uint8_t horizontal_mode;
  71:subsystems/nav.c **** float circle_bank = 0;
  72:subsystems/nav.c **** 
  73:subsystems/nav.c **** /** Dynamically adjustable, reset to nav_altitude when it is changing */
  74:subsystems/nav.c **** float flight_altitude;
  75:subsystems/nav.c **** 
  76:subsystems/nav.c **** float nav_glide_pitch_trim;
  77:subsystems/nav.c **** #ifndef NAV_GLIDE_PITCH_TRIM
  78:subsystems/nav.c **** #define NAV_GLIDE_PITCH_TRIM 0.
  79:subsystems/nav.c **** #endif
  80:subsystems/nav.c **** 
  81:subsystems/nav.c **** 
  82:subsystems/nav.c **** 
  83:subsystems/nav.c **** float nav_ground_speed_setpoint, nav_ground_speed_pgain;
  84:subsystems/nav.c **** 
  85:subsystems/nav.c **** /* Used in nav_survey_rectangle. Defined here for downlink and uplink */
  86:subsystems/nav.c **** float nav_survey_shift;
  87:subsystems/nav.c **** float nav_survey_west, nav_survey_east, nav_survey_north, nav_survey_south;
  88:subsystems/nav.c **** bool_t nav_survey_active;
  89:subsystems/nav.c **** 
  90:subsystems/nav.c **** int nav_mode;
  91:subsystems/nav.c **** 
  92:subsystems/nav.c **** void nav_init_stage( void ) {
  32              		.loc 1 92 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  93:subsystems/nav.c ****   last_x = estimator_x; last_y = estimator_y;
  37              		.loc 1 93 0
  38 0000 0B4B     		ldr	r3, .L3
  94:subsystems/nav.c ****   stage_time = 0;
  95:subsystems/nav.c ****   nav_circle_radians = 0;
  39              		.loc 1 95 0
  40 0002 0C49     		ldr	r1, .L3+4
  93:subsystems/nav.c ****   last_x = estimator_x; last_y = estimator_y;
  41              		.loc 1 93 0
  42 0004 1A68     		ldr	r2, [r3, #0]	@ float
  43 0006 0C4B     		ldr	r3, .L3+8
  44 0008 1A60     		str	r2, [r3, #0]	@ float
  45 000a 0C4B     		ldr	r3, .L3+12
  46 000c 1A68     		ldr	r2, [r3, #0]	@ float
  47 000e 0C4B     		ldr	r3, .L3+16
  48 0010 1A60     		str	r2, [r3, #0]	@ float
  94:subsystems/nav.c ****   stage_time = 0;
  49              		.loc 1 94 0
  50 0012 0C4B     		ldr	r3, .L3+20
  51 0014 0022     		movs	r2, #0
  52 0016 1A80     		strh	r2, [r3, #0]	@ movhi
  53              		.loc 1 95 0
  54 0018 0023     		movs	r3, #0
  55 001a 0B60     		str	r3, [r1, #0]	@ float
  96:subsystems/nav.c ****   nav_in_circle = FALSE;
  56              		.loc 1 96 0
  57 001c 0A49     		ldr	r1, .L3+24
  58 001e 0A70     		strb	r2, [r1, #0]
  97:subsystems/nav.c ****   nav_in_segment = FALSE;
  59              		.loc 1 97 0
  60 0020 0A49     		ldr	r1, .L3+28
  61 0022 0A70     		strb	r2, [r1, #0]
  98:subsystems/nav.c ****   nav_shift = 0;
  62              		.loc 1 98 0
  63 0024 0A4A     		ldr	r2, .L3+32
  64 0026 1360     		str	r3, [r2, #0]	@ float
  99:subsystems/nav.c ****   nav_pitch = 0.;
  65              		.loc 1 99 0
  66 0028 0A4A     		ldr	r2, .L3+36
  67 002a 1360     		str	r3, [r2, #0]	@ float
 100:subsystems/nav.c **** }
  68              		.loc 1 100 0
  69 002c 7047     		bx	lr
  70              	.L4:
  71 002e 00BF     		.align	2
  72              	.L3:
  73 0030 00000000 		.word	estimator_x
  74 0034 00000000 		.word	.LANCHOR2
  75 0038 00000000 		.word	.LANCHOR0
  76 003c 00000000 		.word	estimator_y
  77 0040 00000000 		.word	.LANCHOR1
  78 0044 00000000 		.word	stage_time
  79 0048 00000000 		.word	.LANCHOR3
  80 004c 00000000 		.word	.LANCHOR4
  81 0050 00000000 		.word	.LANCHOR5
  82 0054 00000000 		.word	.LANCHOR6
  83              		.cfi_endproc
  84              	.LFE34:
  86              		.global	__aeabi_fsub
  87              		.global	__aeabi_fmul
  88              		.global	__aeabi_fadd
  89              		.global	__aeabi_fcmplt
  90              		.section	.text.nav_approaching_xy,"ax",%progbits
  91              		.align	1
  92              		.global	nav_approaching_xy
  93              		.thumb
  94              		.thumb_func
  96              	nav_approaching_xy:
  97              	.LFB40:
 101:subsystems/nav.c **** 
 102:subsystems/nav.c **** #define PowerVoltage() (vsupply/10.)
 103:subsystems/nav.c **** #define RcRoll(travel) (fbw_state->channels[RADIO_ROLL]* (float)travel /(float)MAX_PPRZ)
 104:subsystems/nav.c **** 
 105:subsystems/nav.c **** #define MIN_DX ((int16_t)(MAX_PPRZ * 0.05))
 106:subsystems/nav.c **** 
 107:subsystems/nav.c **** 
 108:subsystems/nav.c **** /** Navigates around (x, y). Clockwise iff radius > 0 */
 109:subsystems/nav.c **** void nav_circle_XY(float x, float y, float radius) {
 110:subsystems/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 112:subsystems/nav.c **** 
 113:subsystems/nav.c ****   if (nav_in_circle) {
 114:subsystems/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 115:subsystems/nav.c ****     NormRadAngle(trigo_diff);
 116:subsystems/nav.c ****     nav_circle_radians += trigo_diff;
 117:subsystems/nav.c ****   }
 118:subsystems/nav.c **** 
 119:subsystems/nav.c ****   float dist2_center = DistanceSquare(estimator_x, estimator_y, x, y);
 120:subsystems/nav.c ****   float dist_carrot = CARROT*NOMINAL_AIRSPEED;
 121:subsystems/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 122:subsystems/nav.c **** 
 123:subsystems/nav.c ****   radius += -nav_shift;
 124:subsystems/nav.c **** 
 125:subsystems/nav.c ****   float abs_radius = fabs(radius);
 126:subsystems/nav.c **** 
 127:subsystems/nav.c ****   /** Computes a prebank. Go straight if inside or outside the circle */
 128:subsystems/nav.c ****   circle_bank =
 129:subsystems/nav.c ****     (dist2_center > Square(abs_radius + dist_carrot)
 130:subsystems/nav.c ****       || dist2_center < Square(abs_radius - dist_carrot)) ?
 131:subsystems/nav.c ****     0 :
 132:subsystems/nav.c ****     atan(estimator_hspeed_mod*estimator_hspeed_mod / (G*radius));
 133:subsystems/nav.c **** 
 134:subsystems/nav.c ****   float carrot_angle = dist_carrot / abs_radius;
 135:subsystems/nav.c ****   carrot_angle = Min(carrot_angle, M_PI/4);
 136:subsystems/nav.c ****   carrot_angle = Max(carrot_angle, M_PI/16);
 137:subsystems/nav.c ****   float alpha_carrot = nav_circle_trigo_qdr - sign_radius * carrot_angle;
 138:subsystems/nav.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 139:subsystems/nav.c ****   float radius_carrot = abs_radius;
 140:subsystems/nav.c ****   if (nav_mode == NAV_MODE_COURSE)
 141:subsystems/nav.c ****     radius_carrot += (abs_radius / cos(carrot_angle) - abs_radius);
 142:subsystems/nav.c ****   fly_to_xy(x+cos(alpha_carrot)*radius_carrot,
 143:subsystems/nav.c **** 	    y+sin(alpha_carrot)*radius_carrot);
 144:subsystems/nav.c ****   nav_in_circle = TRUE;
 145:subsystems/nav.c ****   nav_circle_x = x;
 146:subsystems/nav.c ****   nav_circle_y = y;
 147:subsystems/nav.c ****   nav_circle_radius = radius;
 148:subsystems/nav.c **** }
 149:subsystems/nav.c **** 
 150:subsystems/nav.c **** 
 151:subsystems/nav.c **** #define NavGotoWaypoint(_wp) { \
 152:subsystems/nav.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT; \
 153:subsystems/nav.c ****   fly_to_xy(waypoints[_wp].x, waypoints[_wp].y); \
 154:subsystems/nav.c **** }
 155:subsystems/nav.c **** 
 156:subsystems/nav.c **** #define NavGlide(_last_wp, _wp) { \
 157:subsystems/nav.c ****   float start_alt = waypoints[_last_wp].a; \
 158:subsystems/nav.c ****   float diff_alt = waypoints[_wp].a - start_alt; \
 159:subsystems/nav.c ****   float alt = start_alt + nav_leg_progress * diff_alt; \
 160:subsystems/nav.c ****   float pre_climb = estimator_hspeed_mod * diff_alt / nav_leg_length; \
 161:subsystems/nav.c ****   NavVerticalAltitudeMode(alt, pre_climb); \
 162:subsystems/nav.c **** }
 163:subsystems/nav.c **** 
 164:subsystems/nav.c **** 
 165:subsystems/nav.c **** 
 166:subsystems/nav.c **** 
 167:subsystems/nav.c **** #define MAX_DIST_CARROT 250.
 168:subsystems/nav.c **** #define MIN_HEIGHT_CARROT 50.
 169:subsystems/nav.c **** #define MAX_HEIGHT_CARROT 150.
 170:subsystems/nav.c **** 
 171:subsystems/nav.c **** #define Goto3D(radius) { \
 172:subsystems/nav.c ****   if (pprz_mode == PPRZ_MODE_AUTO2) { \
 173:subsystems/nav.c ****     int16_t yaw = fbw_state->channels[RADIO_YAW]; \
 174:subsystems/nav.c ****     if (yaw > MIN_DX || yaw < -MIN_DX) { \
 175:subsystems/nav.c ****       carrot_x += FLOAT_OF_PPRZ(yaw, 0, -20.); \
 176:subsystems/nav.c ****       carrot_x = Min(carrot_x, MAX_DIST_CARROT); \
 177:subsystems/nav.c ****       carrot_x = Max(carrot_x, -MAX_DIST_CARROT); \
 178:subsystems/nav.c ****     } \
 179:subsystems/nav.c ****     int16_t pitch = fbw_state->channels[RADIO_PITCH]; \
 180:subsystems/nav.c ****     if (pitch > MIN_DX || pitch < -MIN_DX) { \
 181:subsystems/nav.c ****       carrot_y += FLOAT_OF_PPRZ(pitch, 0, -20.); \
 182:subsystems/nav.c ****       carrot_y = Min(carrot_y, MAX_DIST_CARROT); \
 183:subsystems/nav.c ****       carrot_y = Max(carrot_y, -MAX_DIST_CARROT); \
 184:subsystems/nav.c ****     } \
 185:subsystems/nav.c ****     v_ctl_mode = V_CTL_MODE_AUTO_ALT; \
 186:subsystems/nav.c ****     int16_t roll =  fbw_state->channels[RADIO_ROLL]; \
 187:subsystems/nav.c ****     if (roll > MIN_DX || roll < -MIN_DX) { \
 188:subsystems/nav.c ****       nav_altitude += FLOAT_OF_PPRZ(roll, 0, -1.0);	\
 189:subsystems/nav.c ****       nav_altitude = Max(nav_altitude, MIN_HEIGHT_CARROT+ground_alt); \
 190:subsystems/nav.c ****       nav_altitude = Min(nav_altitude, MAX_HEIGHT_CARROT+ground_alt); \
 191:subsystems/nav.c ****     } \
 192:subsystems/nav.c ****   } \
 193:subsystems/nav.c ****   nav_circle_XY(carrot_x, carrot_y, radius); \
 194:subsystems/nav.c **** }
 195:subsystems/nav.c **** 
 196:subsystems/nav.c **** 
 197:subsystems/nav.c **** #define NavFollow(_ac_id, _distance, _height) \
 198:subsystems/nav.c ****   nav_follow(_ac_id, _distance, _height);
 199:subsystems/nav.c **** 
 200:subsystems/nav.c **** 
 201:subsystems/nav.c **** static unit_t unit __attribute__ ((unused));
 202:subsystems/nav.c **** 
 203:subsystems/nav.c **** static inline void nav_follow(uint8_t _ac_id, float _distance, float _height);
 204:subsystems/nav.c **** 
 205:subsystems/nav.c **** #ifdef NAV_GROUND_SPEED_PGAIN
 206:subsystems/nav.c **** /** \brief Computes cruise throttle from ground speed setpoint
 207:subsystems/nav.c ****  */
 208:subsystems/nav.c **** static void nav_ground_speed_loop( void ) {
 209:subsystems/nav.c ****   if (MINIMUM_AIRSPEED < nav_ground_speed_setpoint
 210:subsystems/nav.c ****       && nav_ground_speed_setpoint < MAXIMUM_AIRSPEED) {
 211:subsystems/nav.c ****     float err = estimator_hspeed_mod - nav_ground_speed_setpoint;
 212:subsystems/nav.c ****     v_ctl_auto_throttle_cruise_throttle += nav_ground_speed_pgain*err;
 213:subsystems/nav.c ****     Bound(v_ctl_auto_throttle_cruise_throttle, V_CTL_AUTO_THROTTLE_MIN_CRUISE_THROTTLE, V_CTL_AUTO_
 214:subsystems/nav.c ****   } else {
 215:subsystems/nav.c ****     /* Reset cruise throttle to nominal value */
 216:subsystems/nav.c ****     v_ctl_auto_throttle_cruise_throttle = V_CTL_AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE;
 217:subsystems/nav.c ****   }
 218:subsystems/nav.c **** }
 219:subsystems/nav.c **** #endif
 220:subsystems/nav.c **** 
 221:subsystems/nav.c **** static float baseleg_out_qdr;
 222:subsystems/nav.c **** static inline bool_t nav_compute_baseleg(uint8_t wp_af, uint8_t wp_td, uint8_t wp_baseleg, float ra
 223:subsystems/nav.c ****   nav_radius = radius;
 224:subsystems/nav.c **** 
 225:subsystems/nav.c ****   float x_0 = waypoints[wp_td].x - waypoints[wp_af].x;
 226:subsystems/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 227:subsystems/nav.c **** 
 228:subsystems/nav.c ****   /* Unit vector from AF to TD */
 229:subsystems/nav.c ****   float d = sqrt(x_0*x_0+y_0*y_0);
 230:subsystems/nav.c ****   float x_1 = x_0 / d;
 231:subsystems/nav.c ****   float y_1 = y_0 / d;
 232:subsystems/nav.c **** 
 233:subsystems/nav.c ****   waypoints[wp_baseleg].x = waypoints[wp_af].x + y_1 * nav_radius;
 234:subsystems/nav.c ****   waypoints[wp_baseleg].y = waypoints[wp_af].y - x_1 * nav_radius;
 235:subsystems/nav.c ****   waypoints[wp_baseleg].a = waypoints[wp_af].a;
 236:subsystems/nav.c ****   baseleg_out_qdr = M_PI - atan2(-y_1, -x_1);
 237:subsystems/nav.c ****   if (nav_radius < 0)
 238:subsystems/nav.c ****     baseleg_out_qdr += M_PI;
 239:subsystems/nav.c **** 
 240:subsystems/nav.c ****   return FALSE;
 241:subsystems/nav.c **** }
 242:subsystems/nav.c **** 
 243:subsystems/nav.c **** 
 244:subsystems/nav.c **** /* For a landing UPWIND.
 245:subsystems/nav.c ****    Computes Top Of Descent waypoint from Touch Down and Approach Fix
 246:subsystems/nav.c ****    waypoints, using glide airspeed, glide vertical speed and wind */
 247:subsystems/nav.c **** static inline bool_t compute_TOD(uint8_t _af, uint8_t _td, uint8_t _tod, float glide_airspeed, floa
 248:subsystems/nav.c ****   float td_af_x = WaypointX(_af) - WaypointX(_td);
 249:subsystems/nav.c ****   float td_af_y = WaypointY(_af) - WaypointY(_td);
 250:subsystems/nav.c ****   float td_af = sqrt( td_af_x*td_af_x + td_af_y*td_af_y);
 251:subsystems/nav.c ****   float td_tod = (WaypointAlt(_af) - WaypointAlt(_td)) / glide_vspeed * (glide_airspeed - sqrt(wind
 252:subsystems/nav.c ****   WaypointX(_tod) = WaypointX(_td) + td_af_x / td_af * td_tod;
 253:subsystems/nav.c ****   WaypointY(_tod) = WaypointY(_td) + td_af_y / td_af * td_tod;
 254:subsystems/nav.c ****   WaypointAlt(_tod) = WaypointAlt(_af);
 255:subsystems/nav.c ****   return FALSE;
 256:subsystems/nav.c **** }
 257:subsystems/nav.c **** 
 258:subsystems/nav.c **** 
 259:subsystems/nav.c **** #include "generated/flight_plan.h"
 260:subsystems/nav.c **** 
 261:subsystems/nav.c **** 
 262:subsystems/nav.c **** #ifndef LINE_START_FUNCTION
 263:subsystems/nav.c **** #define LINE_START_FUNCTION {}
 264:subsystems/nav.c **** #endif
 265:subsystems/nav.c **** #ifndef LINE_STOP_FUNCTION
 266:subsystems/nav.c **** #define LINE_STOP_FUNCTION {}
 267:subsystems/nav.c **** #endif
 268:subsystems/nav.c **** 
 269:subsystems/nav.c **** 
 270:subsystems/nav.c **** 
 271:subsystems/nav.c **** static inline void nav_follow(uint8_t _ac_id, float _distance, float _height) {
 272:subsystems/nav.c ****   struct ac_info_ * ac = get_ac_info(_ac_id);
 273:subsystems/nav.c ****   NavVerticalAutoThrottleMode(0.);
 274:subsystems/nav.c ****   NavVerticalAltitudeMode(Max(ac->alt + _height, ground_alt+SECURITY_HEIGHT), 0.);
 275:subsystems/nav.c ****   float alpha = M_PI/2 - ac->course;
 276:subsystems/nav.c ****   float ca = cos(alpha), sa = sin(alpha);
 277:subsystems/nav.c ****   float x = ac->east - _distance*ca;
 278:subsystems/nav.c ****   float y = ac->north - _distance*sa;
 279:subsystems/nav.c ****   fly_to_xy(x, y);
 280:subsystems/nav.c **** #ifdef NAV_FOLLOW_PGAIN
 281:subsystems/nav.c ****   float s = (estimator_x-x)*ca+(estimator_y-y)*sa;
 282:subsystems/nav.c ****   nav_ground_speed_setpoint = ac->gspeed + NAV_FOLLOW_PGAIN*s;
 283:subsystems/nav.c ****   nav_ground_speed_loop();
 284:subsystems/nav.c **** #endif
 285:subsystems/nav.c **** }
 286:subsystems/nav.c **** 
 287:subsystems/nav.c **** float nav_altitude = GROUND_ALT + MIN_HEIGHT_CARROT;
 288:subsystems/nav.c **** float desired_x, desired_y;
 289:subsystems/nav.c **** pprz_t nav_throttle_setpoint;
 290:subsystems/nav.c **** float nav_pitch; /* Rad */
 291:subsystems/nav.c **** float fp_pitch; /* deg */
 292:subsystems/nav.c **** 
 293:subsystems/nav.c **** 
 294:subsystems/nav.c **** /** \brief Decide if the UAV is approaching the current waypoint.
 295:subsystems/nav.c ****  *  Computes \a dist2_to_wp and compare it to square \a carrot.
 296:subsystems/nav.c ****  *  Return true if it is smaller. Else computes by scalar products if
 297:subsystems/nav.c ****  *  uav has not gone past waypoint.
 298:subsystems/nav.c ****  *  Return true if it is the case.
 299:subsystems/nav.c ****  */
 300:subsystems/nav.c **** bool_t nav_approaching_xy(float x, float y, float from_x, float from_y, float approaching_time) {
  98              		.loc 1 300 0
  99              		.cfi_startproc
 100              		@ args = 4, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL0:
 103 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 32
 106              		.loc 1 300 0
 107 0004 9946     		mov	r9, r3
 108              		.cfi_offset 14, -4
 109              		.cfi_offset 10, -8
 110              		.cfi_offset 9, -12
 111              		.cfi_offset 8, -16
 112              		.cfi_offset 7, -20
 113              		.cfi_offset 6, -24
 114              		.cfi_offset 5, -28
 115              		.cfi_offset 4, -32
 301:subsystems/nav.c ****   /** distance to waypoint in x */
 302:subsystems/nav.c ****   float pw_x = x - estimator_x;
 116              		.loc 1 302 0
 117 0006 244B     		ldr	r3, .L15
 118              	.LVL1:
 300:subsystems/nav.c **** bool_t nav_approaching_xy(float x, float y, float from_x, float from_y, float approaching_time) {
 119              		.loc 1 300 0
 120 0008 0C46     		mov	r4, r1
 121              		.loc 1 302 0
 122 000a 1968     		ldr	r1, [r3, #0]	@ float
 123              	.LVL2:
 300:subsystems/nav.c **** bool_t nav_approaching_xy(float x, float y, float from_x, float from_y, float approaching_time) {
 124              		.loc 1 300 0
 125 000c 1646     		mov	r6, r2
 126 000e 0546     		mov	r5, r0
 127              		.loc 1 302 0
 128 0010 FFF7FEFF 		bl	__aeabi_fsub
 129              	.LVL3:
 303:subsystems/nav.c ****   /** distance to waypoint in y */
 304:subsystems/nav.c ****   float pw_y = y - estimator_y;
 130              		.loc 1 304 0
 131 0014 214B     		ldr	r3, .L15+4
 302:subsystems/nav.c ****   float pw_x = x - estimator_x;
 132              		.loc 1 302 0
 133 0016 8046     		mov	r8, r0
 134              		.loc 1 304 0
 135 0018 1968     		ldr	r1, [r3, #0]	@ float
 136 001a 2046     		mov	r0, r4
 137 001c FFF7FEFF 		bl	__aeabi_fsub
 305:subsystems/nav.c **** 
 306:subsystems/nav.c ****   dist2_to_wp = pw_x*pw_x + pw_y *pw_y;
 138              		.loc 1 306 0
 139 0020 4146     		mov	r1, r8
 304:subsystems/nav.c ****   float pw_y = y - estimator_y;
 140              		.loc 1 304 0
 141 0022 0746     		mov	r7, r0
 142              		.loc 1 306 0
 143 0024 4046     		mov	r0, r8
 144 0026 FFF7FEFF 		bl	__aeabi_fmul
 145 002a 3946     		mov	r1, r7
 146 002c 8246     		mov	sl, r0
 147 002e 3846     		mov	r0, r7
 148 0030 FFF7FEFF 		bl	__aeabi_fmul
 149 0034 0146     		mov	r1, r0
 150 0036 5046     		mov	r0, sl
 151 0038 FFF7FEFF 		bl	__aeabi_fadd
 152 003c 184B     		ldr	r3, .L15+8
 153 003e 8246     		mov	sl, r0
 154 0040 1860     		str	r0, [r3, #0]	@ float
 307:subsystems/nav.c ****   float min_dist = approaching_time * estimator_hspeed_mod;
 155              		.loc 1 307 0
 156 0042 184B     		ldr	r3, .L15+12
 157 0044 0898     		ldr	r0, [sp, #32]	@ float
 158 0046 1968     		ldr	r1, [r3, #0]	@ float
 159 0048 FFF7FEFF 		bl	__aeabi_fmul
 308:subsystems/nav.c ****   if (dist2_to_wp < min_dist*min_dist)
 160              		.loc 1 308 0
 161 004c 0146     		mov	r1, r0
 162 004e FFF7FEFF 		bl	__aeabi_fmul
 163 0052 0146     		mov	r1, r0
 164 0054 5046     		mov	r0, sl
 165 0056 FFF7FEFF 		bl	__aeabi_fcmplt
 166 005a 10B1     		cbz	r0, .L13
 167 005c 0120     		movs	r0, #1
 168 005e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 169              	.L13:
 309:subsystems/nav.c ****     return TRUE;
 310:subsystems/nav.c **** 
 311:subsystems/nav.c ****   float scal_prod = (x - from_x) * pw_x + (y - from_y) * pw_y;
 312:subsystems/nav.c **** 
 313:subsystems/nav.c ****   return (scal_prod < 0.);
 170              		.loc 1 313 0
 171 0062 3146     		mov	r1, r6
 172 0064 2846     		mov	r0, r5
 173 0066 FFF7FEFF 		bl	__aeabi_fsub
 174 006a 4146     		mov	r1, r8
 175 006c FFF7FEFF 		bl	__aeabi_fmul
 176 0070 4946     		mov	r1, r9
 177 0072 0546     		mov	r5, r0
 178              	.LVL4:
 179 0074 2046     		mov	r0, r4
 180 0076 FFF7FEFF 		bl	__aeabi_fsub
 181 007a 3946     		mov	r1, r7
 182 007c FFF7FEFF 		bl	__aeabi_fmul
 183 0080 0146     		mov	r1, r0
 184 0082 2846     		mov	r0, r5
 185 0084 FFF7FEFF 		bl	__aeabi_fadd
 186 0088 0021     		movs	r1, #0
 187 008a FFF7FEFF 		bl	__aeabi_fcmplt
 188 008e 0038     		subs	r0, r0, #0
 189 0090 18BF     		it	ne
 190 0092 0120     		movne	r0, #1
 314:subsystems/nav.c **** }
 191              		.loc 1 314 0
 192 0094 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 193              	.L16:
 194              		.align	2
 195              	.L15:
 196 0098 00000000 		.word	estimator_x
 197 009c 00000000 		.word	estimator_y
 198 00a0 00000000 		.word	.LANCHOR7
 199 00a4 00000000 		.word	estimator_hspeed_mod
 200              		.cfi_endproc
 201              	.LFE40:
 203              		.global	__aeabi_fcmpgt
 204              		.section	.text.compute_dist2_to_home,"ax",%progbits
 205              		.align	1
 206              		.global	compute_dist2_to_home
 207              		.thumb
 208              		.thumb_func
 210              	compute_dist2_to_home:
 211              	.LFB45:
 212              		.file 2 "./subsystems/navigation/common_nav.c"
   1:./subsystems/navigation/common_nav.c **** /*
   2:./subsystems/navigation/common_nav.c ****  * $Id$
   3:./subsystems/navigation/common_nav.c ****  *
   4:./subsystems/navigation/common_nav.c ****  * Copyright (C) 2007-2009  ENAC, Pascal Brisset, Antoine Drouin
   5:./subsystems/navigation/common_nav.c ****  *
   6:./subsystems/navigation/common_nav.c ****  * This file is part of paparazzi.
   7:./subsystems/navigation/common_nav.c ****  *
   8:./subsystems/navigation/common_nav.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:./subsystems/navigation/common_nav.c ****  * it under the terms of the GNU General Public License as published by
  10:./subsystems/navigation/common_nav.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:./subsystems/navigation/common_nav.c ****  * any later version.
  12:./subsystems/navigation/common_nav.c ****  *
  13:./subsystems/navigation/common_nav.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:./subsystems/navigation/common_nav.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:./subsystems/navigation/common_nav.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:./subsystems/navigation/common_nav.c ****  * GNU General Public License for more details.
  17:./subsystems/navigation/common_nav.c ****  *
  18:./subsystems/navigation/common_nav.c ****  * You should have received a copy of the GNU General Public License
  19:./subsystems/navigation/common_nav.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:./subsystems/navigation/common_nav.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:./subsystems/navigation/common_nav.c ****  * Boston, MA 02111-1307, USA.
  22:./subsystems/navigation/common_nav.c ****  *
  23:./subsystems/navigation/common_nav.c ****  */
  24:./subsystems/navigation/common_nav.c **** 
  25:./subsystems/navigation/common_nav.c **** #include "subsystems/navigation/common_nav.h"
  26:./subsystems/navigation/common_nav.c **** #include "estimator.h"
  27:./subsystems/navigation/common_nav.c **** #include "generated/flight_plan.h"
  28:./subsystems/navigation/common_nav.c **** #include "subsystems/gps.h"
  29:./subsystems/navigation/common_nav.c **** #include "math/pprz_geodetic_float.h"
  30:./subsystems/navigation/common_nav.c **** 
  31:./subsystems/navigation/common_nav.c **** float dist2_to_home;
  32:./subsystems/navigation/common_nav.c **** float dist2_to_wp;
  33:./subsystems/navigation/common_nav.c **** 
  34:./subsystems/navigation/common_nav.c **** bool_t too_far_from_home;
  35:./subsystems/navigation/common_nav.c **** 
  36:./subsystems/navigation/common_nav.c **** const uint8_t nb_waypoint = NB_WAYPOINT;
  37:./subsystems/navigation/common_nav.c **** struct point waypoints[NB_WAYPOINT] = WAYPOINTS;
  38:./subsystems/navigation/common_nav.c **** 
  39:./subsystems/navigation/common_nav.c **** float ground_alt;
  40:./subsystems/navigation/common_nav.c **** 
  41:./subsystems/navigation/common_nav.c **** int32_t nav_utm_east0 = NAV_UTM_EAST0;
  42:./subsystems/navigation/common_nav.c **** int32_t nav_utm_north0 = NAV_UTM_NORTH0;
  43:./subsystems/navigation/common_nav.c **** uint8_t nav_utm_zone0 = NAV_UTM_ZONE0;
  44:./subsystems/navigation/common_nav.c **** float max_dist_from_home = MAX_DIST_FROM_HOME;
  45:./subsystems/navigation/common_nav.c **** 
  46:./subsystems/navigation/common_nav.c **** /** \brief Computes square distance to the HOME waypoint potentially sets
  47:./subsystems/navigation/common_nav.c ****  * \a too_far_from_home
  48:./subsystems/navigation/common_nav.c ****  */
  49:./subsystems/navigation/common_nav.c **** void compute_dist2_to_home(void) {
 213              		.loc 2 49 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 70B5     		push	{r4, r5, r6, lr}
 218              	.LCFI1:
 219              		.cfi_def_cfa_offset 16
  50:./subsystems/navigation/common_nav.c ****   float ph_x = waypoints[WP_HOME].x - estimator_x;
 220              		.loc 2 50 0
 221 0002 134B     		ldr	r3, .L21
 222 0004 134C     		ldr	r4, .L21+4
 223              		.cfi_offset 14, -4
 224              		.cfi_offset 6, -8
 225              		.cfi_offset 5, -12
 226              		.cfi_offset 4, -16
 227 0006 1968     		ldr	r1, [r3, #0]	@ float
 228 0008 E068     		ldr	r0, [r4, #12]	@ float
 229 000a FFF7FEFF 		bl	__aeabi_fsub
  51:./subsystems/navigation/common_nav.c ****   float ph_y = waypoints[WP_HOME].y - estimator_y;
 230              		.loc 2 51 0
 231 000e 124B     		ldr	r3, .L21+8
  50:./subsystems/navigation/common_nav.c ****   float ph_x = waypoints[WP_HOME].x - estimator_x;
 232              		.loc 2 50 0
 233 0010 0646     		mov	r6, r0
 234              		.loc 2 51 0
 235 0012 1968     		ldr	r1, [r3, #0]	@ float
 236 0014 2069     		ldr	r0, [r4, #16]	@ float
 237 0016 FFF7FEFF 		bl	__aeabi_fsub
  52:./subsystems/navigation/common_nav.c ****   dist2_to_home = ph_x*ph_x + ph_y *ph_y;
 238              		.loc 2 52 0
 239 001a 3146     		mov	r1, r6
  51:./subsystems/navigation/common_nav.c ****   float ph_y = waypoints[WP_HOME].y - estimator_y;
 240              		.loc 2 51 0
 241 001c 0546     		mov	r5, r0
 242              		.loc 2 52 0
 243 001e 3046     		mov	r0, r6
 244 0020 FFF7FEFF 		bl	__aeabi_fmul
 245 0024 2946     		mov	r1, r5
 246 0026 0446     		mov	r4, r0
 247 0028 2846     		mov	r0, r5
 248 002a FFF7FEFF 		bl	__aeabi_fmul
 249 002e 0146     		mov	r1, r0
 250 0030 2046     		mov	r0, r4
 251 0032 FFF7FEFF 		bl	__aeabi_fadd
 252 0036 094B     		ldr	r3, .L21+12
  53:./subsystems/navigation/common_nav.c ****   too_far_from_home = dist2_to_home > (MAX_DIST_FROM_HOME*MAX_DIST_FROM_HOME);
 253              		.loc 2 53 0
 254 0038 094C     		ldr	r4, .L21+16
  52:./subsystems/navigation/common_nav.c ****   dist2_to_home = ph_x*ph_x + ph_y *ph_y;
 255              		.loc 2 52 0
 256 003a 1860     		str	r0, [r3, #0]	@ float
 257              		.loc 2 53 0
 258 003c 0023     		movs	r3, #0
 259 003e 2370     		strb	r3, [r4, #0]
 260 0040 0849     		ldr	r1, .L21+20
 261 0042 FFF7FEFF 		bl	__aeabi_fcmpgt
 262 0046 08B1     		cbz	r0, .L20
 263 0048 0123     		movs	r3, #1
 264 004a 2370     		strb	r3, [r4, #0]
 265              	.L20:
 266 004c 70BD     		pop	{r4, r5, r6, pc}
 267              	.L22:
 268 004e 00BF     		.align	2
 269              	.L21:
 270 0050 00000000 		.word	estimator_x
 271 0054 00000000 		.word	.LANCHOR8
 272 0058 00000000 		.word	estimator_y
 273 005c 00000000 		.word	.LANCHOR9
 274 0060 00000000 		.word	.LANCHOR10
 275 0064 00247449 		.word	1232348160
 276              		.cfi_endproc
 277              	.LFE45:
 279              		.section	.text.nav_update_waypoints_alt,"ax",%progbits
 280              		.align	1
 281              		.global	nav_update_waypoints_alt
 282              		.thumb
 283              		.thumb_func
 285              	nav_update_waypoints_alt:
 286              	.LFB47:
  54:./subsystems/navigation/common_nav.c **** #if defined InAirspace
  55:./subsystems/navigation/common_nav.c ****   too_far_from_home = too_far_from_home || !(InAirspace(estimator_x, estimator_y));
  56:./subsystems/navigation/common_nav.c **** #endif
  57:./subsystems/navigation/common_nav.c **** }
  58:./subsystems/navigation/common_nav.c **** 
  59:./subsystems/navigation/common_nav.c **** 
  60:./subsystems/navigation/common_nav.c **** static float previous_ground_alt;
  61:./subsystems/navigation/common_nav.c **** 
  62:./subsystems/navigation/common_nav.c **** /** Reset the geographic reference to the current GPS fix */
  63:./subsystems/navigation/common_nav.c **** unit_t nav_reset_reference( void ) {
  64:./subsystems/navigation/common_nav.c **** #ifdef GPS_USE_LATLONG
  65:./subsystems/navigation/common_nav.c ****   /* Set the real UTM zone */
  66:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = (DegOfRad(gps.lla_pos.lon/1e7)+180) / 6 + 1;
  67:./subsystems/navigation/common_nav.c **** 
  68:./subsystems/navigation/common_nav.c ****   /* Recompute UTM coordinates in this zone */
  69:./subsystems/navigation/common_nav.c ****   struct LlaCoor_f lla;
  70:./subsystems/navigation/common_nav.c ****   lla.lat = gps.lla_pos.lat/1e7;
  71:./subsystems/navigation/common_nav.c ****   lla.lon = gps.lla_pos.lon/1e7;
  72:./subsystems/navigation/common_nav.c ****   struct UtmCoor_f utm;
  73:./subsystems/navigation/common_nav.c ****   utm.zone = nav_utm_zone0;
  74:./subsystems/navigation/common_nav.c ****   utm_of_lla_f(&utm, &lla);
  75:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = utm.east;
  76:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm.north;
  77:./subsystems/navigation/common_nav.c **** #else
  78:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = gps.utm_pos.zone;
  79:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = gps.utm_pos.east/100;
  80:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = gps.utm_pos.north/100;
  81:./subsystems/navigation/common_nav.c **** #endif
  82:./subsystems/navigation/common_nav.c **** 
  83:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
  84:./subsystems/navigation/common_nav.c ****   ground_alt = gps.hmsl/1000.;
  85:./subsystems/navigation/common_nav.c ****   return 0;
  86:./subsystems/navigation/common_nav.c **** }
  87:./subsystems/navigation/common_nav.c **** 
  88:./subsystems/navigation/common_nav.c **** /** Shift altitude of the waypoint according to a new ground altitude */
  89:./subsystems/navigation/common_nav.c **** unit_t nav_update_waypoints_alt( void ) {
 287              		.loc 2 89 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 38B5     		push	{r3, r4, r5, lr}
 292              	.LCFI2:
 293              		.cfi_def_cfa_offset 16
  90:./subsystems/navigation/common_nav.c ****   uint8_t i;
  91:./subsystems/navigation/common_nav.c ****   for(i = 0; i < NB_WAYPOINT; i++) {
  92:./subsystems/navigation/common_nav.c ****     waypoints[i].a += ground_alt - previous_ground_alt;
 294              		.loc 2 92 0
 295 0002 0A4B     		ldr	r3, .L25
 296              		.cfi_offset 14, -4
 297              		.cfi_offset 5, -8
 298              		.cfi_offset 4, -12
 299              		.cfi_offset 3, -16
 300 0004 0A4C     		ldr	r4, .L25+4
 301 0006 1868     		ldr	r0, [r3, #0]	@ float
 302 0008 0A4B     		ldr	r3, .L25+8
 303 000a 1968     		ldr	r1, [r3, #0]	@ float
 304 000c FFF7FEFF 		bl	__aeabi_fsub
 305 0010 0546     		mov	r5, r0
 306 0012 2946     		mov	r1, r5
 307 0014 A068     		ldr	r0, [r4, #8]	@ float
 308 0016 FFF7FEFF 		bl	__aeabi_fadd
 309 001a 2946     		mov	r1, r5
 310 001c A060     		str	r0, [r4, #8]	@ float
 311 001e 6069     		ldr	r0, [r4, #20]	@ float
 312 0020 FFF7FEFF 		bl	__aeabi_fadd
 313 0024 6061     		str	r0, [r4, #20]	@ float
  93:./subsystems/navigation/common_nav.c ****   }
  94:./subsystems/navigation/common_nav.c ****   return 0;
  95:./subsystems/navigation/common_nav.c **** }
 314              		.loc 2 95 0
 315 0026 0020     		movs	r0, #0
 316 0028 38BD     		pop	{r3, r4, r5, pc}
 317              	.L26:
 318 002a 00BF     		.align	2
 319              	.L25:
 320 002c 00000000 		.word	.LANCHOR11
 321 0030 00000000 		.word	.LANCHOR8
 322 0034 00000000 		.word	.LANCHOR12
 323              		.cfi_endproc
 324              	.LFE47:
 326              		.section	.text.common_nav_periodic_task_4Hz,"ax",%progbits
 327              		.align	1
 328              		.global	common_nav_periodic_task_4Hz
 329              		.thumb
 330              		.thumb_func
 332              	common_nav_periodic_task_4Hz:
 333              	.LFB48:
  96:./subsystems/navigation/common_nav.c **** 
  97:./subsystems/navigation/common_nav.c **** void common_nav_periodic_task_4Hz() {
 334              		.loc 2 97 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LBB2:
  98:./subsystems/navigation/common_nav.c ****   RunOnceEvery(4, { stage_time++;  block_time++; });
 340              		.loc 2 98 0
 341 0000 094B     		ldr	r3, .L30
 342 0002 1A88     		ldrh	r2, [r3, #0]
 343 0004 0132     		adds	r2, r2, #1
 344 0006 92B2     		uxth	r2, r2
 345 0008 032A     		cmp	r2, #3
 346 000a 1A80     		strh	r2, [r3, #0]	@ movhi
 347 000c 0AD9     		bls	.L29
 348 000e 4FF00002 		mov	r2, #0	@ movhi
 349 0012 1A80     		strh	r2, [r3, #0]	@ movhi
 350 0014 054B     		ldr	r3, .L30+4
 351 0016 1A88     		ldrh	r2, [r3, #0]
 352 0018 0132     		adds	r2, r2, #1
 353 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 354 001c 044B     		ldr	r3, .L30+8
 355 001e 1A88     		ldrh	r2, [r3, #0]
 356 0020 0132     		adds	r2, r2, #1
 357 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 358              	.L29:
 359 0024 7047     		bx	lr
 360              	.L31:
 361 0026 00BF     		.align	2
 362              	.L30:
 363 0028 00000000 		.word	.LANCHOR13
 364 002c 00000000 		.word	stage_time
 365 0030 00000000 		.word	block_time
 366              	.LBE2:
 367              		.cfi_endproc
 368              	.LFE48:
 370              		.global	__aeabi_i2f
 371              		.section	.text.nav_move_waypoint,"ax",%progbits
 372              		.align	1
 373              		.global	nav_move_waypoint
 374              		.thumb
 375              		.thumb_func
 377              	nav_move_waypoint:
 378              	.LFB49:
  99:./subsystems/navigation/common_nav.c **** }
 100:./subsystems/navigation/common_nav.c **** 
 101:./subsystems/navigation/common_nav.c **** void nav_move_waypoint(uint8_t wp_id, float ux, float uy, float alt) {
 379              		.loc 2 101 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL5:
 102:./subsystems/navigation/common_nav.c ****   if (wp_id < nb_waypoint) {
 384              		.loc 2 102 0
 385 0000 0128     		cmp	r0, #1
 101:./subsystems/navigation/common_nav.c **** void nav_move_waypoint(uint8_t wp_id, float ux, float uy, float alt) {
 386              		.loc 2 101 0
 387 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 388              	.LCFI3:
 389              		.cfi_def_cfa_offset 32
 101:./subsystems/navigation/common_nav.c **** void nav_move_waypoint(uint8_t wp_id, float ux, float uy, float alt) {
 390              		.loc 2 101 0
 391 0006 0446     		mov	r4, r0
 392              		.cfi_offset 14, -4
 393              		.cfi_offset 10, -8
 394              		.cfi_offset 9, -12
 395              		.cfi_offset 8, -16
 396              		.cfi_offset 7, -20
 397              		.cfi_offset 6, -24
 398              		.cfi_offset 5, -28
 399              		.cfi_offset 4, -32
 400 0008 0E46     		mov	r6, r1
 401 000a 1546     		mov	r5, r2
 402 000c 9A46     		mov	sl, r3
 403              		.loc 2 102 0
 404 000e 4ED8     		bhi	.L42
 405              	.LVL6:
 406              	.LBB3:
 103:./subsystems/navigation/common_nav.c ****     float dx, dy;
 104:./subsystems/navigation/common_nav.c ****     dx = ux - nav_utm_east0 - waypoints[WP_HOME].x;
 407              		.loc 2 104 0
 408 0010 284B     		ldr	r3, .L50
 409 0012 DFF8AC90 		ldr	r9, .L50+12
 410 0016 1868     		ldr	r0, [r3, #0]
 411 0018 FFF7FEFF 		bl	__aeabi_i2f
 412 001c D9F80C80 		ldr	r8, [r9, #12]	@ float
 413 0020 0146     		mov	r1, r0
 414 0022 3046     		mov	r0, r6
 415 0024 FFF7FEFF 		bl	__aeabi_fsub
 416 0028 4146     		mov	r1, r8
 417 002a FFF7FEFF 		bl	__aeabi_fsub
 105:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 418              		.loc 2 105 0
 419 002e 224B     		ldr	r3, .L50+4
 104:./subsystems/navigation/common_nav.c ****     dx = ux - nav_utm_east0 - waypoints[WP_HOME].x;
 420              		.loc 2 104 0
 421 0030 0746     		mov	r7, r0
 422              	.LVL7:
 423              		.loc 2 105 0
 424 0032 1868     		ldr	r0, [r3, #0]
 425 0034 FFF7FEFF 		bl	__aeabi_i2f
 426 0038 0146     		mov	r1, r0
 427 003a 2846     		mov	r0, r5
 428 003c FFF7FEFF 		bl	__aeabi_fsub
 429 0040 D9F81010 		ldr	r1, [r9, #16]	@ float
 430 0044 FFF7FEFF 		bl	__aeabi_fsub
 106:./subsystems/navigation/common_nav.c ****     BoundAbs(dx, max_dist_from_home);
 431              		.loc 2 106 0
 432 0048 1C4B     		ldr	r3, .L50+8
 105:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 433              		.loc 2 105 0
 434 004a 0646     		mov	r6, r0
 435              	.LVL8:
 436              		.loc 2 106 0
 437 004c 1D68     		ldr	r5, [r3, #0]	@ float
 438              	.LVL9:
 439 004e 3846     		mov	r0, r7
 440 0050 2946     		mov	r1, r5
 441 0052 FFF7FEFF 		bl	__aeabi_fcmpgt
 442 0056 08B1     		cbz	r0, .L47
 443 0058 2F46     		mov	r7, r5
 444 005a 07E0     		b	.L36
 445              	.L47:
 446 005c 05F10049 		add	r9, r5, #-2147483648
 447              	.LVL10:
 448 0060 3846     		mov	r0, r7
 449 0062 4946     		mov	r1, r9
 450 0064 FFF7FEFF 		bl	__aeabi_fcmplt
 451 0068 00B1     		cbz	r0, .L36
 452 006a 4F46     		mov	r7, r9
 453              	.LVL11:
 454              	.L36:
 107:./subsystems/navigation/common_nav.c ****     BoundAbs(dy, max_dist_from_home);
 455              		.loc 2 107 0
 456 006c 3046     		mov	r0, r6
 457 006e 2946     		mov	r1, r5
 458 0070 FFF7FEFF 		bl	__aeabi_fcmpgt
 459 0074 30B9     		cbnz	r0, .L49
 460              	.LVL12:
 461 0076 05F10045 		add	r5, r5, #-2147483648
 462              	.LVL13:
 463 007a 3046     		mov	r0, r6
 464 007c 2946     		mov	r1, r5
 465 007e FFF7FEFF 		bl	__aeabi_fcmplt
 466 0082 00B1     		cbz	r0, .L40
 467              	.LVL14:
 468              	.L49:
 469 0084 2E46     		mov	r6, r5
 470              	.LVL15:
 471              	.L40:
 108:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].x = waypoints[WP_HOME].x + dx;
 472              		.loc 2 108 0
 473 0086 3946     		mov	r1, r7
 474 0088 4046     		mov	r0, r8
 475 008a FFF7FEFF 		bl	__aeabi_fadd
 476 008e 4FF00C09 		mov	r9, #12
 477 0092 09FB04F9 		mul	r9, r9, r4
 478 0096 0A4D     		ldr	r5, .L50+12
 479              	.LVL16:
 109:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].y = waypoints[WP_HOME].y + dy;
 480              		.loc 2 109 0
 481 0098 3146     		mov	r1, r6
 108:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].x = waypoints[WP_HOME].x + dx;
 482              		.loc 2 108 0
 483 009a 49F80500 		str	r0, [r9, r5]	@ float
 484              		.loc 2 109 0
 485 009e 2869     		ldr	r0, [r5, #16]	@ float
 486 00a0 FFF7FEFF 		bl	__aeabi_fadd
 108:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].x = waypoints[WP_HOME].x + dx;
 487              		.loc 2 108 0
 488 00a4 09EB0504 		add	r4, r9, r5
 489              	.LVL17:
 490              		.loc 2 109 0
 491 00a8 6060     		str	r0, [r4, #4]	@ float
 110:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].a = alt;
 492              		.loc 2 110 0
 493 00aa C4F808A0 		str	sl, [r4, #8]	@ float
 494              	.LVL18:
 495              	.L42:
 496 00ae BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 497              	.L51:
 498 00b2 00BF     		.align	2
 499              	.L50:
 500 00b4 00000000 		.word	.LANCHOR14
 501 00b8 00000000 		.word	.LANCHOR15
 502 00bc 00000000 		.word	.LANCHOR16
 503 00c0 00000000 		.word	.LANCHOR8
 504              	.LBE3:
 505              		.cfi_endproc
 506              	.LFE49:
 508              		.section	.text.nav_set_altitude,"ax",%progbits
 509              		.align	1
 510              		.thumb
 511              		.thumb_func
 513              	nav_set_altitude:
 514              	.LFB50:
 315:subsystems/nav.c **** 
 316:subsystems/nav.c **** 
 317:subsystems/nav.c **** /**
 318:subsystems/nav.c ****  *  \brief Computes \a desired_x, \a desired_y and \a desired_course.
 319:subsystems/nav.c ****  */
 320:subsystems/nav.c **** //static inline void fly_to_xy(float x, float y) {
 321:subsystems/nav.c **** void fly_to_xy(float x, float y) {
 322:subsystems/nav.c ****   desired_x = x;
 323:subsystems/nav.c ****   desired_y = y;
 324:subsystems/nav.c ****   if (nav_mode == NAV_MODE_COURSE) {
 325:subsystems/nav.c ****     h_ctl_course_setpoint = atan2(x - estimator_x, y - estimator_y);
 326:subsystems/nav.c ****     if (h_ctl_course_setpoint < 0.)
 327:subsystems/nav.c ****       h_ctl_course_setpoint += 2 * M_PI;
 328:subsystems/nav.c ****     lateral_mode = LATERAL_MODE_COURSE;
 329:subsystems/nav.c ****   } else {
 330:subsystems/nav.c ****     float diff = atan2(x - estimator_x, y - estimator_y) - estimator_hspeed_dir;
 331:subsystems/nav.c ****     NormRadAngle(diff);
 332:subsystems/nav.c ****     BoundAbs(diff,M_PI/2.);
 333:subsystems/nav.c ****     float s = sin(diff);
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 335:subsystems/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 336:subsystems/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 337:subsystems/nav.c ****   }
 338:subsystems/nav.c **** }
 339:subsystems/nav.c **** 
 340:subsystems/nav.c **** /**
 341:subsystems/nav.c ****  *  \brief Computes the carrot position along the desired segment.
 342:subsystems/nav.c ****  */
 343:subsystems/nav.c **** void nav_route_xy(float last_wp_x, float last_wp_y, float wp_x, float wp_y) {
 344:subsystems/nav.c ****   float leg_x = wp_x - last_wp_x;
 345:subsystems/nav.c ****   float leg_y = wp_y - last_wp_y;
 346:subsystems/nav.c ****   float leg2 = Max(leg_x * leg_x + leg_y * leg_y, 1.);
 347:subsystems/nav.c ****   nav_leg_progress = ((estimator_x - last_wp_x) * leg_x + (estimator_y - last_wp_y) * leg_y) / leg2
 348:subsystems/nav.c ****   nav_leg_length = sqrt(leg2);
 349:subsystems/nav.c **** 
 350:subsystems/nav.c ****   /** distance of carrot (in meter) */
 351:subsystems/nav.c ****   float carrot = CARROT * NOMINAL_AIRSPEED;
 352:subsystems/nav.c **** 
 353:subsystems/nav.c ****   nav_leg_progress += Max(carrot / nav_leg_length, 0.);
 354:subsystems/nav.c ****   nav_in_segment = TRUE;
 355:subsystems/nav.c ****   nav_segment_x_1 = last_wp_x;
 356:subsystems/nav.c ****   nav_segment_y_1 = last_wp_y;
 357:subsystems/nav.c ****   nav_segment_x_2 = wp_x;
 358:subsystems/nav.c ****   nav_segment_y_2 = wp_y;
 359:subsystems/nav.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 360:subsystems/nav.c **** 
 361:subsystems/nav.c ****   fly_to_xy(last_wp_x + nav_leg_progress*leg_x +nav_shift*leg_y/nav_leg_length, last_wp_y + nav_leg
 362:subsystems/nav.c **** }
 363:subsystems/nav.c **** 
 364:subsystems/nav.c **** #include "subsystems/navigation/common_nav.c"
 365:subsystems/nav.c **** 
 366:subsystems/nav.c **** #ifndef FAILSAFE_HOME_RADIUS
 367:subsystems/nav.c **** #define FAILSAFE_HOME_RADIUS DEFAULT_CIRCLE_RADIUS
 368:subsystems/nav.c **** #endif
 369:subsystems/nav.c **** 
 370:subsystems/nav.c **** static void nav_set_altitude(void) {
 515              		.loc 1 370 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519 0000 38B5     		push	{r3, r4, r5, lr}
 520              	.LCFI4:
 521              		.cfi_def_cfa_offset 16
 371:subsystems/nav.c ****   static float last_nav_altitude;
 372:subsystems/nav.c ****   if (fabs(nav_altitude - last_nav_altitude) > 1.) {
 522              		.loc 1 372 0
 523 0002 0B4B     		ldr	r3, .L57
 524              		.cfi_offset 14, -4
 525              		.cfi_offset 5, -8
 526              		.cfi_offset 4, -12
 527              		.cfi_offset 3, -16
 528 0004 0B4D     		ldr	r5, .L57+4
 529 0006 1C68     		ldr	r4, [r3, #0]	@ float
 530 0008 2968     		ldr	r1, [r5, #0]	@ float
 531 000a 2046     		mov	r0, r4
 532 000c FFF7FEFF 		bl	__aeabi_fsub
 533 0010 4FF07E51 		mov	r1, #1065353216
 534 0014 20F00040 		bic	r0, r0, #-2147483648
 535 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 536 001c 10B1     		cbz	r0, .L53
 373:subsystems/nav.c ****     flight_altitude = nav_altitude;
 537              		.loc 1 373 0
 538 001e 064B     		ldr	r3, .L57+8
 374:subsystems/nav.c ****     last_nav_altitude = nav_altitude;
 539              		.loc 1 374 0
 540 0020 2C60     		str	r4, [r5, #0]	@ float
 373:subsystems/nav.c ****     flight_altitude = nav_altitude;
 541              		.loc 1 373 0
 542 0022 1C60     		str	r4, [r3, #0]	@ float
 543              	.L53:
 375:subsystems/nav.c ****   }
 376:subsystems/nav.c ****   v_ctl_altitude_setpoint = flight_altitude;
 544              		.loc 1 376 0
 545 0024 044B     		ldr	r3, .L57+8
 546 0026 1A68     		ldr	r2, [r3, #0]	@ float
 547 0028 044B     		ldr	r3, .L57+12
 548 002a 1A60     		str	r2, [r3, #0]	@ float
 377:subsystems/nav.c **** }
 549              		.loc 1 377 0
 550 002c 38BD     		pop	{r3, r4, r5, pc}
 551              	.L58:
 552 002e 00BF     		.align	2
 553              	.L57:
 554 0030 00000000 		.word	.LANCHOR17
 555 0034 00000000 		.word	.LANCHOR18
 556 0038 00000000 		.word	.LANCHOR19
 557 003c 00000000 		.word	v_ctl_altitude_setpoint
 558              		.cfi_endproc
 559              	.LFE50:
 561              		.section	.text.nav_init,"ax",%progbits
 562              		.align	1
 563              		.global	nav_init
 564              		.thumb
 565              		.thumb_func
 567              	nav_init:
 568              	.LFB53:
 378:subsystems/nav.c **** 
 379:subsystems/nav.c **** /** \brief Home mode navigation (circle around HOME) */
 380:subsystems/nav.c **** void nav_home(void) {
 381:subsystems/nav.c ****   NavCircleWaypoint(WP_HOME, FAILSAFE_HOME_RADIUS);
 382:subsystems/nav.c ****   /** Nominal speed */
 383:subsystems/nav.c ****   nav_pitch = 0.;
 384:subsystems/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_ALT;
 385:subsystems/nav.c ****   nav_altitude = ground_alt+SECURITY_HEIGHT;
 386:subsystems/nav.c ****   compute_dist2_to_home();
 387:subsystems/nav.c ****   dist2_to_wp = dist2_to_home;
 388:subsystems/nav.c ****   nav_set_altitude();
 389:subsystems/nav.c **** }
 390:subsystems/nav.c **** 
 391:subsystems/nav.c **** /**
 392:subsystems/nav.c ****  *  \brief Navigation main: call to the code generated from the XML flight
 393:subsystems/nav.c ****  * plan
 394:subsystems/nav.c ****  */
 395:subsystems/nav.c **** void nav_periodic_task(void) {
 396:subsystems/nav.c ****   nav_survey_active = FALSE;
 397:subsystems/nav.c **** 
 398:subsystems/nav.c ****   compute_dist2_to_home();
 399:subsystems/nav.c ****   dist2_to_wp = 0.;
 400:subsystems/nav.c **** 
 401:subsystems/nav.c ****   auto_nav(); /* From flight_plan.h */
 402:subsystems/nav.c **** 
 403:subsystems/nav.c ****   h_ctl_course_pre_bank = nav_in_circle ? circle_bank : 0;
 404:subsystems/nav.c **** 
 405:subsystems/nav.c **** #ifdef AGR_CLIMB
 406:subsystems/nav.c ****   if ( v_ctl_mode == V_CTL_MODE_AUTO_CLIMB)
 407:subsystems/nav.c ****     v_ctl_auto_throttle_submode =  V_CTL_AUTO_THROTTLE_STANDARD;
 408:subsystems/nav.c **** #endif
 409:subsystems/nav.c **** 
 410:subsystems/nav.c ****   nav_set_altitude();
 411:subsystems/nav.c **** }
 412:subsystems/nav.c **** 
 413:subsystems/nav.c **** 
 414:subsystems/nav.c **** /**
 415:subsystems/nav.c ****  *  \brief Navigation Initialisation
 416:subsystems/nav.c ****  */
 417:subsystems/nav.c **** void nav_init(void) {
 569              		.loc 1 417 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 418:subsystems/nav.c ****   nav_block = 0;
 574              		.loc 1 418 0
 575 0000 0A4A     		ldr	r2, .L61
 576 0002 0023     		movs	r3, #0
 577 0004 1370     		strb	r3, [r2, #0]
 419:subsystems/nav.c ****   nav_stage = 0;
 578              		.loc 1 419 0
 579 0006 0A4A     		ldr	r2, .L61+4
 580 0008 1370     		strb	r3, [r2, #0]
 420:subsystems/nav.c ****   ground_alt = GROUND_ALT;
 581              		.loc 1 420 0
 582 000a 0A4A     		ldr	r2, .L61+8
 583 000c 0A4B     		ldr	r3, .L61+12
 584 000e 1A60     		str	r2, [r3, #0]	@ float
 421:subsystems/nav.c ****   nav_glide_pitch_trim = NAV_GLIDE_PITCH_TRIM;
 585              		.loc 1 421 0
 586 0010 0A4B     		ldr	r3, .L61+16
 587 0012 0022     		movs	r2, #0
 588 0014 1A60     		str	r2, [r3, #0]	@ float
 422:subsystems/nav.c ****   nav_radius = DEFAULT_CIRCLE_RADIUS;
 589              		.loc 1 422 0
 590 0016 0A4A     		ldr	r2, .L61+20
 591 0018 0A4B     		ldr	r3, .L61+24
 592 001a 1A60     		str	r2, [r3, #0]	@ float
 423:subsystems/nav.c ****   nav_survey_shift = 2*DEFAULT_CIRCLE_RADIUS;
 593              		.loc 1 423 0
 594 001c 0A4A     		ldr	r2, .L61+28
 595 001e 0B4B     		ldr	r3, .L61+32
 596 0020 1A60     		str	r2, [r3, #0]	@ float
 424:subsystems/nav.c ****   nav_mode = NAV_MODE_COURSE;
 597              		.loc 1 424 0
 598 0022 0B4B     		ldr	r3, .L61+36
 599 0024 0222     		movs	r2, #2
 600 0026 1A60     		str	r2, [r3, #0]
 425:subsystems/nav.c **** 
 426:subsystems/nav.c **** #ifdef NAV_GROUND_SPEED_PGAIN
 427:subsystems/nav.c ****   nav_ground_speed_pgain = NAV_GROUND_SPEED_PGAIN;
 428:subsystems/nav.c ****   nav_ground_speed_setpoint = NOMINAL_AIRSPEED;
 429:subsystems/nav.c **** #endif
 430:subsystems/nav.c **** }
 601              		.loc 1 430 0
 602 0028 7047     		bx	lr
 603              	.L62:
 604 002a 00BF     		.align	2
 605              	.L61:
 606 002c 00000000 		.word	nav_block
 607 0030 00000000 		.word	nav_stage
 608 0034 00003943 		.word	1127809024
 609 0038 00000000 		.word	.LANCHOR11
 610 003c 00000000 		.word	.LANCHOR20
 611 0040 00004842 		.word	1112014848
 612 0044 00000000 		.word	.LANCHOR21
 613 0048 0000C842 		.word	1120403456
 614 004c 00000000 		.word	.LANCHOR22
 615 0050 00000000 		.word	.LANCHOR23
 616              		.cfi_endproc
 617              	.LFE53:
 619              		.section	.text.nav_without_gps,"ax",%progbits
 620              		.align	1
 621              		.global	nav_without_gps
 622              		.thumb
 623              		.thumb_func
 625              	nav_without_gps:
 626              	.LFB54:
 431:subsystems/nav.c **** 
 432:subsystems/nav.c **** /**
 433:subsystems/nav.c ****  *  \brief Failsafe navigation without position estimation
 434:subsystems/nav.c ****  *
 435:subsystems/nav.c ****  * Just set attitude and throttle to FAILSAFE values
 436:subsystems/nav.c ****  * to prevent the plane from crashing.
 437:subsystems/nav.c ****  */
 438:subsystems/nav.c **** void nav_without_gps(void) {
 627              		.loc 1 438 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 439:subsystems/nav.c ****   lateral_mode = LATERAL_MODE_ROLL;
 632              		.loc 1 439 0
 633 0000 084B     		ldr	r3, .L65
 634 0002 0222     		movs	r2, #2
 635 0004 1A70     		strb	r2, [r3, #0]
 440:subsystems/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_THROTTLE;
 636              		.loc 1 440 0
 637 0006 084B     		ldr	r3, .L65+4
 638 0008 013A     		subs	r2, r2, #1
 639 000a 1A70     		strb	r2, [r3, #0]
 441:subsystems/nav.c **** 
 442:subsystems/nav.c **** #ifdef SECTION_FAILSAFE
 443:subsystems/nav.c ****   h_ctl_roll_setpoint = FAILSAFE_DEFAULT_ROLL;
 640              		.loc 1 443 0
 641 000c 074A     		ldr	r2, .L65+8
 642 000e 084B     		ldr	r3, .L65+12
 643 0010 1A60     		str	r2, [r3, #0]	@ float
 444:subsystems/nav.c ****   nav_pitch = FAILSAFE_DEFAULT_PITCH;
 644              		.loc 1 444 0
 645 0012 084B     		ldr	r3, .L65+16
 646 0014 4FF07C52 		mov	r2, #1056964608
 647 0018 1A60     		str	r2, [r3, #0]	@ float
 445:subsystems/nav.c ****   nav_throttle_setpoint = TRIM_UPPRZ((FAILSAFE_DEFAULT_THROTTLE)*MAX_PPRZ);
 648              		.loc 1 445 0
 649 001a 074B     		ldr	r3, .L65+20
 650 001c 4FF43462 		mov	r2, #2880	@ movhi
 651 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 446:subsystems/nav.c **** #else
 447:subsystems/nav.c ****   h_ctl_roll_setpoint = 0;
 448:subsystems/nav.c ****   nav_pitch = 0;
 449:subsystems/nav.c ****   nav_throttle_setpoint = TRIM_UPPRZ((V_CTL_AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE)*MAX_PPRZ);
 450:subsystems/nav.c **** #endif
 451:subsystems/nav.c **** }
 652              		.loc 1 451 0
 653 0022 7047     		bx	lr
 654              	.L66:
 655              		.align	2
 656              	.L65:
 657 0024 00000000 		.word	lateral_mode
 658 0028 00000000 		.word	v_ctl_mode
 659 002c 9A99993E 		.word	1050253722
 660 0030 00000000 		.word	h_ctl_roll_setpoint
 661 0034 00000000 		.word	.LANCHOR6
 662 0038 00000000 		.word	.LANCHOR24
 663              		.cfi_endproc
 664              	.LFE54:
 666              		.section	.text.nav_eight_init,"ax",%progbits
 667              		.align	1
 668              		.global	nav_eight_init
 669              		.thumb
 670              		.thumb_func
 672              	nav_eight_init:
 673              	.LFB55:
 452:subsystems/nav.c **** 
 453:subsystems/nav.c **** 
 454:subsystems/nav.c **** /**************** 8 Navigation **********************************************/
 455:subsystems/nav.c **** 
 456:subsystems/nav.c **** 
 457:subsystems/nav.c **** enum eight_status { R1T, RT2, C2, R2T, RT1, C1 };
 458:subsystems/nav.c **** 
 459:subsystems/nav.c **** static enum eight_status eight_status;
 460:subsystems/nav.c **** void nav_eight_init( void ) {
 674              		.loc 1 460 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 461:subsystems/nav.c ****   eight_status = C1;
 679              		.loc 1 461 0
 680 0000 014B     		ldr	r3, .L69
 681 0002 0522     		movs	r2, #5
 682 0004 1A70     		strb	r2, [r3, #0]
 462:subsystems/nav.c **** }
 683              		.loc 1 462 0
 684 0006 7047     		bx	lr
 685              	.L70:
 686              		.align	2
 687              	.L69:
 688 0008 00000000 		.word	.LANCHOR25
 689              		.cfi_endproc
 690              	.LFE55:
 692              		.section	.text.nav_oval_init,"ax",%progbits
 693              		.align	1
 694              		.global	nav_oval_init
 695              		.thumb
 696              		.thumb_func
 698              	nav_oval_init:
 699              	.LFB57:
 463:subsystems/nav.c **** 
 464:subsystems/nav.c **** /** Navigation along a figure 8. The cross center is defined by the waypoint
 465:subsystems/nav.c ****     [target], the center of one of the circles is defined by [c1]. Altitude is
 466:subsystems/nav.c ****     given by [target].
 467:subsystems/nav.c ****     The navigation goes through 6 states: C1 (circle around [c1]), R1T, RT2
 468:subsystems/nav.c ****     (route from circle 1 to circle 2 over [target]), C2 and R2T, RT1.
 469:subsystems/nav.c ****     If necessary, the [c1] waypoint is moved in the direction of [target]
 470:subsystems/nav.c ****     to be not far than [2*radius].
 471:subsystems/nav.c **** */
 472:subsystems/nav.c **** void nav_eight(uint8_t target, uint8_t c1, float radius) {
 473:subsystems/nav.c ****   float aradius = fabs(radius);
 474:subsystems/nav.c ****   float alt = waypoints[target].a;
 475:subsystems/nav.c ****   waypoints[c1].a = alt;
 476:subsystems/nav.c **** 
 477:subsystems/nav.c ****   float target_c1_x = waypoints[c1].x - waypoints[target].x;
 478:subsystems/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 479:subsystems/nav.c ****   float d = sqrt(target_c1_x*target_c1_x+target_c1_y*target_c1_y);
 480:subsystems/nav.c ****   d = Max(d, 1.); /* To prevent a division by zero */
 481:subsystems/nav.c **** 
 482:subsystems/nav.c ****   /* Unit vector from target to c1 */
 483:subsystems/nav.c ****   float u_x = target_c1_x / d;
 484:subsystems/nav.c ****   float u_y = target_c1_y / d;
 485:subsystems/nav.c **** 
 486:subsystems/nav.c ****   /* Move [c1] closer if needed */
 487:subsystems/nav.c ****   if (d > 2 * aradius) {
 488:subsystems/nav.c ****     d = 2*aradius;
 489:subsystems/nav.c ****     waypoints[c1].x = waypoints[target].x + d*u_x;
 490:subsystems/nav.c ****     waypoints[c1].y = waypoints[target].y + d*u_y;
 491:subsystems/nav.c ****   }
 492:subsystems/nav.c **** 
 493:subsystems/nav.c ****   /* The other center */
 494:subsystems/nav.c ****   struct point c2 = {
 495:subsystems/nav.c ****     waypoints[target].x - d*u_x,
 496:subsystems/nav.c ****     waypoints[target].y - d*u_y,
 497:subsystems/nav.c ****     alt };
 498:subsystems/nav.c **** 
 499:subsystems/nav.c ****   struct point c1_in = {
 500:subsystems/nav.c ****     waypoints[c1].x + radius * -u_y,
 501:subsystems/nav.c ****     waypoints[c1].y + radius * u_x,
 502:subsystems/nav.c ****     alt };
 503:subsystems/nav.c ****   struct point c1_out = {
 504:subsystems/nav.c ****     waypoints[c1].x - radius * -u_y,
 505:subsystems/nav.c ****     waypoints[c1].y - radius * u_x,
 506:subsystems/nav.c ****     alt };
 507:subsystems/nav.c **** 
 508:subsystems/nav.c ****   struct point c2_in = {
 509:subsystems/nav.c ****     c2.x + radius * -u_y,
 510:subsystems/nav.c ****     c2.y + radius * u_x,
 511:subsystems/nav.c ****     alt };
 512:subsystems/nav.c ****   struct point c2_out = {
 513:subsystems/nav.c ****     c2.x - radius * -u_y,
 514:subsystems/nav.c ****     c2.y - radius * u_x,
 515:subsystems/nav.c ****     alt };
 516:subsystems/nav.c **** 
 517:subsystems/nav.c ****   float qdr_out = M_PI - atan2(u_y, u_x);
 518:subsystems/nav.c ****   if (radius < 0)
 519:subsystems/nav.c ****     qdr_out += M_PI;
 520:subsystems/nav.c **** 
 521:subsystems/nav.c ****   switch (eight_status) {
 522:subsystems/nav.c ****   case C1 :
 523:subsystems/nav.c ****     NavCircleWaypoint(c1, radius);
 524:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out)-10)) {
 525:subsystems/nav.c ****       eight_status = R1T;
 526:subsystems/nav.c ****       InitStage();
 527:subsystems/nav.c ****     }
 528:subsystems/nav.c ****     return;
 529:subsystems/nav.c **** 
 530:subsystems/nav.c ****   case R1T:
 531:subsystems/nav.c ****     nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 532:subsystems/nav.c ****     if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c1_out.x, c1_out.y, 0)) {
 533:subsystems/nav.c ****       eight_status = RT2;
 534:subsystems/nav.c ****       InitStage();
 535:subsystems/nav.c ****     }
 536:subsystems/nav.c ****     return;
 537:subsystems/nav.c **** 
 538:subsystems/nav.c ****   case RT2:
 539:subsystems/nav.c ****     nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 540:subsystems/nav.c ****     if (nav_approaching_xy(c2_in.x, c2_in.y, c1_out.x, c1_out.y, CARROT)) {
 541:subsystems/nav.c ****       eight_status = C2;
 542:subsystems/nav.c ****       InitStage();
 543:subsystems/nav.c ****     }
 544:subsystems/nav.c ****     return;
 545:subsystems/nav.c **** 
 546:subsystems/nav.c ****   case C2 :
 547:subsystems/nav.c ****     nav_circle_XY(c2.x, c2.y, -radius);
 548:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out)+10)) {
 549:subsystems/nav.c ****       eight_status = R2T;
 550:subsystems/nav.c ****       InitStage();
 551:subsystems/nav.c ****     }
 552:subsystems/nav.c ****     return;
 553:subsystems/nav.c **** 
 554:subsystems/nav.c ****   case R2T:
 555:subsystems/nav.c ****     nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 556:subsystems/nav.c ****     if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c2_out.x, c2_out.y, 0)) {
 557:subsystems/nav.c ****       eight_status = RT1;
 558:subsystems/nav.c ****       InitStage();
 559:subsystems/nav.c ****     }
 560:subsystems/nav.c ****     return;
 561:subsystems/nav.c **** 
 562:subsystems/nav.c ****   case RT1:
 563:subsystems/nav.c ****     nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 564:subsystems/nav.c ****     if (nav_approaching_xy(c1_in.x, c1_in.y, c2_out.x, c2_out.y, CARROT)) {
 565:subsystems/nav.c ****       eight_status = C1;
 566:subsystems/nav.c ****       InitStage();
 567:subsystems/nav.c ****     }
 568:subsystems/nav.c ****     return;
 569:subsystems/nav.c **** 
 570:subsystems/nav.c ****   default:/* Should not occur !!! Doing nothing */
 571:subsystems/nav.c ****     return;
 572:subsystems/nav.c ****   } /* switch */
 573:subsystems/nav.c **** }
 574:subsystems/nav.c **** 
 575:subsystems/nav.c **** /************** Oval Navigation **********************************************/
 576:subsystems/nav.c **** 
 577:subsystems/nav.c **** /** Navigation along a figure O. One side leg is defined by waypoints [p1] and
 578:subsystems/nav.c ****     [p2].
 579:subsystems/nav.c ****     The navigation goes through 4 states: OC1 (half circle next to [p1]),
 580:subsystems/nav.c ****     OR21 (route [p2] to [p1], OC2 (half circle next to [p2]) and OR12
 581:subsystems/nav.c ****     (opposite leg).
 582:subsystems/nav.c **** 
 583:subsystems/nav.c ****     Initial state is the route along the desired segment (OC2).
 584:subsystems/nav.c **** */
 585:subsystems/nav.c **** 
 586:subsystems/nav.c **** uint8_t nav_oval_count;
 587:subsystems/nav.c **** 
 588:subsystems/nav.c **** void nav_oval_init( void ) {
 700              		.loc 1 588 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 589:subsystems/nav.c ****   oval_status = OC2;
 705              		.loc 1 589 0
 706 0000 034B     		ldr	r3, .L73
 707 0002 0122     		movs	r2, #1
 708 0004 1A70     		strb	r2, [r3, #0]
 590:subsystems/nav.c ****   nav_oval_count = 0;
 709              		.loc 1 590 0
 710 0006 034B     		ldr	r3, .L73+4
 711 0008 013A     		subs	r2, r2, #1
 712 000a 1A70     		strb	r2, [r3, #0]
 591:subsystems/nav.c **** }
 713              		.loc 1 591 0
 714 000c 7047     		bx	lr
 715              	.L74:
 716 000e 00BF     		.align	2
 717              	.L73:
 718 0010 00000000 		.word	.LANCHOR26
 719 0014 00000000 		.word	.LANCHOR27
 720              		.cfi_endproc
 721              	.LFE57:
 723              		.global	__aeabi_i2d
 724              		.global	__aeabi_ddiv
 725              		.global	__aeabi_dmul
 726              		.global	__aeabi_dadd
 727              		.global	__aeabi_d2uiz
 728              		.global	__aeabi_d2f
 729              		.global	__aeabi_f2iz
 730              		.section	.text.nav_reset_reference,"ax",%progbits
 731              		.align	1
 732              		.global	nav_reset_reference
 733              		.thumb
 734              		.thumb_func
 736              	nav_reset_reference:
 737              	.LFB46:
  63:./subsystems/navigation/common_nav.c **** unit_t nav_reset_reference( void ) {
 738              		.loc 2 63 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 32
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 743              	.LCFI5:
 744              		.cfi_def_cfa_offset 20
  66:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = (DegOfRad(gps.lla_pos.lon/1e7)+180) / 6 + 1;
 745              		.loc 2 66 0
 746 0002 334C     		ldr	r4, .L77+32
 747              		.cfi_offset 14, -4
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 6, -12
 750              		.cfi_offset 5, -16
 751              		.cfi_offset 4, -20
  63:./subsystems/navigation/common_nav.c **** unit_t nav_reset_reference( void ) {
 752              		.loc 2 63 0
 753 0004 89B0     		sub	sp, sp, #36
 754              	.LCFI6:
 755              		.cfi_def_cfa_offset 56
  66:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = (DegOfRad(gps.lla_pos.lon/1e7)+180) / 6 + 1;
 756              		.loc 2 66 0
 757 0006 E068     		ldr	r0, [r4, #12]
 758 0008 FFF7FEFF 		bl	__aeabi_i2d
 759 000c 28A3     		adr	r3, .L77
 760 000e D3E90023 		ldrd	r2, [r3]
 761 0012 FFF7FEFF 		bl	__aeabi_ddiv
 762 0016 28A3     		adr	r3, .L77+8
 763 0018 D3E90023 		ldrd	r2, [r3]
 764 001c 0646     		mov	r6, r0
 765 001e 0F46     		mov	r7, r1
 766 0020 FFF7FEFF 		bl	__aeabi_dmul
 767 0024 26A3     		adr	r3, .L77+16
 768 0026 D3E90023 		ldrd	r2, [r3]
 769 002a FFF7FEFF 		bl	__aeabi_dadd
 770 002e 0022     		movs	r2, #0
 771 0030 284B     		ldr	r3, .L77+36
 772 0032 FFF7FEFF 		bl	__aeabi_ddiv
 773 0036 0022     		movs	r2, #0
 774 0038 274B     		ldr	r3, .L77+40
 775 003a FFF7FEFF 		bl	__aeabi_dadd
 776 003e FFF7FEFF 		bl	__aeabi_d2uiz
 777 0042 264B     		ldr	r3, .L77+44
 778 0044 C5B2     		uxtb	r5, r0
 779 0046 1D70     		strb	r5, [r3, #0]
  70:./subsystems/navigation/common_nav.c ****   lla.lat = gps.lla_pos.lat/1e7;
 780              		.loc 2 70 0
 781 0048 2069     		ldr	r0, [r4, #16]
 782 004a FFF7FEFF 		bl	__aeabi_i2d
 783 004e 18A3     		adr	r3, .L77
 784 0050 D3E90023 		ldrd	r2, [r3]
 785 0054 FFF7FEFF 		bl	__aeabi_ddiv
 786 0058 FFF7FEFF 		bl	__aeabi_d2f
  71:./subsystems/navigation/common_nav.c ****   lla.lon = gps.lla_pos.lon/1e7;
 787              		.loc 2 71 0
 788 005c 3946     		mov	r1, r7
  70:./subsystems/navigation/common_nav.c ****   lla.lat = gps.lla_pos.lat/1e7;
 789              		.loc 2 70 0
 790 005e 0690     		str	r0, [sp, #24]	@ float
  71:./subsystems/navigation/common_nav.c ****   lla.lon = gps.lla_pos.lon/1e7;
 791              		.loc 2 71 0
 792 0060 3046     		mov	r0, r6
 793 0062 FFF7FEFF 		bl	__aeabi_d2f
  74:./subsystems/navigation/common_nav.c ****   utm_of_lla_f(&utm, &lla);
 794              		.loc 2 74 0
 795 0066 05A9     		add	r1, sp, #20
  71:./subsystems/navigation/common_nav.c ****   lla.lon = gps.lla_pos.lon/1e7;
 796              		.loc 2 71 0
 797 0068 0590     		str	r0, [sp, #20]	@ float
  74:./subsystems/navigation/common_nav.c ****   utm_of_lla_f(&utm, &lla);
 798              		.loc 2 74 0
 799 006a 01A8     		add	r0, sp, #4
  73:./subsystems/navigation/common_nav.c ****   utm.zone = nav_utm_zone0;
 800              		.loc 2 73 0
 801 006c 8DF81050 		strb	r5, [sp, #16]
  74:./subsystems/navigation/common_nav.c ****   utm_of_lla_f(&utm, &lla);
 802              		.loc 2 74 0
 803 0070 FFF7FEFF 		bl	utm_of_lla_f
  75:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = utm.east;
 804              		.loc 2 75 0
 805 0074 0298     		ldr	r0, [sp, #8]	@ float
 806 0076 FFF7FEFF 		bl	__aeabi_f2iz
 807 007a 194B     		ldr	r3, .L77+48
  83:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
 808              		.loc 2 83 0
 809 007c 194D     		ldr	r5, .L77+52
  75:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = utm.east;
 810              		.loc 2 75 0
 811 007e 1860     		str	r0, [r3, #0]
  76:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm.north;
 812              		.loc 2 76 0
 813 0080 0198     		ldr	r0, [sp, #4]	@ float
 814 0082 FFF7FEFF 		bl	__aeabi_f2iz
 815 0086 184B     		ldr	r3, .L77+56
  83:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
 816              		.loc 2 83 0
 817 0088 2A68     		ldr	r2, [r5, #0]	@ float
  76:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm.north;
 818              		.loc 2 76 0
 819 008a 1860     		str	r0, [r3, #0]
  83:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
 820              		.loc 2 83 0
 821 008c 174B     		ldr	r3, .L77+60
  84:./subsystems/navigation/common_nav.c ****   ground_alt = gps.hmsl/1000.;
 822              		.loc 2 84 0
 823 008e A06A     		ldr	r0, [r4, #40]
  83:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
 824              		.loc 2 83 0
 825 0090 1A60     		str	r2, [r3, #0]	@ float
  84:./subsystems/navigation/common_nav.c ****   ground_alt = gps.hmsl/1000.;
 826              		.loc 2 84 0
 827 0092 FFF7FEFF 		bl	__aeabi_i2d
 828 0096 0CA3     		adr	r3, .L77+24
 829 0098 D3E90023 		ldrd	r2, [r3]
 830 009c FFF7FEFF 		bl	__aeabi_ddiv
 831 00a0 FFF7FEFF 		bl	__aeabi_d2f
 832 00a4 2860     		str	r0, [r5, #0]	@ float
  86:./subsystems/navigation/common_nav.c **** }
 833              		.loc 2 86 0
 834 00a6 0020     		movs	r0, #0
 835 00a8 09B0     		add	sp, sp, #36
 836 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 837              	.L78:
 838 00ac AFF30080 		.align	3
 839              	.L77:
 840 00b0 00000000 		.word	0
 841 00b4 D0126341 		.word	1097011920
 842 00b8 F8C1631A 		.word	442745336
 843 00bc DCA54C40 		.word	1078765020
 844 00c0 00000000 		.word	0
 845 00c4 00806640 		.word	1080459264
 846 00c8 00000000 		.word	0
 847 00cc 00408F40 		.word	1083129856
 848 00d0 00000000 		.word	gps
 849 00d4 00001840 		.word	1075314688
 850 00d8 0000F03F 		.word	1072693248
 851 00dc 00000000 		.word	.LANCHOR28
 852 00e0 00000000 		.word	.LANCHOR14
 853 00e4 00000000 		.word	.LANCHOR11
 854 00e8 00000000 		.word	.LANCHOR15
 855 00ec 00000000 		.word	.LANCHOR12
 856              		.cfi_endproc
 857              	.LFE46:
 859              		.global	__aeabi_f2d
 860              		.global	__aeabi_dsub
 861              		.global	__aeabi_dcmpgt
 862              		.global	__aeabi_dcmplt
 863              		.section	.text.fly_to_xy,"ax",%progbits
 864              		.align	1
 865              		.global	fly_to_xy
 866              		.thumb
 867              		.thumb_func
 869              	fly_to_xy:
 870              	.LFB41:
 321:subsystems/nav.c **** void fly_to_xy(float x, float y) {
 871              		.loc 1 321 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              	.LVL19:
 876 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 877              	.LCFI7:
 878              		.cfi_def_cfa_offset 24
 322:subsystems/nav.c ****   desired_x = x;
 879              		.loc 1 322 0
 880 0002 734B     		ldr	r3, .L107+48
 881              		.cfi_offset 14, -4
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 6, -12
 884              		.cfi_offset 5, -16
 885              		.cfi_offset 4, -20
 886              		.cfi_offset 3, -24
 321:subsystems/nav.c **** void fly_to_xy(float x, float y) {
 887              		.loc 1 321 0
 888 0004 0C46     		mov	r4, r1
 322:subsystems/nav.c ****   desired_x = x;
 889              		.loc 1 322 0
 890 0006 1860     		str	r0, [r3, #0]	@ float
 323:subsystems/nav.c ****   desired_y = y;
 891              		.loc 1 323 0
 892 0008 724B     		ldr	r3, .L107+52
 893 000a 734D     		ldr	r5, .L107+56
 894 000c 1960     		str	r1, [r3, #0]	@ float
 324:subsystems/nav.c ****   if (nav_mode == NAV_MODE_COURSE) {
 895              		.loc 1 324 0
 896 000e 734B     		ldr	r3, .L107+60
 897 0010 1B68     		ldr	r3, [r3, #0]
 898 0012 022B     		cmp	r3, #2
 899 0014 724B     		ldr	r3, .L107+64
 900 0016 28D1     		bne	.L80
 325:subsystems/nav.c ****     h_ctl_course_setpoint = atan2(x - estimator_x, y - estimator_y);
 901              		.loc 1 325 0
 902 0018 1968     		ldr	r1, [r3, #0]	@ float
 903              	.LVL20:
 904 001a FFF7FEFF 		bl	__aeabi_fsub
 905              	.LVL21:
 906 001e FFF7FEFF 		bl	__aeabi_f2d
 907 0022 0646     		mov	r6, r0
 908 0024 0F46     		mov	r7, r1
 909 0026 2046     		mov	r0, r4
 910 0028 2968     		ldr	r1, [r5, #0]	@ float
 911 002a FFF7FEFF 		bl	__aeabi_fsub
 912 002e FFF7FEFF 		bl	__aeabi_f2d
 913 0032 0246     		mov	r2, r0
 914 0034 0B46     		mov	r3, r1
 915 0036 3046     		mov	r0, r6
 916 0038 3946     		mov	r1, r7
 917 003a FFF7FEFF 		bl	atan2
 918 003e FFF7FEFF 		bl	__aeabi_d2f
 919 0042 684C     		ldr	r4, .L107+68
 920              	.LVL22:
 326:subsystems/nav.c ****     if (h_ctl_course_setpoint < 0.)
 921              		.loc 1 326 0
 922 0044 0021     		movs	r1, #0
 325:subsystems/nav.c ****     h_ctl_course_setpoint = atan2(x - estimator_x, y - estimator_y);
 923              		.loc 1 325 0
 924 0046 2060     		str	r0, [r4, #0]	@ float
 925              	.LVL23:
 926 0048 0546     		mov	r5, r0
 927              	.LVL24:
 326:subsystems/nav.c ****     if (h_ctl_course_setpoint < 0.)
 928              		.loc 1 326 0
 929 004a FFF7FEFF 		bl	__aeabi_fcmplt
 930 004e 50B1     		cbz	r0, .L81
 327:subsystems/nav.c ****       h_ctl_course_setpoint += 2 * M_PI;
 931              		.loc 1 327 0
 932 0050 2846     		mov	r0, r5
 933 0052 FFF7FEFF 		bl	__aeabi_f2d
 934 0056 52A3     		adr	r3, .L107
 935 0058 D3E90023 		ldrd	r2, [r3]
 936 005c FFF7FEFF 		bl	__aeabi_dadd
 937 0060 FFF7FEFF 		bl	__aeabi_d2f
 938 0064 2060     		str	r0, [r4, #0]	@ float
 939              	.L81:
 328:subsystems/nav.c ****     lateral_mode = LATERAL_MODE_COURSE;
 940              		.loc 1 328 0
 941 0066 0322     		movs	r2, #3
 942 0068 97E0     		b	.L106
 943              	.LVL25:
 944              	.L80:
 945              	.LBB4:
 330:subsystems/nav.c ****     float diff = atan2(x - estimator_x, y - estimator_y) - estimator_hspeed_dir;
 946              		.loc 1 330 0
 947 006a 1968     		ldr	r1, [r3, #0]	@ float
 948              	.LVL26:
 949 006c FFF7FEFF 		bl	__aeabi_fsub
 950              	.LVL27:
 951 0070 FFF7FEFF 		bl	__aeabi_f2d
 952 0074 0646     		mov	r6, r0
 953 0076 0F46     		mov	r7, r1
 954 0078 2046     		mov	r0, r4
 955 007a 2968     		ldr	r1, [r5, #0]	@ float
 956 007c FFF7FEFF 		bl	__aeabi_fsub
 957 0080 FFF7FEFF 		bl	__aeabi_f2d
 958 0084 0246     		mov	r2, r0
 959 0086 0B46     		mov	r3, r1
 960 0088 3046     		mov	r0, r6
 961 008a 3946     		mov	r1, r7
 962 008c FFF7FEFF 		bl	atan2
 963 0090 554B     		ldr	r3, .L107+72
 964 0092 0446     		mov	r4, r0
 965              	.LVL28:
 966 0094 1868     		ldr	r0, [r3, #0]	@ float
 967 0096 0D46     		mov	r5, r1
 968 0098 FFF7FEFF 		bl	__aeabi_f2d
 969 009c 0246     		mov	r2, r0
 970 009e 0B46     		mov	r3, r1
 971 00a0 2046     		mov	r0, r4
 972 00a2 2946     		mov	r1, r5
 973 00a4 04E0     		b	.L104
 974              	.LVL29:
 975              	.L85:
 331:subsystems/nav.c ****     NormRadAngle(diff);
 976              		.loc 1 331 0
 977 00a6 3046     		mov	r0, r6
 978 00a8 3946     		mov	r1, r7
 979 00aa 3DA3     		adr	r3, .L107
 980 00ac D3E90023 		ldrd	r2, [r3]
 981              	.L104:
 982 00b0 FFF7FEFF 		bl	__aeabi_dsub
 983 00b4 FFF7FEFF 		bl	__aeabi_d2f
 984 00b8 0446     		mov	r4, r0
 985 00ba FFF7FEFF 		bl	__aeabi_f2d
 986 00be 3AA3     		adr	r3, .L107+8
 987 00c0 D3E90023 		ldrd	r2, [r3]
 988 00c4 0646     		mov	r6, r0
 989 00c6 0F46     		mov	r7, r1
 990 00c8 FFF7FEFF 		bl	__aeabi_dcmpgt
 991 00cc 0028     		cmp	r0, #0
 992 00ce EAD1     		bne	.L85
 993 00d0 09E0     		b	.L86
 994              	.L87:
 995 00d2 33A3     		adr	r3, .L107
 996 00d4 D3E90023 		ldrd	r2, [r3]
 997 00d8 3046     		mov	r0, r6
 998 00da 3946     		mov	r1, r7
 999 00dc FFF7FEFF 		bl	__aeabi_dadd
 1000 00e0 FFF7FEFF 		bl	__aeabi_d2f
 1001 00e4 0446     		mov	r4, r0
 1002              	.L86:
 1003 00e6 2046     		mov	r0, r4
 1004 00e8 FFF7FEFF 		bl	__aeabi_f2d
 1005 00ec 30A3     		adr	r3, .L107+16
 1006 00ee D3E90023 		ldrd	r2, [r3]
 1007 00f2 0646     		mov	r6, r0
 1008 00f4 0F46     		mov	r7, r1
 1009 00f6 FFF7FEFF 		bl	__aeabi_dcmplt
 1010 00fa 0028     		cmp	r0, #0
 1011 00fc E9D1     		bne	.L87
 332:subsystems/nav.c ****     BoundAbs(diff,M_PI/2.);
 1012              		.loc 1 332 0
 1013 00fe 3046     		mov	r0, r6
 1014 0100 3946     		mov	r1, r7
 1015 0102 2DA3     		adr	r3, .L107+24
 1016 0104 D3E90023 		ldrd	r2, [r3]
 1017 0108 FFF7FEFF 		bl	__aeabi_dcmpgt
 1018 010c 08B1     		cbz	r0, .L102
 1019 010e 374C     		ldr	r4, .L107+76
 1020              	.LVL30:
 1021 0110 08E0     		b	.L90
 1022              	.L102:
 1023 0112 3046     		mov	r0, r6
 1024 0114 3946     		mov	r1, r7
 1025 0116 2AA3     		adr	r3, .L107+32
 1026 0118 D3E90023 		ldrd	r2, [r3]
 1027 011c FFF7FEFF 		bl	__aeabi_dcmplt
 1028 0120 00B1     		cbz	r0, .L90
 1029 0122 334C     		ldr	r4, .L107+80
 1030              	.LVL31:
 1031              	.L90:
 333:subsystems/nav.c ****     float s = sin(diff);
 1032              		.loc 1 333 0
 1033 0124 2046     		mov	r0, r4
 1034 0126 FFF7FEFF 		bl	__aeabi_f2d
 1035 012a FFF7FEFF 		bl	sin
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 1036              		.loc 1 334 0
 1037 012e 314B     		ldr	r3, .L107+84
 333:subsystems/nav.c ****     float s = sin(diff);
 1038              		.loc 1 333 0
 1039 0130 0646     		mov	r6, r0
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 1040              		.loc 1 334 0
 1041 0132 1C68     		ldr	r4, [r3, #0]	@ float
 1042              	.LVL32:
 333:subsystems/nav.c ****     float s = sin(diff);
 1043              		.loc 1 333 0
 1044 0134 0F46     		mov	r7, r1
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 1045              		.loc 1 334 0
 1046 0136 2046     		mov	r0, r4
 1047 0138 4FF04041 		mov	r1, #-1073741824
 1048 013c FFF7FEFF 		bl	__aeabi_fmul
 1049 0140 2146     		mov	r1, r4
 1050 0142 FFF7FEFF 		bl	__aeabi_fmul
 1051 0146 3946     		mov	r1, r7
 1052 0148 0446     		mov	r4, r0
 1053 014a 3046     		mov	r0, r6
 1054 014c FFF7FEFF 		bl	__aeabi_d2f
 1055 0150 0146     		mov	r1, r0
 1056 0152 2046     		mov	r0, r4
 1057 0154 FFF7FEFF 		bl	__aeabi_fmul
 1058 0158 274B     		ldr	r3, .L107+88
 1059 015a 284C     		ldr	r4, .L107+92
 1060 015c 1968     		ldr	r1, [r3, #0]	@ float
 1061 015e FFF7FEFF 		bl	__aeabi_fmul
 1062 0162 FFF7FEFF 		bl	__aeabi_f2d
 1063 0166 18A3     		adr	r3, .L107+40
 1064 0168 D3E90023 		ldrd	r2, [r3]
 1065 016c FFF7FEFF 		bl	__aeabi_ddiv
 1066 0170 FFF7FEFF 		bl	atan
 1067 0174 FFF7FEFF 		bl	__aeabi_d2f
 335:subsystems/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1068              		.loc 1 335 0
 1069 0178 214B     		ldr	r3, .L107+96
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 1070              		.loc 1 334 0
 1071 017a 2060     		str	r0, [r4, #0]	@ float
 1072              	.LVL33:
 335:subsystems/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1073              		.loc 1 335 0
 1074 017c 1E68     		ldr	r6, [r3, #0]	@ float
 1075              	.LVL34:
 334:subsystems/nav.c ****     h_ctl_roll_setpoint = atan(2 * estimator_hspeed_mod*estimator_hspeed_mod * s * (-h_ctl_course_p
 1076              		.loc 1 334 0
 1077 017e 0546     		mov	r5, r0
 1078              	.LVL35:
 335:subsystems/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1079              		.loc 1 335 0
 1080 0180 3146     		mov	r1, r6
 1081 0182 FFF7FEFF 		bl	__aeabi_fcmpgt
 1082 0186 30B9     		cbnz	r0, .L105
 1083              	.LVL36:
 1084 0188 06F10046 		add	r6, r6, #-2147483648
 1085              	.LVL37:
 1086 018c 2846     		mov	r0, r5
 1087 018e 3146     		mov	r1, r6
 1088 0190 FFF7FEFF 		bl	__aeabi_fcmplt
 1089 0194 00B1     		cbz	r0, .L94
 1090              	.L105:
 1091 0196 2660     		str	r6, [r4, #0]	@ float
 1092              	.L94:
 336:subsystems/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1093              		.loc 1 336 0
 1094 0198 0222     		movs	r2, #2
 1095              	.LVL38:
 1096              	.L106:
 1097 019a 1A4B     		ldr	r3, .L107+100
 1098 019c 1A70     		strb	r2, [r3, #0]
 1099 019e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1100              	.L108:
 1101              		.align	3
 1102              	.L107:
 1103 01a0 182D4454 		.word	1413754136
 1104 01a4 FB211940 		.word	1075388923
 1105 01a8 182D4454 		.word	1413754136
 1106 01ac FB210940 		.word	1074340347
 1107 01b0 182D4454 		.word	1413754136
 1108 01b4 FB2109C0 		.word	-1073143301
 1109 01b8 182D4454 		.word	1413754136
 1110 01bc FB21F93F 		.word	1073291771
 1111 01c0 182D4454 		.word	1413754136
 1112 01c4 FB21F9BF 		.word	-1074191877
 1113 01c8 00000000 		.word	0
 1114 01cc 00298340 		.word	1082337536
 1115 01d0 00000000 		.word	.LANCHOR29
 1116 01d4 00000000 		.word	.LANCHOR30
 1117 01d8 00000000 		.word	estimator_y
 1118 01dc 00000000 		.word	.LANCHOR23
 1119 01e0 00000000 		.word	estimator_x
 1120 01e4 00000000 		.word	h_ctl_course_setpoint
 1121 01e8 00000000 		.word	estimator_hspeed_dir
 1122 01ec DB0FC93F 		.word	1070141403
 1123 01f0 DB0FC9BF 		.word	-1077342245
 1124 01f4 00000000 		.word	estimator_hspeed_mod
 1125 01f8 00000000 		.word	h_ctl_course_pgain
 1126 01fc 00000000 		.word	h_ctl_roll_setpoint
 1127 0200 00000000 		.word	h_ctl_roll_max_setpoint
 1128 0204 00000000 		.word	lateral_mode
 1129              	.LBE4:
 1130              		.cfi_endproc
 1131              	.LFE41:
 1133              		.global	__aeabi_fdiv
 1134              		.section	.text.nav_route_xy,"ax",%progbits
 1135              		.align	1
 1136              		.global	nav_route_xy
 1137              		.thumb
 1138              		.thumb_func
 1140              	nav_route_xy:
 1141              	.LFB42:
 343:subsystems/nav.c **** void nav_route_xy(float last_wp_x, float last_wp_y, float wp_x, float wp_y) {
 1142              		.loc 1 343 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 16
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL39:
 1147 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1148              	.LCFI8:
 1149              		.cfi_def_cfa_offset 36
 1150 0004 0746     		mov	r7, r0
 1151              		.cfi_offset 14, -4
 1152              		.cfi_offset 11, -8
 1153              		.cfi_offset 10, -12
 1154              		.cfi_offset 9, -16
 1155              		.cfi_offset 8, -20
 1156              		.cfi_offset 7, -24
 1157              		.cfi_offset 6, -28
 1158              		.cfi_offset 5, -32
 1159              		.cfi_offset 4, -36
 1160 0006 85B0     		sub	sp, sp, #20
 1161              	.LCFI9:
 1162              		.cfi_def_cfa_offset 56
 344:subsystems/nav.c ****   float leg_x = wp_x - last_wp_x;
 1163              		.loc 1 344 0
 1164 0008 1046     		mov	r0, r2
 1165              	.LVL40:
 343:subsystems/nav.c **** void nav_route_xy(float last_wp_x, float last_wp_y, float wp_x, float wp_y) {
 1166              		.loc 1 343 0
 1167 000a 0E46     		mov	r6, r1
 344:subsystems/nav.c ****   float leg_x = wp_x - last_wp_x;
 1168              		.loc 1 344 0
 1169 000c 3946     		mov	r1, r7
 1170              	.LVL41:
 343:subsystems/nav.c **** void nav_route_xy(float last_wp_x, float last_wp_y, float wp_x, float wp_y) {
 1171              		.loc 1 343 0
 1172 000e 9946     		mov	r9, r3
 1173 0010 9246     		mov	sl, r2
 344:subsystems/nav.c ****   float leg_x = wp_x - last_wp_x;
 1174              		.loc 1 344 0
 1175 0012 FFF7FEFF 		bl	__aeabi_fsub
 1176              	.LVL42:
 345:subsystems/nav.c ****   float leg_y = wp_y - last_wp_y;
 1177              		.loc 1 345 0
 1178 0016 3146     		mov	r1, r6
 344:subsystems/nav.c ****   float leg_x = wp_x - last_wp_x;
 1179              		.loc 1 344 0
 1180 0018 0446     		mov	r4, r0
 1181              	.LVL43:
 345:subsystems/nav.c ****   float leg_y = wp_y - last_wp_y;
 1182              		.loc 1 345 0
 1183 001a 4846     		mov	r0, r9
 1184 001c FFF7FEFF 		bl	__aeabi_fsub
 346:subsystems/nav.c ****   float leg2 = Max(leg_x * leg_x + leg_y * leg_y, 1.);
 1185              		.loc 1 346 0
 1186 0020 2146     		mov	r1, r4
 345:subsystems/nav.c ****   float leg_y = wp_y - last_wp_y;
 1187              		.loc 1 345 0
 1188 0022 0546     		mov	r5, r0
 1189              	.LVL44:
 346:subsystems/nav.c ****   float leg2 = Max(leg_x * leg_x + leg_y * leg_y, 1.);
 1190              		.loc 1 346 0
 1191 0024 2046     		mov	r0, r4
 1192 0026 FFF7FEFF 		bl	__aeabi_fmul
 1193 002a 2946     		mov	r1, r5
 1194 002c 8046     		mov	r8, r0
 1195 002e 2846     		mov	r0, r5
 1196 0030 FFF7FEFF 		bl	__aeabi_fmul
 1197 0034 0146     		mov	r1, r0
 1198 0036 4046     		mov	r0, r8
 1199 0038 FFF7FEFF 		bl	__aeabi_fadd
 1200 003c 4FF07E51 		mov	r1, #1065353216
 1201 0040 8046     		mov	r8, r0
 1202              	.LVL45:
 1203 0042 FFF7FEFF 		bl	__aeabi_fcmpgt
 1204 0046 08B9     		cbnz	r0, .L110
 1205 0048 4FF07E58 		mov	r8, #1065353216
 1206              	.LVL46:
 1207              	.L110:
 347:subsystems/nav.c ****   nav_leg_progress = ((estimator_x - last_wp_x) * leg_x + (estimator_y - last_wp_y) * leg_y) / leg2
 1208              		.loc 1 347 0
 1209 004c 454B     		ldr	r3, .L114
 1210 004e 3946     		mov	r1, r7
 1211 0050 1868     		ldr	r0, [r3, #0]	@ float
 1212 0052 FFF7FEFF 		bl	__aeabi_fsub
 1213 0056 2146     		mov	r1, r4
 1214 0058 FFF7FEFF 		bl	__aeabi_fmul
 1215 005c 424A     		ldr	r2, .L114+4
 1216 005e 0346     		mov	r3, r0
 1217 0060 3146     		mov	r1, r6
 1218 0062 1068     		ldr	r0, [r2, #0]	@ float
 1219 0064 0193     		str	r3, [sp, #4]
 1220 0066 FFF7FEFF 		bl	__aeabi_fsub
 1221 006a 2946     		mov	r1, r5
 1222 006c FFF7FEFF 		bl	__aeabi_fmul
 1223 0070 019B     		ldr	r3, [sp, #4]
 1224 0072 0146     		mov	r1, r0
 1225 0074 1846     		mov	r0, r3
 1226 0076 FFF7FEFF 		bl	__aeabi_fadd
 1227 007a 4146     		mov	r1, r8
 1228 007c FFF7FEFF 		bl	__aeabi_fdiv
 1229 0080 DFF8F0B0 		ldr	fp, .L114+16
 1230 0084 CBF80000 		str	r0, [fp, #0]	@ float
 348:subsystems/nav.c ****   nav_leg_length = sqrt(leg2);
 1231              		.loc 1 348 0
 1232 0088 4046     		mov	r0, r8
 1233 008a FFF7FEFF 		bl	__aeabi_f2d
 1234 008e FFF7FEFF 		bl	sqrt
 1235 0092 FFF7FEFF 		bl	__aeabi_d2f
 1236 0096 354B     		ldr	r3, .L114+8
 1237 0098 8046     		mov	r8, r0
 1238              	.LVL47:
 353:subsystems/nav.c ****   nav_leg_progress += Max(carrot / nav_leg_length, 0.);
 1239              		.loc 1 353 0
 1240 009a DBF800B0 		ldr	fp, [fp, #0]	@ float
 348:subsystems/nav.c ****   nav_leg_length = sqrt(leg2);
 1241              		.loc 1 348 0
 1242 009e 1860     		str	r0, [r3, #0]	@ float
 353:subsystems/nav.c ****   nav_leg_progress += Max(carrot / nav_leg_length, 0.);
 1243              		.loc 1 353 0
 1244 00a0 4146     		mov	r1, r8
 1245 00a2 3348     		ldr	r0, .L114+12
 1246 00a4 CDF80CB0 		str	fp, [sp, #12]	@ float
 1247 00a8 FFF7FEFF 		bl	__aeabi_fdiv
 1248 00ac 0021     		movs	r1, #0
 1249 00ae 8346     		mov	fp, r0
 1250 00b0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1251 00b4 10B9     		cbnz	r0, .L111
 1252 00b6 0022     		movs	r2, #0
 1253 00b8 0023     		movs	r3, #0
 1254 00ba 04E0     		b	.L112
 1255              	.L111:
 1256 00bc 5846     		mov	r0, fp
 1257 00be FFF7FEFF 		bl	__aeabi_f2d
 1258 00c2 0246     		mov	r2, r0
 1259 00c4 0B46     		mov	r3, r1
 1260              	.L112:
 1261 00c6 0398     		ldr	r0, [sp, #12]	@ float
 1262 00c8 0292     		str	r2, [sp, #8]
 1263 00ca 0193     		str	r3, [sp, #4]
 1264 00cc FFF7FEFF 		bl	__aeabi_f2d
 1265 00d0 029A     		ldr	r2, [sp, #8]
 1266 00d2 019B     		ldr	r3, [sp, #4]
 1267 00d4 FFF7FEFF 		bl	__aeabi_dadd
 1268 00d8 FFF7FEFF 		bl	__aeabi_d2f
 1269 00dc 254B     		ldr	r3, .L114+16
 354:subsystems/nav.c ****   nav_in_segment = TRUE;
 1270              		.loc 1 354 0
 1271 00de 264A     		ldr	r2, .L114+20
 353:subsystems/nav.c ****   nav_leg_progress += Max(carrot / nav_leg_length, 0.);
 1272              		.loc 1 353 0
 1273 00e0 1860     		str	r0, [r3, #0]	@ float
 354:subsystems/nav.c ****   nav_in_segment = TRUE;
 1274              		.loc 1 354 0
 1275 00e2 0123     		movs	r3, #1
 1276 00e4 1370     		strb	r3, [r2, #0]
 355:subsystems/nav.c ****   nav_segment_x_1 = last_wp_x;
 1277              		.loc 1 355 0
 1278 00e6 254A     		ldr	r2, .L114+24
 361:subsystems/nav.c ****   fly_to_xy(last_wp_x + nav_leg_progress*leg_x +nav_shift*leg_y/nav_leg_length, last_wp_y + nav_leg
 1279              		.loc 1 361 0
 1280 00e8 2146     		mov	r1, r4
 355:subsystems/nav.c ****   nav_segment_x_1 = last_wp_x;
 1281              		.loc 1 355 0
 1282 00ea 1760     		str	r7, [r2, #0]	@ float
 356:subsystems/nav.c ****   nav_segment_y_1 = last_wp_y;
 1283              		.loc 1 356 0
 1284 00ec 244A     		ldr	r2, .L114+28
 353:subsystems/nav.c ****   nav_leg_progress += Max(carrot / nav_leg_length, 0.);
 1285              		.loc 1 353 0
 1286 00ee 8346     		mov	fp, r0
 356:subsystems/nav.c ****   nav_segment_y_1 = last_wp_y;
 1287              		.loc 1 356 0
 1288 00f0 1660     		str	r6, [r2, #0]	@ float
 357:subsystems/nav.c ****   nav_segment_x_2 = wp_x;
 1289              		.loc 1 357 0
 1290 00f2 244A     		ldr	r2, .L114+32
 1291 00f4 C2F800A0 		str	sl, [r2, #0]	@ float
 358:subsystems/nav.c ****   nav_segment_y_2 = wp_y;
 1292              		.loc 1 358 0
 1293 00f8 234A     		ldr	r2, .L114+36
 1294 00fa C2F80090 		str	r9, [r2, #0]	@ float
 359:subsystems/nav.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 1295              		.loc 1 359 0
 1296 00fe 234A     		ldr	r2, .L114+40
 1297 0100 1370     		strb	r3, [r2, #0]
 361:subsystems/nav.c ****   fly_to_xy(last_wp_x + nav_leg_progress*leg_x +nav_shift*leg_y/nav_leg_length, last_wp_y + nav_leg
 1298              		.loc 1 361 0
 1299 0102 234B     		ldr	r3, .L114+44
 1300 0104 D3F800A0 		ldr	sl, [r3, #0]	@ float
 1301              	.LVL48:
 1302 0108 FFF7FEFF 		bl	__aeabi_fmul
 1303 010c 0146     		mov	r1, r0
 1304 010e 3846     		mov	r0, r7
 1305 0110 FFF7FEFF 		bl	__aeabi_fadd
 1306 0114 2946     		mov	r1, r5
 1307 0116 0746     		mov	r7, r0
 1308              	.LVL49:
 1309 0118 5046     		mov	r0, sl
 1310 011a FFF7FEFF 		bl	__aeabi_fmul
 1311 011e 4146     		mov	r1, r8
 1312 0120 FFF7FEFF 		bl	__aeabi_fdiv
 1313 0124 0146     		mov	r1, r0
 1314 0126 3846     		mov	r0, r7
 1315 0128 FFF7FEFF 		bl	__aeabi_fadd
 1316 012c 2946     		mov	r1, r5
 1317 012e 0746     		mov	r7, r0
 1318 0130 5846     		mov	r0, fp
 1319 0132 FFF7FEFF 		bl	__aeabi_fmul
 1320 0136 0146     		mov	r1, r0
 1321 0138 3046     		mov	r0, r6
 1322 013a FFF7FEFF 		bl	__aeabi_fadd
 1323 013e 2146     		mov	r1, r4
 1324 0140 0546     		mov	r5, r0
 1325              	.LVL50:
 1326 0142 5046     		mov	r0, sl
 1327 0144 FFF7FEFF 		bl	__aeabi_fmul
 1328 0148 4146     		mov	r1, r8
 1329 014a FFF7FEFF 		bl	__aeabi_fdiv
 1330 014e 0146     		mov	r1, r0
 1331 0150 2846     		mov	r0, r5
 1332 0152 FFF7FEFF 		bl	__aeabi_fsub
 1333 0156 0146     		mov	r1, r0
 1334 0158 3846     		mov	r0, r7
 362:subsystems/nav.c **** }
 1335              		.loc 1 362 0
 1336 015a 05B0     		add	sp, sp, #20
 1337 015c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 361:subsystems/nav.c ****   fly_to_xy(last_wp_x + nav_leg_progress*leg_x +nav_shift*leg_y/nav_leg_length, last_wp_y + nav_leg
 1338              		.loc 1 361 0
 1339 0160 FFF7FEBF 		b	fly_to_xy
 1340              	.L115:
 1341              		.align	2
 1342              	.L114:
 1343 0164 00000000 		.word	estimator_x
 1344 0168 00000000 		.word	estimator_y
 1345 016c 00000000 		.word	.LANCHOR32
 1346 0170 00007A42 		.word	1115291648
 1347 0174 00000000 		.word	.LANCHOR31
 1348 0178 00000000 		.word	.LANCHOR4
 1349 017c 00000000 		.word	.LANCHOR33
 1350 0180 00000000 		.word	.LANCHOR34
 1351 0184 00000000 		.word	.LANCHOR35
 1352 0188 00000000 		.word	.LANCHOR36
 1353 018c 00000000 		.word	.LANCHOR37
 1354 0190 00000000 		.word	.LANCHOR5
 1355              		.cfi_endproc
 1356              	.LFE42:
 1358              		.section	.text.nav_circle_XY,"ax",%progbits
 1359              		.align	1
 1360              		.global	nav_circle_XY
 1361              		.thumb
 1362              		.thumb_func
 1364              	nav_circle_XY:
 1365              	.LFB35:
 109:subsystems/nav.c **** void nav_circle_XY(float x, float y, float radius) {
 1366              		.loc 1 109 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 24
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              	.LVL51:
 1371 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1372              	.LCFI10:
 1373              		.cfi_def_cfa_offset 36
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1374              		.loc 1 111 0
 1375 0004 684B     		ldr	r3, .L132+32
 109:subsystems/nav.c **** void nav_circle_XY(float x, float y, float radius) {
 1376              		.loc 1 109 0
 1377 0006 87B0     		sub	sp, sp, #28
 1378              	.LCFI11:
 1379              		.cfi_def_cfa_offset 64
 109:subsystems/nav.c **** void nav_circle_XY(float x, float y, float radius) {
 1380              		.loc 1 109 0
 1381 0008 0646     		mov	r6, r0
 1382              		.cfi_offset 14, -4
 1383              		.cfi_offset 11, -8
 1384              		.cfi_offset 10, -12
 1385              		.cfi_offset 9, -16
 1386              		.cfi_offset 8, -20
 1387              		.cfi_offset 7, -24
 1388              		.cfi_offset 6, -28
 1389              		.cfi_offset 5, -32
 1390              		.cfi_offset 4, -36
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1391              		.loc 1 111 0
 1392 000a 1868     		ldr	r0, [r3, #0]	@ float
 1393              	.LVL52:
 109:subsystems/nav.c **** void nav_circle_XY(float x, float y, float radius) {
 1394              		.loc 1 109 0
 1395 000c 1446     		mov	r4, r2
 1396 000e 0F46     		mov	r7, r1
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1397              		.loc 1 111 0
 1398 0010 FFF7FEFF 		bl	__aeabi_fsub
 1399              	.LVL53:
 1400 0014 FFF7FEFF 		bl	__aeabi_f2d
 1401 0018 644B     		ldr	r3, .L132+36
 1402 001a 8246     		mov	sl, r0
 1403 001c 8B46     		mov	fp, r1
 1404 001e 1868     		ldr	r0, [r3, #0]	@ float
 1405 0020 3146     		mov	r1, r6
 1406 0022 FFF7FEFF 		bl	__aeabi_fsub
 1407 0026 FFF7FEFF 		bl	__aeabi_f2d
 110:subsystems/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 1408              		.loc 1 110 0
 1409 002a 614D     		ldr	r5, .L132+40
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1410              		.loc 1 111 0
 1411 002c 0B46     		mov	r3, r1
 1412 002e 0246     		mov	r2, r0
 1413 0030 5946     		mov	r1, fp
 1414 0032 5046     		mov	r0, sl
 110:subsystems/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 1415              		.loc 1 110 0
 1416 0034 D5F80080 		ldr	r8, [r5, #0]	@ float
 1417              	.LVL54:
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1418              		.loc 1 111 0
 1419 0038 FFF7FEFF 		bl	atan2
 1420 003c FFF7FEFF 		bl	__aeabi_d2f
 113:subsystems/nav.c ****   if (nav_in_circle) {
 1421              		.loc 1 113 0
 1422 0040 5C4B     		ldr	r3, .L132+44
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1423              		.loc 1 111 0
 1424 0042 8146     		mov	r9, r0
 113:subsystems/nav.c ****   if (nav_in_circle) {
 1425              		.loc 1 113 0
 1426 0044 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 111:subsystems/nav.c ****   nav_circle_trigo_qdr = atan2(estimator_y - y, estimator_x - x);
 1427              		.loc 1 111 0
 1428 0046 2860     		str	r0, [r5, #0]	@ float
 113:subsystems/nav.c ****   if (nav_in_circle) {
 1429              		.loc 1 113 0
 1430 0048 002B     		cmp	r3, #0
 1431 004a 38D0     		beq	.L117
 1432              	.LBB5:
 114:subsystems/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 1433              		.loc 1 114 0
 1434 004c 4146     		mov	r1, r8
 1435 004e FFF7FEFF 		bl	__aeabi_fsub
 1436 0052 08E0     		b	.L131
 1437              	.LVL55:
 1438              	.L119:
 115:subsystems/nav.c ****     NormRadAngle(trigo_diff);
 1439              		.loc 1 115 0
 1440 0054 4CA3     		adr	r3, .L132
 1441 0056 D3E90023 		ldrd	r2, [r3]
 1442 005a 5046     		mov	r0, sl
 1443 005c 5946     		mov	r1, fp
 1444 005e FFF7FEFF 		bl	__aeabi_dsub
 1445 0062 FFF7FEFF 		bl	__aeabi_d2f
 1446              	.L131:
 1447 0066 0546     		mov	r5, r0
 1448 0068 FFF7FEFF 		bl	__aeabi_f2d
 1449 006c 48A3     		adr	r3, .L132+8
 1450 006e D3E90023 		ldrd	r2, [r3]
 1451 0072 8246     		mov	sl, r0
 1452 0074 8B46     		mov	fp, r1
 1453 0076 FFF7FEFF 		bl	__aeabi_dcmpgt
 1454 007a 0028     		cmp	r0, #0
 1455 007c EAD1     		bne	.L119
 1456 007e 09E0     		b	.L120
 1457              	.L121:
 1458 0080 41A3     		adr	r3, .L132
 1459 0082 D3E90023 		ldrd	r2, [r3]
 1460 0086 5046     		mov	r0, sl
 1461 0088 5946     		mov	r1, fp
 1462 008a FFF7FEFF 		bl	__aeabi_dadd
 1463 008e FFF7FEFF 		bl	__aeabi_d2f
 1464 0092 0546     		mov	r5, r0
 1465              	.L120:
 1466 0094 2846     		mov	r0, r5
 1467 0096 FFF7FEFF 		bl	__aeabi_f2d
 1468 009a 3FA3     		adr	r3, .L132+16
 1469 009c D3E90023 		ldrd	r2, [r3]
 1470 00a0 8246     		mov	sl, r0
 1471 00a2 8B46     		mov	fp, r1
 1472 00a4 FFF7FEFF 		bl	__aeabi_dcmplt
 1473 00a8 0028     		cmp	r0, #0
 1474 00aa E9D1     		bne	.L121
 116:subsystems/nav.c ****     nav_circle_radians += trigo_diff;
 1475              		.loc 1 116 0
 1476 00ac DFF81481 		ldr	r8, .L132+60
 1477              	.LVL56:
 1478 00b0 2946     		mov	r1, r5
 1479 00b2 D8F80000 		ldr	r0, [r8, #0]	@ float
 1480 00b6 FFF7FEFF 		bl	__aeabi_fadd
 1481 00ba C8F80000 		str	r0, [r8, #0]	@ float
 1482              	.LVL57:
 1483              	.L117:
 1484              	.LBE5:
 119:subsystems/nav.c ****   float dist2_center = DistanceSquare(estimator_x, estimator_y, x, y);
 1485              		.loc 1 119 0
 1486 00be 3B4B     		ldr	r3, .L132+36
 1487 00c0 3146     		mov	r1, r6
 1488 00c2 1868     		ldr	r0, [r3, #0]	@ float
 1489 00c4 FFF7FEFF 		bl	__aeabi_fsub
 1490 00c8 374B     		ldr	r3, .L132+32
 1491 00ca 0546     		mov	r5, r0
 1492              	.LVL58:
 1493 00cc 3946     		mov	r1, r7
 1494 00ce 1868     		ldr	r0, [r3, #0]	@ float
 1495 00d0 FFF7FEFF 		bl	__aeabi_fsub
 1496 00d4 2946     		mov	r1, r5
 1497 00d6 8046     		mov	r8, r0
 1498              	.LVL59:
 1499 00d8 2846     		mov	r0, r5
 1500 00da FFF7FEFF 		bl	__aeabi_fmul
 1501 00de 4146     		mov	r1, r8
 1502 00e0 0546     		mov	r5, r0
 1503 00e2 4046     		mov	r0, r8
 1504 00e4 FFF7FEFF 		bl	__aeabi_fmul
 1505 00e8 0146     		mov	r1, r0
 1506 00ea 2846     		mov	r0, r5
 1507 00ec FFF7FEFF 		bl	__aeabi_fadd
 121:subsystems/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1508              		.loc 1 121 0
 1509 00f0 0021     		movs	r1, #0
 119:subsystems/nav.c ****   float dist2_center = DistanceSquare(estimator_x, estimator_y, x, y);
 1510              		.loc 1 119 0
 1511 00f2 8346     		mov	fp, r0
 1512              	.LVL60:
 121:subsystems/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1513              		.loc 1 121 0
 1514 00f4 2046     		mov	r0, r4
 1515 00f6 FFF7FEFF 		bl	__aeabi_fcmpgt
 1516 00fa 10B9     		cbnz	r0, .L122
 1517 00fc DFF8C8A0 		ldr	sl, .L132+64
 1518              	.LVL61:
 1519 0100 01E0     		b	.L123
 1520              	.LVL62:
 1521              	.L122:
 1522 0102 4FF07E5A 		mov	sl, #1065353216
 1523              	.LVL63:
 1524              	.L123:
 123:subsystems/nav.c ****   radius += -nav_shift;
 1525              		.loc 1 123 0
 1526 0106 2C4B     		ldr	r3, .L132+48
 1527 0108 2046     		mov	r0, r4
 1528 010a 1968     		ldr	r1, [r3, #0]	@ float
 1529 010c FFF7FEFF 		bl	__aeabi_fsub
 125:subsystems/nav.c ****   float abs_radius = fabs(radius);
 1530              		.loc 1 125 0
 1531 0110 20F00045 		bic	r5, r0, #-2147483648
 1532              	.LVL64:
 129:subsystems/nav.c ****     (dist2_center > Square(abs_radius + dist_carrot)
 1533              		.loc 1 129 0
 1534 0114 2949     		ldr	r1, .L132+52
 123:subsystems/nav.c ****   radius += -nav_shift;
 1535              		.loc 1 123 0
 1536 0116 8046     		mov	r8, r0
 1537              	.LVL65:
 129:subsystems/nav.c ****     (dist2_center > Square(abs_radius + dist_carrot)
 1538              		.loc 1 129 0
 1539 0118 2846     		mov	r0, r5
 1540 011a FFF7FEFF 		bl	__aeabi_fadd
 128:subsystems/nav.c ****   circle_bank =
 1541              		.loc 1 128 0
 1542 011e 0146     		mov	r1, r0
 1543 0120 FFF7FEFF 		bl	__aeabi_fmul
 1544 0124 0146     		mov	r1, r0
 1545 0126 5846     		mov	r0, fp
 1546 0128 FFF7FEFF 		bl	__aeabi_fcmpgt
 1547 012c 0028     		cmp	r0, #0
 1548 012e 4DD1     		bne	.L124
 130:subsystems/nav.c ****       || dist2_center < Square(abs_radius - dist_carrot)) ?
 1549              		.loc 1 130 0
 1550 0130 2249     		ldr	r1, .L132+52
 1551 0132 2846     		mov	r0, r5
 1552 0134 FFF7FEFF 		bl	__aeabi_fsub
 128:subsystems/nav.c ****   circle_bank =
 1553              		.loc 1 128 0
 1554 0138 0146     		mov	r1, r0
 1555 013a FFF7FEFF 		bl	__aeabi_fmul
 1556 013e 0146     		mov	r1, r0
 1557 0140 5846     		mov	r0, fp
 1558 0142 FFF7FEFF 		bl	__aeabi_fcmplt
 1559 0146 0028     		cmp	r0, #0
 1560 0148 40D1     		bne	.L124
 132:subsystems/nav.c ****     atan(estimator_hspeed_mod*estimator_hspeed_mod / (G*radius));
 1561              		.loc 1 132 0
 1562 014a 1D4B     		ldr	r3, .L132+56
 1563 014c 1868     		ldr	r0, [r3, #0]	@ float
 1564 014e 0146     		mov	r1, r0
 1565 0150 FFF7FEFF 		bl	__aeabi_fmul
 1566 0154 FFF7FEFF 		bl	__aeabi_f2d
 1567 0158 CDE90201 		strd	r0, [sp, #8]
 1568 015c 4046     		mov	r0, r8
 1569 015e FFF7FEFF 		bl	__aeabi_f2d
 1570 0162 0FA3     		adr	r3, .L132+24
 1571 0164 D3E90023 		ldrd	r2, [r3]
 1572 0168 FFF7FEFF 		bl	__aeabi_dmul
 1573 016c 0246     		mov	r2, r0
 1574 016e 0B46     		mov	r3, r1
 1575 0170 DDE90201 		ldrd	r0, [sp, #8]
 1576 0174 FFF7FEFF 		bl	__aeabi_ddiv
 1577 0178 FFF7FEFF 		bl	atan
 128:subsystems/nav.c ****   circle_bank =
 1578              		.loc 1 128 0
 1579 017c FFF7FEFF 		bl	__aeabi_d2f
 1580 0180 25E0     		b	.L125
 1581              	.L133:
 1582 0182 00BFAFF3 		.align	3
 1582      0080
 1583              	.L132:
 1584 0188 182D4454 		.word	1413754136
 1585 018c FB211940 		.word	1075388923
 1586 0190 182D4454 		.word	1413754136
 1587 0194 FB210940 		.word	1074340347
 1588 0198 182D4454 		.word	1413754136
 1589 019c FB2109C0 		.word	-1073143301
 1590 01a0 E9263108 		.word	137438953
 1591 01a4 AC9C2340 		.word	1076075692
 1592 01a8 00000000 		.word	estimator_y
 1593 01ac 00000000 		.word	estimator_x
 1594 01b0 00000000 		.word	.LANCHOR38
 1595 01b4 00000000 		.word	.LANCHOR3
 1596 01b8 00000000 		.word	.LANCHOR5
 1597 01bc 00007A42 		.word	1115291648
 1598 01c0 00000000 		.word	estimator_hspeed_mod
 1599 01c4 00000000 		.word	.LANCHOR2
 1600 01c8 000080BF 		.word	-1082130432
 1601              	.L124:
 1602 01cc 0020     		movs	r0, #0
 1603              	.L125:
 1604 01ce 4E4B     		ldr	r3, .L134+16
 134:subsystems/nav.c ****   float carrot_angle = dist_carrot / abs_radius;
 1605              		.loc 1 134 0
 1606 01d0 2946     		mov	r1, r5
 128:subsystems/nav.c ****   circle_bank =
 1607              		.loc 1 128 0
 1608 01d2 1860     		str	r0, [r3, #0]	@ float
 134:subsystems/nav.c ****   float carrot_angle = dist_carrot / abs_radius;
 1609              		.loc 1 134 0
 1610 01d4 4D48     		ldr	r0, .L134+20
 1611 01d6 FFF7FEFF 		bl	__aeabi_fdiv
 1612 01da 0446     		mov	r4, r0
 1613              	.LVL66:
 135:subsystems/nav.c ****   carrot_angle = Min(carrot_angle, M_PI/4);
 1614              		.loc 1 135 0
 1615 01dc FFF7FEFF 		bl	__aeabi_f2d
 1616 01e0 45A3     		adr	r3, .L134
 1617 01e2 D3E90023 		ldrd	r2, [r3]
 1618 01e6 FFF7FEFF 		bl	__aeabi_dcmplt
 1619 01ea 00B9     		cbnz	r0, .L126
 1620 01ec 484C     		ldr	r4, .L134+24
 1621              	.LVL67:
 1622              	.L126:
 136:subsystems/nav.c ****   carrot_angle = Max(carrot_angle, M_PI/16);
 1623              		.loc 1 136 0
 1624 01ee 2046     		mov	r0, r4
 1625 01f0 FFF7FEFF 		bl	__aeabi_f2d
 1626 01f4 42A3     		adr	r3, .L134+8
 1627 01f6 D3E90023 		ldrd	r2, [r3]
 1628 01fa FFF7FEFF 		bl	__aeabi_dcmpgt
 1629 01fe 00B9     		cbnz	r0, .L127
 1630 0200 444C     		ldr	r4, .L134+28
 1631              	.LVL68:
 1632              	.L127:
 138:subsystems/nav.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 1633              		.loc 1 138 0
 1634 0202 454B     		ldr	r3, .L134+32
 1635 0204 0222     		movs	r2, #2
 1636 0206 1A70     		strb	r2, [r3, #0]
 140:subsystems/nav.c ****   if (nav_mode == NAV_MODE_COURSE)
 1637              		.loc 1 140 0
 1638 0208 444B     		ldr	r3, .L134+36
 1639 020a 1B68     		ldr	r3, [r3, #0]
 1640 020c 9342     		cmp	r3, r2
 1641 020e 1CD1     		bne	.L129
 141:subsystems/nav.c ****     radius_carrot += (abs_radius / cos(carrot_angle) - abs_radius);
 1642              		.loc 1 141 0
 1643 0210 2846     		mov	r0, r5
 1644 0212 FFF7FEFF 		bl	__aeabi_f2d
 1645 0216 CDE90201 		strd	r0, [sp, #8]
 1646 021a 2046     		mov	r0, r4
 1647 021c FFF7FEFF 		bl	__aeabi_f2d
 1648 0220 FFF7FEFF 		bl	cos
 1649 0224 0246     		mov	r2, r0
 1650 0226 0B46     		mov	r3, r1
 1651 0228 DDE90201 		ldrd	r0, [sp, #8]
 1652 022c FFF7FEFF 		bl	__aeabi_ddiv
 1653 0230 DDE90223 		ldrd	r2, [sp, #8]
 1654 0234 FFF7FEFF 		bl	__aeabi_dsub
 1655 0238 0246     		mov	r2, r0
 1656 023a 0B46     		mov	r3, r1
 1657 023c DDE90201 		ldrd	r0, [sp, #8]
 1658 0240 FFF7FEFF 		bl	__aeabi_dadd
 1659 0244 FFF7FEFF 		bl	__aeabi_d2f
 1660 0248 0546     		mov	r5, r0
 1661              	.LVL69:
 1662              	.L129:
 142:subsystems/nav.c ****   fly_to_xy(x+cos(alpha_carrot)*radius_carrot,
 1663              		.loc 1 142 0
 1664 024a 2146     		mov	r1, r4
 1665 024c 5046     		mov	r0, sl
 1666 024e FFF7FEFF 		bl	__aeabi_fmul
 1667 0252 0146     		mov	r1, r0
 1668 0254 4846     		mov	r0, r9
 1669 0256 FFF7FEFF 		bl	__aeabi_fsub
 1670 025a FFF7FEFF 		bl	__aeabi_f2d
 1671 025e 0190     		str	r0, [sp, #4]
 1672 0260 0091     		str	r1, [sp, #0]
 1673 0262 FFF7FEFF 		bl	cos
 1674 0266 CDE90401 		strd	r0, [sp, #16]
 1675 026a 2846     		mov	r0, r5
 1676 026c FFF7FEFF 		bl	__aeabi_f2d
 143:subsystems/nav.c **** 	    y+sin(alpha_carrot)*radius_carrot);
 1677              		.loc 1 143 0
 1678 0270 019A     		ldr	r2, [sp, #4]
 1679 0272 009B     		ldr	r3, [sp, #0]
 142:subsystems/nav.c ****   fly_to_xy(x+cos(alpha_carrot)*radius_carrot,
 1680              		.loc 1 142 0
 1681 0274 8246     		mov	sl, r0
 1682              	.LVL70:
 1683 0276 8B46     		mov	fp, r1
 1684              	.LVL71:
 143:subsystems/nav.c **** 	    y+sin(alpha_carrot)*radius_carrot);
 1685              		.loc 1 143 0
 1686 0278 1046     		mov	r0, r2
 1687 027a 1946     		mov	r1, r3
 1688 027c FFF7FEFF 		bl	sin
 1689 0280 CDE90201 		strd	r0, [sp, #8]
 142:subsystems/nav.c ****   fly_to_xy(x+cos(alpha_carrot)*radius_carrot,
 1690              		.loc 1 142 0
 1691 0284 3046     		mov	r0, r6
 1692 0286 FFF7FEFF 		bl	__aeabi_f2d
 1693 028a 5246     		mov	r2, sl
 1694 028c 0446     		mov	r4, r0
 1695              	.LVL72:
 1696 028e 0D46     		mov	r5, r1
 1697              	.LVL73:
 1698 0290 5B46     		mov	r3, fp
 1699 0292 DDE90401 		ldrd	r0, [sp, #16]
 1700 0296 FFF7FEFF 		bl	__aeabi_dmul
 1701 029a 0246     		mov	r2, r0
 1702 029c 0B46     		mov	r3, r1
 1703 029e 2046     		mov	r0, r4
 1704 02a0 2946     		mov	r1, r5
 1705 02a2 FFF7FEFF 		bl	__aeabi_dadd
 1706 02a6 FFF7FEFF 		bl	__aeabi_d2f
 1707 02aa 0446     		mov	r4, r0
 1708 02ac 3846     		mov	r0, r7
 1709 02ae FFF7FEFF 		bl	__aeabi_f2d
 1710 02b2 5246     		mov	r2, sl
 1711 02b4 CDE90401 		strd	r0, [sp, #16]
 1712 02b8 DDE90201 		ldrd	r0, [sp, #8]
 1713 02bc 5B46     		mov	r3, fp
 1714 02be FFF7FEFF 		bl	__aeabi_dmul
 1715 02c2 0246     		mov	r2, r0
 1716 02c4 0B46     		mov	r3, r1
 1717 02c6 DDE90401 		ldrd	r0, [sp, #16]
 1718 02ca FFF7FEFF 		bl	__aeabi_dadd
 1719 02ce FFF7FEFF 		bl	__aeabi_d2f
 1720 02d2 0146     		mov	r1, r0
 1721 02d4 2046     		mov	r0, r4
 1722 02d6 FFF7FEFF 		bl	fly_to_xy
 144:subsystems/nav.c ****   nav_in_circle = TRUE;
 1723              		.loc 1 144 0
 1724 02da 114B     		ldr	r3, .L134+40
 1725 02dc 0122     		movs	r2, #1
 1726 02de 1A70     		strb	r2, [r3, #0]
 145:subsystems/nav.c ****   nav_circle_x = x;
 1727              		.loc 1 145 0
 1728 02e0 104B     		ldr	r3, .L134+44
 1729 02e2 1E60     		str	r6, [r3, #0]	@ float
 146:subsystems/nav.c ****   nav_circle_y = y;
 1730              		.loc 1 146 0
 1731 02e4 104B     		ldr	r3, .L134+48
 1732 02e6 1F60     		str	r7, [r3, #0]	@ float
 147:subsystems/nav.c ****   nav_circle_radius = radius;
 1733              		.loc 1 147 0
 1734 02e8 104B     		ldr	r3, .L134+52
 1735 02ea C3F80080 		str	r8, [r3, #0]	@ float
 148:subsystems/nav.c **** }
 1736              		.loc 1 148 0
 1737 02ee 07B0     		add	sp, sp, #28
 1738 02f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1739              	.L135:
 1740 02f4 AFF30080 		.align	3
 1741              	.L134:
 1742 02f8 182D4454 		.word	1413754136
 1743 02fc FB21E93F 		.word	1072243195
 1744 0300 182D4454 		.word	1413754136
 1745 0304 FB21C93F 		.word	1070146043
 1746 0308 00000000 		.word	.LANCHOR39
 1747 030c 00007A42 		.word	1115291648
 1748 0310 DB0F493F 		.word	1061752795
 1749 0314 DB0F493E 		.word	1044975579
 1750 0318 00000000 		.word	.LANCHOR37
 1751 031c 00000000 		.word	.LANCHOR23
 1752 0320 00000000 		.word	.LANCHOR3
 1753 0324 00000000 		.word	.LANCHOR40
 1754 0328 00000000 		.word	.LANCHOR41
 1755 032c 00000000 		.word	.LANCHOR42
 1756              		.cfi_endproc
 1757              	.LFE35:
 1759              		.global	__aeabi_fcmpge
 1760              		.section	.text.nav_oval,"ax",%progbits
 1761              		.align	1
 1762              		.global	nav_oval
 1763              		.thumb
 1764              		.thumb_func
 1766              	nav_oval:
 1767              	.LFB58:
 592:subsystems/nav.c **** 
 593:subsystems/nav.c **** void nav_oval(uint8_t p1, uint8_t p2, float radius) {
 1768              		.loc 1 593 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 40
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
 1772              	.LVL74:
 1773 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1774              	.LCFI12:
 1775              		.cfi_def_cfa_offset 36
 594:subsystems/nav.c ****   radius = - radius; /* Historical error ? */
 595:subsystems/nav.c **** 
 596:subsystems/nav.c ****   float alt = waypoints[p1].a;
 597:subsystems/nav.c ****   waypoints[p2].a = alt;
 1776              		.loc 1 597 0
 1777 0004 4FF00C09 		mov	r9, #12
 1778              		.cfi_offset 14, -4
 1779              		.cfi_offset 11, -8
 1780              		.cfi_offset 10, -12
 1781              		.cfi_offset 9, -16
 1782              		.cfi_offset 8, -20
 1783              		.cfi_offset 7, -24
 1784              		.cfi_offset 6, -28
 1785              		.cfi_offset 5, -32
 1786              		.cfi_offset 4, -36
 1787 0008 09FB01F8 		mul	r8, r9, r1
 1788 000c 09FB00F9 		mul	r9, r9, r0
 1789 0010 9D4D     		ldr	r5, .L195+24
 593:subsystems/nav.c **** void nav_oval(uint8_t p1, uint8_t p2, float radius) {
 1790              		.loc 1 593 0
 1791 0012 8DB0     		sub	sp, sp, #52
 1792              	.LCFI13:
 1793              		.cfi_def_cfa_offset 88
 1794              		.loc 1 597 0
 1795 0014 09EB050A 		add	sl, r9, r5
 1796 0018 DAF80830 		ldr	r3, [sl, #8]	@ float
 1797 001c 08EB0506 		add	r6, r8, r5
 1798 0020 B360     		str	r3, [r6, #8]	@ float
 593:subsystems/nav.c **** void nav_oval(uint8_t p1, uint8_t p2, float radius) {
 1799              		.loc 1 593 0
 1800 0022 0890     		str	r0, [sp, #32]
 1801 0024 0991     		str	r1, [sp, #36]
 598:subsystems/nav.c **** 
 599:subsystems/nav.c ****   float p2_p1_x = waypoints[p1].x - waypoints[p2].x;
 1802              		.loc 1 599 0
 1803 0026 59F80500 		ldr	r0, [r9, r5]	@ float
 1804              	.LVL75:
 1805 002a 58F80510 		ldr	r1, [r8, r5]	@ float
 1806              	.LVL76:
 594:subsystems/nav.c ****   radius = - radius; /* Historical error ? */
 1807              		.loc 1 594 0
 1808 002e 02F10044 		add	r4, r2, #-2147483648
 1809              	.LVL77:
 593:subsystems/nav.c **** void nav_oval(uint8_t p1, uint8_t p2, float radius) {
 1810              		.loc 1 593 0
 1811 0032 0392     		str	r2, [sp, #12]	@ float
 1812              		.loc 1 599 0
 1813 0034 FFF7FEFF 		bl	__aeabi_fsub
 600:subsystems/nav.c ****   float p2_p1_y = waypoints[p1].y - waypoints[p2].y;
 1814              		.loc 1 600 0
 1815 0038 7168     		ldr	r1, [r6, #4]	@ float
 599:subsystems/nav.c ****   float p2_p1_x = waypoints[p1].x - waypoints[p2].x;
 1816              		.loc 1 599 0
 1817 003a 8346     		mov	fp, r0
 1818              		.loc 1 600 0
 1819 003c DAF80400 		ldr	r0, [sl, #4]	@ float
 1820 0040 FFF7FEFF 		bl	__aeabi_fsub
 601:subsystems/nav.c ****   float d = sqrt(p2_p1_x*p2_p1_x+p2_p1_y*p2_p1_y);
 1821              		.loc 1 601 0
 1822 0044 5946     		mov	r1, fp
 600:subsystems/nav.c ****   float p2_p1_y = waypoints[p1].y - waypoints[p2].y;
 1823              		.loc 1 600 0
 1824 0046 0746     		mov	r7, r0
 1825              		.loc 1 601 0
 1826 0048 5846     		mov	r0, fp
 1827 004a FFF7FEFF 		bl	__aeabi_fmul
 1828 004e 3946     		mov	r1, r7
 1829 0050 0346     		mov	r3, r0
 1830 0052 3846     		mov	r0, r7
 1831 0054 0293     		str	r3, [sp, #8]
 1832 0056 FFF7FEFF 		bl	__aeabi_fmul
 1833 005a 029B     		ldr	r3, [sp, #8]
 1834 005c 0146     		mov	r1, r0
 1835 005e 1846     		mov	r0, r3
 1836 0060 FFF7FEFF 		bl	__aeabi_fadd
 1837 0064 FFF7FEFF 		bl	__aeabi_f2d
 1838 0068 FFF7FEFF 		bl	sqrt
 1839 006c FFF7FEFF 		bl	__aeabi_d2f
 1840 0070 0346     		mov	r3, r0
 602:subsystems/nav.c **** 
 603:subsystems/nav.c ****   /* Unit vector from p1 to p2 */
 604:subsystems/nav.c ****   float u_x = p2_p1_x / d;
 1841              		.loc 1 604 0
 1842 0072 1946     		mov	r1, r3
 1843 0074 5846     		mov	r0, fp
 1844 0076 0293     		str	r3, [sp, #8]
 1845 0078 FFF7FEFF 		bl	__aeabi_fdiv
 605:subsystems/nav.c ****   float u_y = p2_p1_y / d;
 1846              		.loc 1 605 0
 1847 007c 029B     		ldr	r3, [sp, #8]
 604:subsystems/nav.c ****   float u_x = p2_p1_x / d;
 1848              		.loc 1 604 0
 1849 007e 8346     		mov	fp, r0
 1850              	.LVL78:
 1851              		.loc 1 605 0
 1852 0080 1946     		mov	r1, r3
 1853 0082 3846     		mov	r0, r7
 1854 0084 FFF7FEFF 		bl	__aeabi_fdiv
 606:subsystems/nav.c **** 
 607:subsystems/nav.c ****   /* The half circle centers and the other leg */
 608:subsystems/nav.c ****   struct point p1_center = { waypoints[p1].x + radius * -u_y,
 1855              		.loc 1 608 0
 1856 0088 59F80590 		ldr	r9, [r9, r5]	@ float
 1857 008c 00F10041 		add	r1, r0, #-2147483648
 605:subsystems/nav.c ****   float u_y = p2_p1_y / d;
 1858              		.loc 1 605 0
 1859 0090 0746     		mov	r7, r0
 1860              	.LVL79:
 1861              		.loc 1 608 0
 1862 0092 2046     		mov	r0, r4
 1863 0094 CDF81490 		str	r9, [sp, #20]	@ float
 1864 0098 FFF7FEFF 		bl	__aeabi_fmul
 609:subsystems/nav.c **** 			     waypoints[p1].y + radius * u_x,
 1865              		.loc 1 609 0
 1866 009c DAF804A0 		ldr	sl, [sl, #4]	@ float
 608:subsystems/nav.c ****   struct point p1_center = { waypoints[p1].x + radius * -u_y,
 1867              		.loc 1 608 0
 1868 00a0 0790     		str	r0, [sp, #28]	@ float
 1869              		.loc 1 609 0
 1870 00a2 5946     		mov	r1, fp
 1871 00a4 2046     		mov	r0, r4
 1872 00a6 CDF810A0 		str	sl, [sp, #16]	@ float
 1873 00aa FFF7FEFF 		bl	__aeabi_fmul
 1874 00ae 0690     		str	r0, [sp, #24]	@ float
 610:subsystems/nav.c **** 			     alt  };
 611:subsystems/nav.c ****   struct point p1_out = { waypoints[p1].x + 2*radius * -u_y,
 612:subsystems/nav.c **** 			  waypoints[p1].y + 2*radius * u_x,
 613:subsystems/nav.c **** 			  alt  };
 614:subsystems/nav.c **** 
 615:subsystems/nav.c ****   struct point p2_in = { waypoints[p2].x + 2*radius * -u_y,
 616:subsystems/nav.c **** 			 waypoints[p2].y + 2*radius * u_x,
 617:subsystems/nav.c **** 			 alt  };
 618:subsystems/nav.c ****   struct point p2_center = { waypoints[p2].x + radius * -u_y,
 619:subsystems/nav.c **** 			     waypoints[p2].y + radius * u_x,
 620:subsystems/nav.c **** 			     alt  };
 621:subsystems/nav.c **** 
 622:subsystems/nav.c ****   float qdr_out_2 = M_PI - atan2(u_y, u_x);
 1875              		.loc 1 622 0
 1876 00b0 3846     		mov	r0, r7
 1877 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1878 00b6 CDE90A01 		strd	r0, [sp, #40]
 1879 00ba 5846     		mov	r0, fp
 1880 00bc FFF7FEFF 		bl	__aeabi_f2d
 1881 00c0 0246     		mov	r2, r0
 1882 00c2 0B46     		mov	r3, r1
 1883 00c4 DDE90A01 		ldrd	r0, [sp, #40]
 615:subsystems/nav.c ****   struct point p2_in = { waypoints[p2].x + 2*radius * -u_y,
 1884              		.loc 1 615 0
 1885 00c8 58F80590 		ldr	r9, [r8, r5]	@ float
 616:subsystems/nav.c **** 			 waypoints[p2].y + 2*radius * u_x,
 1886              		.loc 1 616 0
 1887 00cc D6F80480 		ldr	r8, [r6, #4]	@ float
 1888              		.loc 1 622 0
 1889 00d0 FFF7FEFF 		bl	atan2
 1890 00d4 0246     		mov	r2, r0
 1891 00d6 0B46     		mov	r3, r1
 1892 00d8 65A1     		adr	r1, .L195
 1893 00da D1E90001 		ldrd	r0, [r1]
 1894 00de FFF7FEFF 		bl	__aeabi_dsub
 1895 00e2 FFF7FEFF 		bl	__aeabi_d2f
 1896 00e6 8246     		mov	sl, r0
 1897              	.LVL80:
 623:subsystems/nav.c ****   float qdr_out_1 = qdr_out_2 + M_PI;
 1898              		.loc 1 623 0
 1899 00e8 FFF7FEFF 		bl	__aeabi_f2d
 1900 00ec 60A3     		adr	r3, .L195
 1901 00ee D3E90023 		ldrd	r2, [r3]
 1902 00f2 FFF7FEFF 		bl	__aeabi_dadd
 1903 00f6 FFF7FEFF 		bl	__aeabi_d2f
 624:subsystems/nav.c ****   if (radius < 0) {
 1904              		.loc 1 624 0
 1905 00fa 0021     		movs	r1, #0
 623:subsystems/nav.c ****   float qdr_out_1 = qdr_out_2 + M_PI;
 1906              		.loc 1 623 0
 1907 00fc 0546     		mov	r5, r0
 1908              	.LVL81:
 1909              		.loc 1 624 0
 1910 00fe 2046     		mov	r0, r4
 1911 0100 FFF7FEFF 		bl	__aeabi_fcmplt
 1912 0104 58B1     		cbz	r0, .L137
 625:subsystems/nav.c ****     qdr_out_2 += M_PI;
 626:subsystems/nav.c ****     qdr_out_1 += M_PI;
 1913              		.loc 1 626 0
 1914 0106 2846     		mov	r0, r5
 1915 0108 FFF7FEFF 		bl	__aeabi_f2d
 1916 010c 58A3     		adr	r3, .L195
 1917 010e D3E90023 		ldrd	r2, [r3]
 1918 0112 FFF7FEFF 		bl	__aeabi_dadd
 1919 0116 FFF7FEFF 		bl	__aeabi_d2f
 1920 011a AA46     		mov	sl, r5
 1921 011c 0546     		mov	r5, r0
 1922              	.L137:
 627:subsystems/nav.c ****   }
 628:subsystems/nav.c ****   float qdr_anticipation = (radius > 0 ? -15 : 15);
 1923              		.loc 1 628 0
 1924 011e 2046     		mov	r0, r4
 1925 0120 0021     		movs	r1, #0
 1926 0122 FFF7FEFF 		bl	__aeabi_fcmpgt
 1927 0126 08B9     		cbnz	r0, .L139
 1928 0128 584E     		ldr	r6, .L195+28
 1929              	.LVL82:
 1930 012a 00E0     		b	.L140
 1931              	.LVL83:
 1932              	.L139:
 1933 012c 584E     		ldr	r6, .L195+32
 1934              	.LVL84:
 1935              	.L140:
 629:subsystems/nav.c **** 
 630:subsystems/nav.c ****   switch (oval_status) {
 1936              		.loc 1 630 0
 1937 012e 594B     		ldr	r3, .L195+36
 1938 0130 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1939 0132 032B     		cmp	r3, #3
 1940 0134 00F2A981 		bhi	.L179
 1941 0138 DFE813F0 		tbh	[pc, r3, lsl #1]
 1942              	.L146:
 1943 013c B600     		.2byte	(.L142-.L146)/2
 1944 013e F300     		.2byte	(.L143-.L146)/2
 1945 0140 8401     		.2byte	(.L144-.L146)/2
 1946 0142 0400     		.2byte	(.L145-.L146)/2
 1947              	.L145:
 631:subsystems/nav.c ****   case OC1 :
 632:subsystems/nav.c ****     nav_circle_XY(p1_center.x,p1_center.y, -radius);
 1948              		.loc 1 632 0
 1949 0144 0799     		ldr	r1, [sp, #28]	@ float
 1950 0146 0598     		ldr	r0, [sp, #20]	@ float
 1951 0148 FFF7FEFF 		bl	__aeabi_fadd
 1952 014c 0699     		ldr	r1, [sp, #24]	@ float
 1953 014e 0446     		mov	r4, r0
 1954              	.LVL85:
 1955 0150 0498     		ldr	r0, [sp, #16]	@ float
 1956 0152 FFF7FEFF 		bl	__aeabi_fadd
 1957 0156 039A     		ldr	r2, [sp, #12]	@ float
 1958 0158 0146     		mov	r1, r0
 1959 015a 2046     		mov	r0, r4
 1960 015c FFF7FEFF 		bl	nav_circle_XY
 1961              	.LBB6:
 1962              	.LBB7:
 633:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out_1)-qdr_anticipation)) {
 1963              		.loc 1 633 0
 1964 0160 4D4B     		ldr	r3, .L195+40
 1965 0162 4FF00008 		mov	r8, #0
 1966 0166 1868     		ldr	r0, [r3, #0]	@ float
 1967 0168 FFF7FEFF 		bl	__aeabi_f2d
 1968 016c 0246     		mov	r2, r0
 1969 016e 0B46     		mov	r3, r1
 1970 0170 41A1     		adr	r1, .L195+8
 1971 0172 D1E90001 		ldrd	r0, [r1]
 1972 0176 FFF7FEFF 		bl	__aeabi_dsub
 1973 017a 41A3     		adr	r3, .L195+16
 1974 017c D3E90023 		ldrd	r2, [r3]
 1975 0180 FFF7FEFF 		bl	__aeabi_dmul
 1976 0184 FFF7FEFF 		bl	__aeabi_d2f
 1977 0188 0446     		mov	r4, r0
 1978              	.LVL86:
 1979              	.LBB8:
 1980 018a 04E0     		b	.L147
 1981              	.LVL87:
 1982              	.L150:
 1983 018c 2046     		mov	r0, r4
 1984 018e 4349     		ldr	r1, .L195+44
 1985 0190 FFF7FEFF 		bl	__aeabi_fadd
 1986 0194 0446     		mov	r4, r0
 1987              	.LVL88:
 1988              	.L147:
 1989 0196 2046     		mov	r0, r4
 1990 0198 0021     		movs	r1, #0
 1991 019a 5FFA88F7 		uxtb	r7, r8
 1992              	.LVL89:
 1993 019e FFF7FEFF 		bl	__aeabi_fcmplt
 1994 01a2 58B1     		cbz	r0, .L148
 1995 01a4 08F10108 		add	r8, r8, #1
 1996 01a8 B8F5807F 		cmp	r8, #256
 1997 01ac EED1     		bne	.L150
 1998 01ae 0027     		movs	r7, #0
 1999              	.LVL90:
 2000 01b0 04E0     		b	.L148
 2001              	.L153:
 2002 01b2 2046     		mov	r0, r4
 2003 01b4 3949     		ldr	r1, .L195+44
 2004 01b6 FFF7FEFF 		bl	__aeabi_fsub
 2005 01ba 0446     		mov	r4, r0
 2006              	.LVL91:
 2007              	.L148:
 2008 01bc 2046     		mov	r0, r4
 2009 01be 3749     		ldr	r1, .L195+44
 2010 01c0 FFF7FEFF 		bl	__aeabi_fcmpge
 2011 01c4 18B1     		cbz	r0, .L151
 2012 01c6 0137     		adds	r7, r7, #1
 2013              	.LVL92:
 2014 01c8 FFB2     		uxtb	r7, r7
 2015              	.LVL93:
 2016 01ca 002F     		cmp	r7, #0
 2017 01cc F1D1     		bne	.L153
 2018              	.L151:
 2019              	.LBE8:
 2020              	.LBE7:
 2021 01ce 2846     		mov	r0, r5
 2022 01d0 FFF7FEFF 		bl	__aeabi_f2d
 2023 01d4 2AA3     		adr	r3, .L195+16
 2024 01d6 D3E90023 		ldrd	r2, [r3]
 2025 01da FFF7FEFF 		bl	__aeabi_dmul
 2026 01de 8046     		mov	r8, r0
 2027 01e0 3046     		mov	r0, r6
 2028 01e2 8946     		mov	r9, r1
 2029 01e4 FFF7FEFF 		bl	__aeabi_f2d
 2030 01e8 0246     		mov	r2, r0
 2031 01ea 0B46     		mov	r3, r1
 2032 01ec 4046     		mov	r0, r8
 2033 01ee 4946     		mov	r1, r9
 2034 01f0 FFF7FEFF 		bl	__aeabi_dsub
 2035 01f4 0646     		mov	r6, r0
 2036              	.LVL94:
 2037 01f6 2046     		mov	r0, r4
 2038 01f8 0F46     		mov	r7, r1
 2039              	.LVL95:
 2040 01fa FFF7FEFF 		bl	__aeabi_f2d
 2041 01fe 0246     		mov	r2, r0
 2042 0200 0B46     		mov	r3, r1
 2043 0202 3046     		mov	r0, r6
 2044 0204 3946     		mov	r1, r7
 2045 0206 FFF7FEFF 		bl	__aeabi_dsub
 2046 020a FFF7FEFF 		bl	__aeabi_d2f
 2047 020e 0026     		movs	r6, #0
 2048 0210 0446     		mov	r4, r0
 2049              	.LVL96:
 2050              	.LBB9:
 2051 0212 04E0     		b	.L154
 2052              	.LVL97:
 2053              	.L157:
 2054 0214 2046     		mov	r0, r4
 2055 0216 2149     		ldr	r1, .L195+44
 2056 0218 FFF7FEFF 		bl	__aeabi_fadd
 2057 021c 0446     		mov	r4, r0
 2058              	.LVL98:
 2059              	.L154:
 2060 021e 2046     		mov	r0, r4
 2061 0220 0021     		movs	r1, #0
 2062 0222 F5B2     		uxtb	r5, r6
 2063              	.LVL99:
 2064 0224 FFF7FEFF 		bl	__aeabi_fcmplt
 2065 0228 50B1     		cbz	r0, .L155
 2066 022a 0136     		adds	r6, r6, #1
 2067 022c B6F5807F 		cmp	r6, #256
 2068 0230 F0D1     		bne	.L157
 2069 0232 0025     		movs	r5, #0
 2070              	.LVL100:
 2071 0234 04E0     		b	.L155
 2072              	.L160:
 2073 0236 2046     		mov	r0, r4
 2074 0238 1849     		ldr	r1, .L195+44
 2075 023a FFF7FEFF 		bl	__aeabi_fsub
 2076 023e 0446     		mov	r4, r0
 2077              	.LVL101:
 2078              	.L155:
 2079 0240 2046     		mov	r0, r4
 2080 0242 1649     		ldr	r1, .L195+44
 2081 0244 FFF7FEFF 		bl	__aeabi_fcmpge
 2082 0248 18B1     		cbz	r0, .L158
 2083 024a 0135     		adds	r5, r5, #1
 2084              	.LVL102:
 2085 024c EDB2     		uxtb	r5, r5
 2086              	.LVL103:
 2087 024e 002D     		cmp	r5, #0
 2088 0250 F1D1     		bne	.L160
 2089              	.L158:
 2090              	.LBE9:
 2091 0252 2046     		mov	r0, r4
 2092 0254 1249     		ldr	r1, .L195+48
 2093 0256 FFF7FEFF 		bl	__aeabi_fcmpgt
 2094 025a 30B9     		cbnz	r0, .L161
 2095 025c 2046     		mov	r0, r4
 2096 025e 1149     		ldr	r1, .L195+52
 2097 0260 FFF7FEFF 		bl	__aeabi_fcmplt
 2098 0264 0028     		cmp	r0, #0
 2099 0266 00F01081 		beq	.L179
 2100              	.L161:
 2101              	.LBE6:
 634:subsystems/nav.c ****       oval_status = OR12;
 2102              		.loc 1 634 0
 2103 026a 0022     		movs	r2, #0
 2104 026c 06E1     		b	.L193
 2105              	.L196:
 2106 026e 00BF     		.align	3
 2107              	.L195:
 2108 0270 182D4454 		.word	1413754136
 2109 0274 FB210940 		.word	1074340347
 2110 0278 182D4454 		.word	1413754136
 2111 027c FB21F93F 		.word	1073291771
 2112 0280 F8C1631A 		.word	442745336
 2113 0284 DCA54C40 		.word	1078765020
 2114 0288 00000000 		.word	.LANCHOR8
 2115 028c 00007041 		.word	1097859072
 2116 0290 000070C1 		.word	-1049624576
 2117 0294 00000000 		.word	.LANCHOR26
 2118 0298 00000000 		.word	.LANCHOR38
 2119 029c 0000B443 		.word	1135869952
 2120 02a0 0000AF43 		.word	1135542272
 2121 02a4 00002041 		.word	1092616192
 2122              	.LVL104:
 2123              	.L142:
 611:subsystems/nav.c ****   struct point p1_out = { waypoints[p1].x + 2*radius * -u_y,
 2124              		.loc 1 611 0
 2125 02a8 2046     		mov	r0, r4
 2126 02aa 4FF04041 		mov	r1, #-1073741824
 2127 02ae FFF7FEFF 		bl	__aeabi_fmul
 2128 02b2 3946     		mov	r1, r7
 2129 02b4 FFF7FEFF 		bl	__aeabi_fmul
 2130 02b8 0646     		mov	r6, r0
 2131              	.LVL105:
 2132 02ba 3146     		mov	r1, r6
 2133 02bc 0598     		ldr	r0, [sp, #20]	@ float
 2134 02be FFF7FEFF 		bl	__aeabi_fadd
 612:subsystems/nav.c **** 			  waypoints[p1].y + 2*radius * u_x,
 2135              		.loc 1 612 0
 2136 02c2 2146     		mov	r1, r4
 2137              	.LVL106:
 611:subsystems/nav.c ****   struct point p1_out = { waypoints[p1].x + 2*radius * -u_y,
 2138              		.loc 1 611 0
 2139 02c4 0546     		mov	r5, r0
 2140              	.LVL107:
 612:subsystems/nav.c **** 			  waypoints[p1].y + 2*radius * u_x,
 2141              		.loc 1 612 0
 2142 02c6 2046     		mov	r0, r4
 2143              	.LVL108:
 2144 02c8 FFF7FEFF 		bl	__aeabi_fadd
 2145 02cc 5946     		mov	r1, fp
 2146 02ce FFF7FEFF 		bl	__aeabi_fmul
 2147 02d2 0746     		mov	r7, r0
 2148              	.LVL109:
 2149 02d4 3946     		mov	r1, r7
 2150 02d6 0498     		ldr	r0, [sp, #16]	@ float
 2151 02d8 FFF7FEFF 		bl	__aeabi_fadd
 615:subsystems/nav.c ****   struct point p2_in = { waypoints[p2].x + 2*radius * -u_y,
 2152              		.loc 1 615 0
 2153 02dc 3146     		mov	r1, r6
 612:subsystems/nav.c **** 			  waypoints[p1].y + 2*radius * u_x,
 2154              		.loc 1 612 0
 2155 02de 0446     		mov	r4, r0
 2156              	.LVL110:
 615:subsystems/nav.c ****   struct point p2_in = { waypoints[p2].x + 2*radius * -u_y,
 2157              		.loc 1 615 0
 2158 02e0 4846     		mov	r0, r9
 2159 02e2 FFF7FEFF 		bl	__aeabi_fadd
 616:subsystems/nav.c **** 			 waypoints[p2].y + 2*radius * u_x,
 2160              		.loc 1 616 0
 2161 02e6 3946     		mov	r1, r7
 615:subsystems/nav.c ****   struct point p2_in = { waypoints[p2].x + 2*radius * -u_y,
 2162              		.loc 1 615 0
 2163 02e8 0646     		mov	r6, r0
 616:subsystems/nav.c **** 			 waypoints[p2].y + 2*radius * u_x,
 2164              		.loc 1 616 0
 2165 02ea 4046     		mov	r0, r8
 2166 02ec FFF7FEFF 		bl	__aeabi_fadd
 2167 02f0 0746     		mov	r7, r0
 635:subsystems/nav.c ****       InitStage();
 636:subsystems/nav.c ****       LINE_START_FUNCTION;
 637:subsystems/nav.c ****     }
 638:subsystems/nav.c ****     return;
 639:subsystems/nav.c **** 
 640:subsystems/nav.c ****   case OR12:
 641:subsystems/nav.c ****     nav_route_xy(p1_out.x, p1_out.y, p2_in.x, p2_in.y);
 2168              		.loc 1 641 0
 2169 02f2 2146     		mov	r1, r4
 2170 02f4 2846     		mov	r0, r5
 2171 02f6 3246     		mov	r2, r6
 2172 02f8 3B46     		mov	r3, r7
 2173 02fa FFF7FEFF 		bl	nav_route_xy
 642:subsystems/nav.c ****     if (nav_approaching_xy(p2_in.x, p2_in.y, p1_out.x, p1_out.y, CARROT)) {
 2174              		.loc 1 642 0
 2175 02fe 684B     		ldr	r3, .L197+16
 2176 0300 3046     		mov	r0, r6
 2177 0302 0093     		str	r3, [sp, #0]	@ float
 2178 0304 3946     		mov	r1, r7
 2179 0306 2A46     		mov	r2, r5
 2180 0308 2346     		mov	r3, r4
 2181 030a FFF7FEFF 		bl	nav_approaching_xy
 2182 030e 0028     		cmp	r0, #0
 2183 0310 00F0BB80 		beq	.L179
 643:subsystems/nav.c ****       oval_status = OC2;
 2184              		.loc 1 643 0
 2185 0314 634B     		ldr	r3, .L197+20
 2186 0316 0122     		movs	r2, #1
 2187 0318 1A70     		strb	r2, [r3, #0]
 644:subsystems/nav.c ****       nav_oval_count++;
 2188              		.loc 1 644 0
 2189 031a 634B     		ldr	r3, .L197+24
 2190 031c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2191 031e 0132     		adds	r2, r2, #1
 2192 0320 ADE0     		b	.L194
 2193              	.LVL111:
 2194              	.L143:
 645:subsystems/nav.c ****       InitStage();
 646:subsystems/nav.c ****       LINE_STOP_FUNCTION;
 647:subsystems/nav.c ****     }
 648:subsystems/nav.c ****     return;
 649:subsystems/nav.c **** 
 650:subsystems/nav.c ****   case OC2 :
 651:subsystems/nav.c ****     nav_circle_XY(p2_center.x, p2_center.y, -radius);
 2195              		.loc 1 651 0
 2196 0322 0799     		ldr	r1, [sp, #28]	@ float
 2197 0324 4846     		mov	r0, r9
 2198 0326 FFF7FEFF 		bl	__aeabi_fadd
 2199 032a 0699     		ldr	r1, [sp, #24]	@ float
 2200 032c 0446     		mov	r4, r0
 2201              	.LVL112:
 2202 032e 4046     		mov	r0, r8
 2203 0330 FFF7FEFF 		bl	__aeabi_fadd
 2204 0334 039A     		ldr	r2, [sp, #12]	@ float
 2205 0336 0146     		mov	r1, r0
 2206 0338 2046     		mov	r0, r4
 2207 033a FFF7FEFF 		bl	nav_circle_XY
 2208              	.LBB10:
 2209              	.LBB11:
 652:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out_2)-qdr_anticipation)) {
 2210              		.loc 1 652 0
 2211 033e 5B4B     		ldr	r3, .L197+28
 2212 0340 0027     		movs	r7, #0
 2213              	.LVL113:
 2214 0342 1868     		ldr	r0, [r3, #0]	@ float
 2215 0344 FFF7FEFF 		bl	__aeabi_f2d
 2216 0348 0246     		mov	r2, r0
 2217 034a 0B46     		mov	r3, r1
 2218 034c 50A1     		adr	r1, .L197
 2219 034e D1E90001 		ldrd	r0, [r1]
 2220 0352 FFF7FEFF 		bl	__aeabi_dsub
 2221 0356 50A3     		adr	r3, .L197+8
 2222 0358 D3E90023 		ldrd	r2, [r3]
 2223 035c FFF7FEFF 		bl	__aeabi_dmul
 2224 0360 FFF7FEFF 		bl	__aeabi_d2f
 2225 0364 0446     		mov	r4, r0
 2226              	.LVL114:
 2227              	.LBB12:
 2228 0366 04E0     		b	.L163
 2229              	.LVL115:
 2230              	.L166:
 2231 0368 2046     		mov	r0, r4
 2232 036a 5149     		ldr	r1, .L197+32
 2233 036c FFF7FEFF 		bl	__aeabi_fadd
 2234 0370 0446     		mov	r4, r0
 2235              	.LVL116:
 2236              	.L163:
 2237 0372 2046     		mov	r0, r4
 2238 0374 0021     		movs	r1, #0
 2239 0376 FDB2     		uxtb	r5, r7
 2240              	.LVL117:
 2241 0378 FFF7FEFF 		bl	__aeabi_fcmplt
 2242 037c 50B1     		cbz	r0, .L164
 2243 037e 0137     		adds	r7, r7, #1
 2244 0380 B7F5807F 		cmp	r7, #256
 2245 0384 F0D1     		bne	.L166
 2246 0386 0025     		movs	r5, #0
 2247              	.LVL118:
 2248 0388 04E0     		b	.L164
 2249              	.L169:
 2250 038a 2046     		mov	r0, r4
 2251 038c 4849     		ldr	r1, .L197+32
 2252 038e FFF7FEFF 		bl	__aeabi_fsub
 2253 0392 0446     		mov	r4, r0
 2254              	.LVL119:
 2255              	.L164:
 2256 0394 2046     		mov	r0, r4
 2257 0396 4649     		ldr	r1, .L197+32
 2258 0398 FFF7FEFF 		bl	__aeabi_fcmpge
 2259 039c 18B1     		cbz	r0, .L167
 2260 039e 0135     		adds	r5, r5, #1
 2261              	.LVL120:
 2262 03a0 EDB2     		uxtb	r5, r5
 2263              	.LVL121:
 2264 03a2 002D     		cmp	r5, #0
 2265 03a4 F1D1     		bne	.L169
 2266              	.L167:
 2267              	.LBE12:
 2268              	.LBE11:
 2269 03a6 5046     		mov	r0, sl
 2270 03a8 FFF7FEFF 		bl	__aeabi_f2d
 2271 03ac 3AA3     		adr	r3, .L197+8
 2272 03ae D3E90023 		ldrd	r2, [r3]
 2273 03b2 FFF7FEFF 		bl	__aeabi_dmul
 2274 03b6 8046     		mov	r8, r0
 2275 03b8 3046     		mov	r0, r6
 2276 03ba 8946     		mov	r9, r1
 2277 03bc FFF7FEFF 		bl	__aeabi_f2d
 2278 03c0 0246     		mov	r2, r0
 2279 03c2 0B46     		mov	r3, r1
 2280 03c4 4046     		mov	r0, r8
 2281 03c6 4946     		mov	r1, r9
 2282 03c8 FFF7FEFF 		bl	__aeabi_dsub
 2283 03cc 0646     		mov	r6, r0
 2284              	.LVL122:
 2285 03ce 2046     		mov	r0, r4
 2286 03d0 0F46     		mov	r7, r1
 2287 03d2 FFF7FEFF 		bl	__aeabi_f2d
 2288 03d6 0246     		mov	r2, r0
 2289 03d8 0B46     		mov	r3, r1
 2290 03da 3046     		mov	r0, r6
 2291 03dc 3946     		mov	r1, r7
 2292 03de FFF7FEFF 		bl	__aeabi_dsub
 2293 03e2 FFF7FEFF 		bl	__aeabi_d2f
 2294 03e6 0026     		movs	r6, #0
 2295 03e8 0446     		mov	r4, r0
 2296              	.LVL123:
 2297              	.LBB13:
 2298 03ea 04E0     		b	.L170
 2299              	.LVL124:
 2300              	.L173:
 2301 03ec 2046     		mov	r0, r4
 2302 03ee 3049     		ldr	r1, .L197+32
 2303 03f0 FFF7FEFF 		bl	__aeabi_fadd
 2304 03f4 0446     		mov	r4, r0
 2305              	.LVL125:
 2306              	.L170:
 2307 03f6 2046     		mov	r0, r4
 2308 03f8 0021     		movs	r1, #0
 2309 03fa F5B2     		uxtb	r5, r6
 2310              	.LVL126:
 2311 03fc FFF7FEFF 		bl	__aeabi_fcmplt
 2312 0400 50B1     		cbz	r0, .L171
 2313 0402 0136     		adds	r6, r6, #1
 2314 0404 B6F5807F 		cmp	r6, #256
 2315 0408 F0D1     		bne	.L173
 2316 040a 0025     		movs	r5, #0
 2317              	.LVL127:
 2318 040c 04E0     		b	.L171
 2319              	.L176:
 2320 040e 2046     		mov	r0, r4
 2321 0410 2749     		ldr	r1, .L197+32
 2322 0412 FFF7FEFF 		bl	__aeabi_fsub
 2323 0416 0446     		mov	r4, r0
 2324              	.LVL128:
 2325              	.L171:
 2326 0418 2046     		mov	r0, r4
 2327 041a 2549     		ldr	r1, .L197+32
 2328 041c FFF7FEFF 		bl	__aeabi_fcmpge
 2329 0420 18B1     		cbz	r0, .L174
 2330 0422 0135     		adds	r5, r5, #1
 2331              	.LVL129:
 2332 0424 EDB2     		uxtb	r5, r5
 2333              	.LVL130:
 2334 0426 002D     		cmp	r5, #0
 2335 0428 F1D1     		bne	.L176
 2336              	.L174:
 2337              	.LBE13:
 2338 042a 2046     		mov	r0, r4
 2339 042c 2149     		ldr	r1, .L197+36
 2340 042e FFF7FEFF 		bl	__aeabi_fcmpgt
 2341 0432 28B9     		cbnz	r0, .L177
 2342 0434 2046     		mov	r0, r4
 2343 0436 2049     		ldr	r1, .L197+40
 2344 0438 FFF7FEFF 		bl	__aeabi_fcmplt
 2345 043c 0028     		cmp	r0, #0
 2346 043e 24D0     		beq	.L179
 2347              	.L177:
 2348              	.LBE10:
 653:subsystems/nav.c ****       oval_status = OR21;
 2349              		.loc 1 653 0
 2350 0440 0222     		movs	r2, #2
 2351 0442 1BE0     		b	.L193
 2352              	.LVL131:
 2353              	.L144:
 654:subsystems/nav.c ****       InitStage();
 655:subsystems/nav.c ****       LINE_START_FUNCTION;
 656:subsystems/nav.c ****     }
 657:subsystems/nav.c ****    return;
 658:subsystems/nav.c **** 
 659:subsystems/nav.c ****   case OR21:
 660:subsystems/nav.c ****     nav_route_xy(waypoints[p2].x, waypoints[p2].y, waypoints[p1].x, waypoints[p1].y);
 2354              		.loc 1 660 0
 2355 0444 099A     		ldr	r2, [sp, #36]
 2356 0446 089B     		ldr	r3, [sp, #32]
 2357 0448 0C26     		movs	r6, #12
 2358              	.LVL132:
 2359 044a 06FB02F5 		mul	r5, r6, r2
 2360              	.LVL133:
 2361 044e 5E43     		muls	r6, r3, r6
 2362 0450 1A4C     		ldr	r4, .L197+44
 2363              	.LVL134:
 2364 0452 05EB0408 		add	r8, r5, r4
 2365 0456 3719     		adds	r7, r6, r4
 2366              	.LVL135:
 2367 0458 2859     		ldr	r0, [r5, r4]	@ float
 2368 045a D8F80410 		ldr	r1, [r8, #4]	@ float
 2369 045e 3259     		ldr	r2, [r6, r4]	@ float
 2370 0460 7B68     		ldr	r3, [r7, #4]	@ float
 2371 0462 FFF7FEFF 		bl	nav_route_xy
 661:subsystems/nav.c ****     if (nav_approaching_xy(waypoints[p1].x, waypoints[p1].y, waypoints[p2].x, waypoints[p2].y, CARR
 2372              		.loc 1 661 0
 2373 0466 0E4B     		ldr	r3, .L197+16
 2374 0468 0093     		str	r3, [sp, #0]	@ float
 2375 046a 3059     		ldr	r0, [r6, r4]	@ float
 2376 046c 7968     		ldr	r1, [r7, #4]	@ float
 2377 046e 2A59     		ldr	r2, [r5, r4]	@ float
 2378 0470 D8F80430 		ldr	r3, [r8, #4]	@ float
 2379 0474 FFF7FEFF 		bl	nav_approaching_xy
 2380 0478 38B1     		cbz	r0, .L179
 662:subsystems/nav.c ****       oval_status = OC1;
 2381              		.loc 1 662 0
 2382 047a 0322     		movs	r2, #3
 2383              	.LVL136:
 2384              	.L193:
 2385 047c 094B     		ldr	r3, .L197+20
 2386              	.L194:
 2387 047e 1A70     		strb	r2, [r3, #0]
 663:subsystems/nav.c ****       InitStage();
 664:subsystems/nav.c ****       LINE_STOP_FUNCTION;
 665:subsystems/nav.c ****     }
 666:subsystems/nav.c ****     return;
 667:subsystems/nav.c **** 
 668:subsystems/nav.c ****  default: /* Should not occur !!! Doing nothing */
 669:subsystems/nav.c ****    return;
 670:subsystems/nav.c ****   }
 671:subsystems/nav.c **** }
 2388              		.loc 1 671 0
 2389 0480 0DB0     		add	sp, sp, #52
 2390 0482 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 663:subsystems/nav.c ****       InitStage();
 2391              		.loc 1 663 0
 2392 0486 FFF7FEBF 		b	nav_init_stage
 2393              	.LVL137:
 2394              	.L179:
 2395              		.loc 1 671 0
 2396 048a 0DB0     		add	sp, sp, #52
 2397 048c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2398              	.L198:
 2399              		.align	3
 2400              	.L197:
 2401 0490 182D4454 		.word	1413754136
 2402 0494 FB21F93F 		.word	1073291771
 2403 0498 F8C1631A 		.word	442745336
 2404 049c DCA54C40 		.word	1078765020
 2405 04a0 0000A040 		.word	1084227584
 2406 04a4 00000000 		.word	.LANCHOR26
 2407 04a8 00000000 		.word	.LANCHOR27
 2408 04ac 00000000 		.word	.LANCHOR38
 2409 04b0 0000B443 		.word	1135869952
 2410 04b4 0000AF43 		.word	1135542272
 2411 04b8 00002041 		.word	1092616192
 2412 04bc 00000000 		.word	.LANCHOR8
 2413              		.cfi_endproc
 2414              	.LFE58:
 2416              		.section	.text.nav_eight,"ax",%progbits
 2417              		.align	1
 2418              		.global	nav_eight
 2419              		.thumb
 2420              		.thumb_func
 2422              	nav_eight:
 2423              	.LFB56:
 472:subsystems/nav.c **** void nav_eight(uint8_t target, uint8_t c1, float radius) {
 2424              		.loc 1 472 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 48
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              	.LVL138:
 2429 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2430              	.LCFI14:
 2431              		.cfi_def_cfa_offset 36
 2432 0004 1446     		mov	r4, r2
 2433              		.cfi_offset 14, -4
 2434              		.cfi_offset 11, -8
 2435              		.cfi_offset 10, -12
 2436              		.cfi_offset 9, -16
 2437              		.cfi_offset 8, -20
 2438              		.cfi_offset 7, -24
 2439              		.cfi_offset 6, -28
 2440              		.cfi_offset 5, -32
 2441              		.cfi_offset 4, -36
 2442 0006 8FB0     		sub	sp, sp, #60
 2443              	.LCFI15:
 2444              		.cfi_def_cfa_offset 96
 475:subsystems/nav.c ****   waypoints[c1].a = alt;
 2445              		.loc 1 475 0
 2446 0008 0C22     		movs	r2, #12
 2447              	.LVL139:
 472:subsystems/nav.c **** void nav_eight(uint8_t target, uint8_t c1, float radius) {
 2448              		.loc 1 472 0
 2449 000a 0591     		str	r1, [sp, #20]
 475:subsystems/nav.c ****   waypoints[c1].a = alt;
 2450              		.loc 1 475 0
 2451 000c 5143     		muls	r1, r2, r1
 2452              	.LVL140:
 2453 000e 4243     		muls	r2, r0, r2
 2454 0010 9B4B     		ldr	r3, .L260+24
 472:subsystems/nav.c **** void nav_eight(uint8_t target, uint8_t c1, float radius) {
 2455              		.loc 1 472 0
 2456 0012 0546     		mov	r5, r0
 475:subsystems/nav.c ****   waypoints[c1].a = alt;
 2457              		.loc 1 475 0
 2458 0014 D618     		adds	r6, r2, r3
 2459 0016 B068     		ldr	r0, [r6, #8]	@ float
 2460              	.LVL141:
 2461 0018 CF18     		adds	r7, r1, r3
 2462 001a B860     		str	r0, [r7, #8]	@ float
 477:subsystems/nav.c ****   float target_c1_x = waypoints[c1].x - waypoints[target].x;
 2463              		.loc 1 477 0
 2464 001c C858     		ldr	r0, [r1, r3]	@ float
 2465 001e D158     		ldr	r1, [r2, r3]	@ float
 2466 0020 FFF7FEFF 		bl	__aeabi_fsub
 478:subsystems/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 2467              		.loc 1 478 0
 2468 0024 7168     		ldr	r1, [r6, #4]	@ float
 477:subsystems/nav.c ****   float target_c1_x = waypoints[c1].x - waypoints[target].x;
 2469              		.loc 1 477 0
 2470 0026 8046     		mov	r8, r0
 2471              	.LVL142:
 478:subsystems/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 2472              		.loc 1 478 0
 2473 0028 7868     		ldr	r0, [r7, #4]	@ float
 2474 002a FFF7FEFF 		bl	__aeabi_fsub
 479:subsystems/nav.c ****   float d = sqrt(target_c1_x*target_c1_x+target_c1_y*target_c1_y);
 2475              		.loc 1 479 0
 2476 002e 4146     		mov	r1, r8
 478:subsystems/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 2477              		.loc 1 478 0
 2478 0030 0646     		mov	r6, r0
 2479              	.LVL143:
 479:subsystems/nav.c ****   float d = sqrt(target_c1_x*target_c1_x+target_c1_y*target_c1_y);
 2480              		.loc 1 479 0
 2481 0032 4046     		mov	r0, r8
 2482 0034 FFF7FEFF 		bl	__aeabi_fmul
 2483 0038 3146     		mov	r1, r6
 2484 003a 0746     		mov	r7, r0
 2485 003c 3046     		mov	r0, r6
 2486 003e FFF7FEFF 		bl	__aeabi_fmul
 2487 0042 0146     		mov	r1, r0
 2488 0044 3846     		mov	r0, r7
 2489 0046 FFF7FEFF 		bl	__aeabi_fadd
 2490 004a FFF7FEFF 		bl	__aeabi_f2d
 2491 004e FFF7FEFF 		bl	sqrt
 2492 0052 FFF7FEFF 		bl	__aeabi_d2f
 480:subsystems/nav.c ****   d = Max(d, 1.); /* To prevent a division by zero */
 2493              		.loc 1 480 0
 2494 0056 4FF07E51 		mov	r1, #1065353216
 479:subsystems/nav.c ****   float d = sqrt(target_c1_x*target_c1_x+target_c1_y*target_c1_y);
 2495              		.loc 1 479 0
 2496 005a 0746     		mov	r7, r0
 2497              	.LVL144:
 480:subsystems/nav.c ****   d = Max(d, 1.); /* To prevent a division by zero */
 2498              		.loc 1 480 0
 2499 005c FFF7FEFF 		bl	__aeabi_fcmpgt
 2500 0060 08B9     		cbnz	r0, .L200
 2501 0062 4FF07E57 		mov	r7, #1065353216
 2502              	.LVL145:
 2503              	.L200:
 483:subsystems/nav.c ****   float u_x = target_c1_x / d;
 2504              		.loc 1 483 0
 2505 0066 4046     		mov	r0, r8
 2506 0068 3946     		mov	r1, r7
 2507 006a FFF7FEFF 		bl	__aeabi_fdiv
 484:subsystems/nav.c ****   float u_y = target_c1_y / d;
 2508              		.loc 1 484 0
 2509 006e 3946     		mov	r1, r7
 483:subsystems/nav.c ****   float u_x = target_c1_x / d;
 2510              		.loc 1 483 0
 2511 0070 8346     		mov	fp, r0
 2512              	.LVL146:
 484:subsystems/nav.c ****   float u_y = target_c1_y / d;
 2513              		.loc 1 484 0
 2514 0072 3046     		mov	r0, r6
 2515 0074 FFF7FEFF 		bl	__aeabi_fdiv
 2516 0078 8046     		mov	r8, r0
 2517              	.LVL147:
 487:subsystems/nav.c ****   if (d > 2 * aradius) {
 2518              		.loc 1 487 0
 2519 007a 24F00040 		bic	r0, r4, #-2147483648
 2520 007e 0146     		mov	r1, r0
 2521 0080 FFF7FEFF 		bl	__aeabi_fadd
 2522 0084 0646     		mov	r6, r0
 2523              	.LVL148:
 2524 0086 3146     		mov	r1, r6
 2525 0088 3846     		mov	r0, r7
 2526 008a FFF7FEFF 		bl	__aeabi_fcmpgt
 2527 008e 08B9     		cbnz	r0, .L201
 2528              	.LVL149:
 2529 0090 3E46     		mov	r6, r7
 2530 0092 23E0     		b	.L202
 2531              	.L201:
 489:subsystems/nav.c ****     waypoints[c1].x = waypoints[target].x + d*u_x;
 2532              		.loc 1 489 0
 2533 0094 0598     		ldr	r0, [sp, #20]
 2534 0096 4FF00C09 		mov	r9, #12
 2535 009a 09FB00FA 		mul	sl, r9, r0
 2536 009e 09FB05F9 		mul	r9, r9, r5
 2537 00a2 774F     		ldr	r7, .L260+24
 2538              	.LVL150:
 2539 00a4 5946     		mov	r1, fp
 2540 00a6 0AEB0702 		add	r2, sl, r7
 2541 00aa 09EB0703 		add	r3, r9, r7
 2542 00ae 3046     		mov	r0, r6
 2543 00b0 0492     		str	r2, [sp, #16]
 2544 00b2 0393     		str	r3, [sp, #12]
 2545 00b4 FFF7FEFF 		bl	__aeabi_fmul
 2546 00b8 0146     		mov	r1, r0
 2547 00ba 59F80700 		ldr	r0, [r9, r7]	@ float
 2548 00be FFF7FEFF 		bl	__aeabi_fadd
 490:subsystems/nav.c ****     waypoints[c1].y = waypoints[target].y + d*u_y;
 2549              		.loc 1 490 0
 2550 00c2 4146     		mov	r1, r8
 489:subsystems/nav.c ****     waypoints[c1].x = waypoints[target].x + d*u_x;
 2551              		.loc 1 489 0
 2552 00c4 4AF80700 		str	r0, [sl, r7]	@ float
 490:subsystems/nav.c ****     waypoints[c1].y = waypoints[target].y + d*u_y;
 2553              		.loc 1 490 0
 2554 00c8 3046     		mov	r0, r6
 2555 00ca FFF7FEFF 		bl	__aeabi_fmul
 2556 00ce 039B     		ldr	r3, [sp, #12]
 2557 00d0 0146     		mov	r1, r0
 2558 00d2 5868     		ldr	r0, [r3, #4]	@ float
 2559 00d4 FFF7FEFF 		bl	__aeabi_fadd
 2560 00d8 049A     		ldr	r2, [sp, #16]
 2561 00da 5060     		str	r0, [r2, #4]	@ float
 2562              	.LVL151:
 2563              	.L202:
 495:subsystems/nav.c ****     waypoints[target].x - d*u_x,
 2564              		.loc 1 495 0
 2565 00dc 4FF00C0A 		mov	sl, #12
 2566 00e0 0AFB05F9 		mul	r9, sl, r5
 2567 00e4 664F     		ldr	r7, .L260+24
 2568 00e6 3046     		mov	r0, r6
 2569 00e8 09EB0703 		add	r3, r9, r7
 2570 00ec 5946     		mov	r1, fp
 2571 00ee 0393     		str	r3, [sp, #12]
 2572 00f0 FFF7FEFF 		bl	__aeabi_fmul
 2573 00f4 0146     		mov	r1, r0
 2574 00f6 59F80700 		ldr	r0, [r9, r7]	@ float
 2575 00fa FFF7FEFF 		bl	__aeabi_fsub
 496:subsystems/nav.c ****     waypoints[target].y - d*u_y,
 2576              		.loc 1 496 0
 2577 00fe 4146     		mov	r1, r8
 495:subsystems/nav.c ****     waypoints[target].x - d*u_x,
 2578              		.loc 1 495 0
 2579 0100 0B90     		str	r0, [sp, #44]	@ float
 496:subsystems/nav.c ****     waypoints[target].y - d*u_y,
 2580              		.loc 1 496 0
 2581 0102 3046     		mov	r0, r6
 2582 0104 FFF7FEFF 		bl	__aeabi_fmul
 2583 0108 039B     		ldr	r3, [sp, #12]
 2584 010a 0146     		mov	r1, r0
 2585 010c 5868     		ldr	r0, [r3, #4]	@ float
 2586 010e FFF7FEFF 		bl	__aeabi_fsub
 500:subsystems/nav.c ****     waypoints[c1].x + radius * -u_y,
 2587              		.loc 1 500 0
 2588 0112 059A     		ldr	r2, [sp, #20]
 2589 0114 08F10041 		add	r1, r8, #-2147483648
 496:subsystems/nav.c ****     waypoints[target].y - d*u_y,
 2590              		.loc 1 496 0
 2591 0118 0A90     		str	r0, [sp, #40]	@ float
 500:subsystems/nav.c ****     waypoints[c1].x + radius * -u_y,
 2592              		.loc 1 500 0
 2593 011a 2046     		mov	r0, r4
 2594 011c 0AFB02FA 		mul	sl, sl, r2
 2595 0120 FFF7FEFF 		bl	__aeabi_fmul
 2596 0124 0AEB0706 		add	r6, sl, r7
 2597              	.LVL152:
 2598 0128 5AF80770 		ldr	r7, [sl, r7]	@ float
 2599 012c 8246     		mov	sl, r0
 2600 012e 5146     		mov	r1, sl
 2601 0130 3846     		mov	r0, r7
 2602 0132 FFF7FEFF 		bl	__aeabi_fadd
 501:subsystems/nav.c ****     waypoints[c1].y + radius * u_x,
 2603              		.loc 1 501 0
 2604 0136 5946     		mov	r1, fp
 500:subsystems/nav.c ****     waypoints[c1].x + radius * -u_y,
 2605              		.loc 1 500 0
 2606 0138 0990     		str	r0, [sp, #36]	@ float
 501:subsystems/nav.c ****     waypoints[c1].y + radius * u_x,
 2607              		.loc 1 501 0
 2608 013a 2046     		mov	r0, r4
 2609 013c FFF7FEFF 		bl	__aeabi_fmul
 2610 0140 7668     		ldr	r6, [r6, #4]	@ float
 2611 0142 8146     		mov	r9, r0
 2612 0144 4946     		mov	r1, r9
 2613 0146 3046     		mov	r0, r6
 2614 0148 FFF7FEFF 		bl	__aeabi_fadd
 504:subsystems/nav.c ****     waypoints[c1].x - radius * -u_y,
 2615              		.loc 1 504 0
 2616 014c 4146     		mov	r1, r8
 501:subsystems/nav.c ****     waypoints[c1].y + radius * u_x,
 2617              		.loc 1 501 0
 2618 014e 0890     		str	r0, [sp, #32]	@ float
 504:subsystems/nav.c ****     waypoints[c1].x - radius * -u_y,
 2619              		.loc 1 504 0
 2620 0150 2046     		mov	r0, r4
 2621 0152 FFF7FEFF 		bl	__aeabi_fmul
 2622 0156 0346     		mov	r3, r0
 2623 0158 1946     		mov	r1, r3
 2624 015a 3846     		mov	r0, r7
 2625 015c 0393     		str	r3, [sp, #12]
 2626 015e FFF7FEFF 		bl	__aeabi_fadd
 505:subsystems/nav.c ****     waypoints[c1].y - radius * u_x,
 2627              		.loc 1 505 0
 2628 0162 4946     		mov	r1, r9
 504:subsystems/nav.c ****     waypoints[c1].x - radius * -u_y,
 2629              		.loc 1 504 0
 2630 0164 0746     		mov	r7, r0
 505:subsystems/nav.c ****     waypoints[c1].y - radius * u_x,
 2631              		.loc 1 505 0
 2632 0166 3046     		mov	r0, r6
 2633 0168 FFF7FEFF 		bl	__aeabi_fsub
 509:subsystems/nav.c ****     c2.x + radius * -u_y,
 2634              		.loc 1 509 0
 2635 016c 5146     		mov	r1, sl
 505:subsystems/nav.c ****     waypoints[c1].y - radius * u_x,
 2636              		.loc 1 505 0
 2637 016e 0646     		mov	r6, r0
 509:subsystems/nav.c ****     c2.x + radius * -u_y,
 2638              		.loc 1 509 0
 2639 0170 0B98     		ldr	r0, [sp, #44]	@ float
 2640 0172 FFF7FEFF 		bl	__aeabi_fadd
 510:subsystems/nav.c ****     c2.y + radius * u_x,
 2641              		.loc 1 510 0
 2642 0176 4946     		mov	r1, r9
 509:subsystems/nav.c ****     c2.x + radius * -u_y,
 2643              		.loc 1 509 0
 2644 0178 0790     		str	r0, [sp, #28]	@ float
 510:subsystems/nav.c ****     c2.y + radius * u_x,
 2645              		.loc 1 510 0
 2646 017a 0A98     		ldr	r0, [sp, #40]	@ float
 2647 017c FFF7FEFF 		bl	__aeabi_fadd
 513:subsystems/nav.c ****     c2.x - radius * -u_y,
 2648              		.loc 1 513 0
 2649 0180 039B     		ldr	r3, [sp, #12]
 510:subsystems/nav.c ****     c2.y + radius * u_x,
 2650              		.loc 1 510 0
 2651 0182 0690     		str	r0, [sp, #24]	@ float
 513:subsystems/nav.c ****     c2.x - radius * -u_y,
 2652              		.loc 1 513 0
 2653 0184 1946     		mov	r1, r3
 2654 0186 0B98     		ldr	r0, [sp, #44]	@ float
 2655 0188 FFF7FEFF 		bl	__aeabi_fadd
 514:subsystems/nav.c ****     c2.y - radius * u_x,
 2656              		.loc 1 514 0
 2657 018c 4946     		mov	r1, r9
 513:subsystems/nav.c ****     c2.x - radius * -u_y,
 2658              		.loc 1 513 0
 2659 018e 8246     		mov	sl, r0
 514:subsystems/nav.c ****     c2.y - radius * u_x,
 2660              		.loc 1 514 0
 2661 0190 0A98     		ldr	r0, [sp, #40]	@ float
 2662 0192 FFF7FEFF 		bl	__aeabi_fsub
 2663 0196 8146     		mov	r9, r0
 517:subsystems/nav.c ****   float qdr_out = M_PI - atan2(u_y, u_x);
 2664              		.loc 1 517 0
 2665 0198 4046     		mov	r0, r8
 2666 019a FFF7FEFF 		bl	__aeabi_f2d
 2667 019e CDE90C01 		strd	r0, [sp, #48]
 2668 01a2 5846     		mov	r0, fp
 2669 01a4 FFF7FEFF 		bl	__aeabi_f2d
 2670 01a8 0246     		mov	r2, r0
 2671 01aa 0B46     		mov	r3, r1
 2672 01ac DDE90C01 		ldrd	r0, [sp, #48]
 2673 01b0 FFF7FEFF 		bl	atan2
 2674 01b4 0246     		mov	r2, r0
 2675 01b6 0B46     		mov	r3, r1
 2676 01b8 2BA1     		adr	r1, .L260
 2677 01ba D1E90001 		ldrd	r0, [r1]
 2678 01be FFF7FEFF 		bl	__aeabi_dsub
 2679 01c2 FFF7FEFF 		bl	__aeabi_d2f
 518:subsystems/nav.c ****   if (radius < 0)
 2680              		.loc 1 518 0
 2681 01c6 0021     		movs	r1, #0
 517:subsystems/nav.c ****   float qdr_out = M_PI - atan2(u_y, u_x);
 2682              		.loc 1 517 0
 2683 01c8 8046     		mov	r8, r0
 2684              	.LVL153:
 518:subsystems/nav.c ****   if (radius < 0)
 2685              		.loc 1 518 0
 2686 01ca 2046     		mov	r0, r4
 2687 01cc FFF7FEFF 		bl	__aeabi_fcmplt
 2688 01d0 50B1     		cbz	r0, .L203
 519:subsystems/nav.c ****     qdr_out += M_PI;
 2689              		.loc 1 519 0
 2690 01d2 4046     		mov	r0, r8
 2691 01d4 FFF7FEFF 		bl	__aeabi_f2d
 2692 01d8 23A3     		adr	r3, .L260
 2693 01da D3E90023 		ldrd	r2, [r3]
 2694 01de FFF7FEFF 		bl	__aeabi_dadd
 2695 01e2 FFF7FEFF 		bl	__aeabi_d2f
 2696 01e6 8046     		mov	r8, r0
 2697              	.L203:
 521:subsystems/nav.c ****   switch (eight_status) {
 2698              		.loc 1 521 0
 2699 01e8 264B     		ldr	r3, .L260+28
 2700 01ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2701 01ec 052B     		cmp	r3, #5
 2702 01ee 00F29881 		bhi	.L245
 2703 01f2 DFE813F0 		tbh	[pc, r3, lsl #1]
 2704              	.L212:
 2705 01f6 A400     		.2byte	(.L206-.L212)/2
 2706 01f8 BB00     		.2byte	(.L207-.L212)/2
 2707 01fa CE00     		.2byte	(.L208-.L212)/2
 2708 01fc 5001     		.2byte	(.L209-.L212)/2
 2709 01fe 7F01     		.2byte	(.L210-.L212)/2
 2710 0200 0600     		.2byte	(.L211-.L212)/2
 2711              	.L211:
 523:subsystems/nav.c ****     NavCircleWaypoint(c1, radius);
 2712              		.loc 1 523 0
 2713 0202 059B     		ldr	r3, [sp, #20]
 2714 0204 0C21     		movs	r1, #12
 2715 0206 5943     		muls	r1, r3, r1
 2716 0208 1D4A     		ldr	r2, .L260+24
 2717              	.LBB14:
 2718              	.LBB15:
 524:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out)-10)) {
 2719              		.loc 1 524 0
 2720 020a 0026     		movs	r6, #0
 2721              	.LBE15:
 2722              	.LBE14:
 523:subsystems/nav.c ****     NavCircleWaypoint(c1, radius);
 2723              		.loc 1 523 0
 2724 020c 8B18     		adds	r3, r1, r2
 2725 020e 8858     		ldr	r0, [r1, r2]	@ float
 2726 0210 2246     		mov	r2, r4
 2727 0212 5968     		ldr	r1, [r3, #4]	@ float
 2728 0214 FFF7FEFF 		bl	nav_circle_XY
 2729              	.LBB19:
 2730              	.LBB17:
 524:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out)-10)) {
 2731              		.loc 1 524 0
 2732 0218 1B4B     		ldr	r3, .L260+32
 2733 021a 1868     		ldr	r0, [r3, #0]	@ float
 2734 021c FFF7FEFF 		bl	__aeabi_f2d
 2735 0220 0246     		mov	r2, r0
 2736 0222 0B46     		mov	r3, r1
 2737 0224 12A1     		adr	r1, .L260+8
 2738 0226 D1E90001 		ldrd	r0, [r1]
 2739 022a FFF7FEFF 		bl	__aeabi_dsub
 2740 022e 12A3     		adr	r3, .L260+16
 2741 0230 D3E90023 		ldrd	r2, [r3]
 2742 0234 FFF7FEFF 		bl	__aeabi_dmul
 2743 0238 FFF7FEFF 		bl	__aeabi_d2f
 2744 023c 0446     		mov	r4, r0
 2745              	.LVL154:
 2746              	.LBB16:
 2747 023e 04E0     		b	.L213
 2748              	.LVL155:
 2749              	.L216:
 2750 0240 2046     		mov	r0, r4
 2751 0242 1249     		ldr	r1, .L260+36
 2752 0244 FFF7FEFF 		bl	__aeabi_fadd
 2753 0248 0446     		mov	r4, r0
 2754              	.LVL156:
 2755              	.L213:
 2756 024a 2046     		mov	r0, r4
 2757 024c 0021     		movs	r1, #0
 2758 024e F5B2     		uxtb	r5, r6
 2759              	.LVL157:
 2760 0250 FFF7FEFF 		bl	__aeabi_fcmplt
 2761 0254 08B3     		cbz	r0, .L214
 2762 0256 0136     		adds	r6, r6, #1
 2763 0258 B6F5807F 		cmp	r6, #256
 2764 025c F0D1     		bne	.L216
 2765 025e 0025     		movs	r5, #0
 2766              	.LVL158:
 2767 0260 1BE0     		b	.L214
 2768              	.L261:
 2769 0262 00BFAFF3 		.align	3
 2769      0080
 2770              	.L260:
 2771 0268 182D4454 		.word	1413754136
 2772 026c FB210940 		.word	1074340347
 2773 0270 182D4454 		.word	1413754136
 2774 0274 FB21F93F 		.word	1073291771
 2775 0278 F8C1631A 		.word	442745336
 2776 027c DCA54C40 		.word	1078765020
 2777 0280 00000000 		.word	.LANCHOR8
 2778 0284 00000000 		.word	.LANCHOR25
 2779 0288 00000000 		.word	.LANCHOR38
 2780 028c 0000B443 		.word	1135869952
 2781              	.L219:
 2782 0290 2046     		mov	r0, r4
 2783 0292 9149     		ldr	r1, .L262+16
 2784 0294 FFF7FEFF 		bl	__aeabi_fsub
 2785 0298 0446     		mov	r4, r0
 2786              	.LVL159:
 2787              	.L214:
 2788 029a 2046     		mov	r0, r4
 2789 029c 8E49     		ldr	r1, .L262+16
 2790 029e FFF7FEFF 		bl	__aeabi_fcmpge
 2791 02a2 18B1     		cbz	r0, .L217
 2792 02a4 0135     		adds	r5, r5, #1
 2793              	.LVL160:
 2794 02a6 EDB2     		uxtb	r5, r5
 2795              	.LVL161:
 2796 02a8 002D     		cmp	r5, #0
 2797 02aa F1D1     		bne	.L219
 2798              	.L217:
 2799              	.LBE16:
 2800              	.LBE17:
 2801 02ac 4046     		mov	r0, r8
 2802 02ae FFF7FEFF 		bl	__aeabi_f2d
 2803 02b2 85A3     		adr	r3, .L262
 2804 02b4 D3E90023 		ldrd	r2, [r3]
 2805 02b8 FFF7FEFF 		bl	__aeabi_dmul
 2806 02bc 0022     		movs	r2, #0
 2807 02be 874B     		ldr	r3, .L262+20
 2808 02c0 FFF7FEFF 		bl	__aeabi_dsub
 2809 02c4 0646     		mov	r6, r0
 2810 02c6 2046     		mov	r0, r4
 2811 02c8 0F46     		mov	r7, r1
 2812 02ca FFF7FEFF 		bl	__aeabi_f2d
 2813 02ce 0246     		mov	r2, r0
 2814 02d0 0B46     		mov	r3, r1
 2815 02d2 3046     		mov	r0, r6
 2816 02d4 3946     		mov	r1, r7
 2817 02d6 FFF7FEFF 		bl	__aeabi_dsub
 2818 02da FFF7FEFF 		bl	__aeabi_d2f
 2819 02de 0026     		movs	r6, #0
 2820 02e0 0446     		mov	r4, r0
 2821              	.LVL162:
 2822              	.LBB18:
 2823 02e2 04E0     		b	.L220
 2824              	.LVL163:
 2825              	.L223:
 2826 02e4 2046     		mov	r0, r4
 2827 02e6 7C49     		ldr	r1, .L262+16
 2828 02e8 FFF7FEFF 		bl	__aeabi_fadd
 2829 02ec 0446     		mov	r4, r0
 2830              	.LVL164:
 2831              	.L220:
 2832 02ee 2046     		mov	r0, r4
 2833 02f0 0021     		movs	r1, #0
 2834 02f2 F5B2     		uxtb	r5, r6
 2835              	.LVL165:
 2836 02f4 FFF7FEFF 		bl	__aeabi_fcmplt
 2837 02f8 50B1     		cbz	r0, .L221
 2838 02fa 0136     		adds	r6, r6, #1
 2839 02fc B6F5807F 		cmp	r6, #256
 2840 0300 F0D1     		bne	.L223
 2841 0302 0025     		movs	r5, #0
 2842              	.LVL166:
 2843 0304 04E0     		b	.L221
 2844              	.L226:
 2845 0306 2046     		mov	r0, r4
 2846 0308 7349     		ldr	r1, .L262+16
 2847 030a FFF7FEFF 		bl	__aeabi_fsub
 2848 030e 0446     		mov	r4, r0
 2849              	.LVL167:
 2850              	.L221:
 2851 0310 2046     		mov	r0, r4
 2852 0312 7149     		ldr	r1, .L262+16
 2853 0314 FFF7FEFF 		bl	__aeabi_fcmpge
 2854 0318 18B1     		cbz	r0, .L224
 2855 031a 0135     		adds	r5, r5, #1
 2856              	.LVL168:
 2857 031c EDB2     		uxtb	r5, r5
 2858              	.LVL169:
 2859 031e 002D     		cmp	r5, #0
 2860 0320 F1D1     		bne	.L226
 2861              	.L224:
 2862              	.LBE18:
 2863 0322 2046     		mov	r0, r4
 2864 0324 6E49     		ldr	r1, .L262+24
 2865 0326 FFF7FEFF 		bl	__aeabi_fcmpgt
 2866 032a 30B9     		cbnz	r0, .L227
 2867 032c 2046     		mov	r0, r4
 2868 032e 6D49     		ldr	r1, .L262+28
 2869 0330 FFF7FEFF 		bl	__aeabi_fcmplt
 2870 0334 0028     		cmp	r0, #0
 2871 0336 00F0F480 		beq	.L245
 2872              	.L227:
 2873              	.LBE19:
 525:subsystems/nav.c ****       eight_status = R1T;
 2874              		.loc 1 525 0
 2875 033a 0022     		movs	r2, #0
 2876 033c EAE0     		b	.L259
 2877              	.LVL170:
 2878              	.L206:
 531:subsystems/nav.c ****     nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 2879              		.loc 1 531 0
 2880 033e 3846     		mov	r0, r7
 2881 0340 3146     		mov	r1, r6
 2882 0342 079A     		ldr	r2, [sp, #28]	@ float
 2883 0344 069B     		ldr	r3, [sp, #24]	@ float
 2884 0346 FFF7FEFF 		bl	nav_route_xy
 532:subsystems/nav.c ****     if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c1_out.x, c1_out.y, 0)) {
 2885              		.loc 1 532 0
 2886 034a 0C23     		movs	r3, #12
 2887 034c 5D43     		muls	r5, r3, r5
 2888              	.LVL171:
 2889 034e 664A     		ldr	r2, .L262+32
 2890 0350 0021     		movs	r1, #0
 2891 0352 AB18     		adds	r3, r5, r2
 2892 0354 0091     		str	r1, [sp, #0]	@ float
 2893 0356 A858     		ldr	r0, [r5, r2]	@ float
 2894 0358 5968     		ldr	r1, [r3, #4]	@ float
 2895 035a 3A46     		mov	r2, r7
 2896 035c 3346     		mov	r3, r6
 2897 035e FFF7FEFF 		bl	nav_approaching_xy
 2898 0362 0028     		cmp	r0, #0
 2899 0364 00F0DD80 		beq	.L245
 533:subsystems/nav.c ****       eight_status = RT2;
 2900              		.loc 1 533 0
 2901 0368 0122     		movs	r2, #1
 2902 036a D3E0     		b	.L259
 2903              	.LVL172:
 2904              	.L207:
 539:subsystems/nav.c ****     nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 2905              		.loc 1 539 0
 2906 036c 3846     		mov	r0, r7
 2907 036e 3146     		mov	r1, r6
 2908 0370 079A     		ldr	r2, [sp, #28]	@ float
 2909 0372 069B     		ldr	r3, [sp, #24]	@ float
 2910 0374 FFF7FEFF 		bl	nav_route_xy
 540:subsystems/nav.c ****     if (nav_approaching_xy(c2_in.x, c2_in.y, c1_out.x, c1_out.y, CARROT)) {
 2911              		.loc 1 540 0
 2912 0378 5C4B     		ldr	r3, .L262+36
 2913 037a 0798     		ldr	r0, [sp, #28]	@ float
 2914 037c 0093     		str	r3, [sp, #0]	@ float
 2915 037e 0699     		ldr	r1, [sp, #24]	@ float
 2916 0380 3A46     		mov	r2, r7
 2917 0382 3346     		mov	r3, r6
 2918 0384 FFF7FEFF 		bl	nav_approaching_xy
 2919 0388 0028     		cmp	r0, #0
 2920 038a 00F0CA80 		beq	.L245
 541:subsystems/nav.c ****       eight_status = C2;
 2921              		.loc 1 541 0
 2922 038e 0222     		movs	r2, #2
 2923 0390 C0E0     		b	.L259
 2924              	.L208:
 547:subsystems/nav.c ****     nav_circle_XY(c2.x, c2.y, -radius);
 2925              		.loc 1 547 0
 2926 0392 04F10042 		add	r2, r4, #-2147483648
 2927 0396 0B98     		ldr	r0, [sp, #44]	@ float
 2928 0398 0A99     		ldr	r1, [sp, #40]	@ float
 2929 039a FFF7FEFF 		bl	nav_circle_XY
 2930              	.LBB20:
 2931              	.LBB21:
 548:subsystems/nav.c ****     if (NavQdrCloseTo(DegOfRad(qdr_out)+10)) {
 2932              		.loc 1 548 0
 2933 039e 544B     		ldr	r3, .L262+40
 2934 03a0 0026     		movs	r6, #0
 2935 03a2 1868     		ldr	r0, [r3, #0]	@ float
 2936 03a4 FFF7FEFF 		bl	__aeabi_f2d
 2937 03a8 0246     		mov	r2, r0
 2938 03aa 0B46     		mov	r3, r1
 2939 03ac 48A1     		adr	r1, .L262+8
 2940 03ae D1E90001 		ldrd	r0, [r1]
 2941 03b2 FFF7FEFF 		bl	__aeabi_dsub
 2942 03b6 44A3     		adr	r3, .L262
 2943 03b8 D3E90023 		ldrd	r2, [r3]
 2944 03bc FFF7FEFF 		bl	__aeabi_dmul
 2945 03c0 FFF7FEFF 		bl	__aeabi_d2f
 2946 03c4 0446     		mov	r4, r0
 2947              	.LVL173:
 2948              	.LBB22:
 2949 03c6 04E0     		b	.L229
 2950              	.LVL174:
 2951              	.L232:
 2952 03c8 2046     		mov	r0, r4
 2953 03ca 4349     		ldr	r1, .L262+16
 2954 03cc FFF7FEFF 		bl	__aeabi_fadd
 2955 03d0 0446     		mov	r4, r0
 2956              	.LVL175:
 2957              	.L229:
 2958 03d2 2046     		mov	r0, r4
 2959 03d4 0021     		movs	r1, #0
 2960 03d6 F5B2     		uxtb	r5, r6
 2961              	.LVL176:
 2962 03d8 FFF7FEFF 		bl	__aeabi_fcmplt
 2963 03dc 50B1     		cbz	r0, .L230
 2964 03de 0136     		adds	r6, r6, #1
 2965 03e0 B6F5807F 		cmp	r6, #256
 2966 03e4 F0D1     		bne	.L232
 2967 03e6 0025     		movs	r5, #0
 2968              	.LVL177:
 2969 03e8 04E0     		b	.L230
 2970              	.L235:
 2971 03ea 2046     		mov	r0, r4
 2972 03ec 3A49     		ldr	r1, .L262+16
 2973 03ee FFF7FEFF 		bl	__aeabi_fsub
 2974 03f2 0446     		mov	r4, r0
 2975              	.LVL178:
 2976              	.L230:
 2977 03f4 2046     		mov	r0, r4
 2978 03f6 3849     		ldr	r1, .L262+16
 2979 03f8 FFF7FEFF 		bl	__aeabi_fcmpge
 2980 03fc 18B1     		cbz	r0, .L233
 2981 03fe 0135     		adds	r5, r5, #1
 2982              	.LVL179:
 2983 0400 EDB2     		uxtb	r5, r5
 2984              	.LVL180:
 2985 0402 002D     		cmp	r5, #0
 2986 0404 F1D1     		bne	.L235
 2987              	.L233:
 2988              	.LBE22:
 2989              	.LBE21:
 2990 0406 4046     		mov	r0, r8
 2991 0408 FFF7FEFF 		bl	__aeabi_f2d
 2992 040c 2EA3     		adr	r3, .L262
 2993 040e D3E90023 		ldrd	r2, [r3]
 2994 0412 FFF7FEFF 		bl	__aeabi_dmul
 2995 0416 0022     		movs	r2, #0
 2996 0418 304B     		ldr	r3, .L262+20
 2997 041a FFF7FEFF 		bl	__aeabi_dadd
 2998 041e 0646     		mov	r6, r0
 2999 0420 2046     		mov	r0, r4
 3000 0422 0F46     		mov	r7, r1
 3001 0424 FFF7FEFF 		bl	__aeabi_f2d
 3002 0428 0246     		mov	r2, r0
 3003 042a 0B46     		mov	r3, r1
 3004 042c 3046     		mov	r0, r6
 3005 042e 3946     		mov	r1, r7
 3006 0430 FFF7FEFF 		bl	__aeabi_dsub
 3007 0434 FFF7FEFF 		bl	__aeabi_d2f
 3008 0438 0026     		movs	r6, #0
 3009 043a 0446     		mov	r4, r0
 3010              	.LVL181:
 3011              	.LBB23:
 3012 043c 04E0     		b	.L236
 3013              	.LVL182:
 3014              	.L239:
 3015 043e 2046     		mov	r0, r4
 3016 0440 2549     		ldr	r1, .L262+16
 3017 0442 FFF7FEFF 		bl	__aeabi_fadd
 3018 0446 0446     		mov	r4, r0
 3019              	.LVL183:
 3020              	.L236:
 3021 0448 2046     		mov	r0, r4
 3022 044a 0021     		movs	r1, #0
 3023 044c F5B2     		uxtb	r5, r6
 3024              	.LVL184:
 3025 044e FFF7FEFF 		bl	__aeabi_fcmplt
 3026 0452 50B1     		cbz	r0, .L237
 3027 0454 0136     		adds	r6, r6, #1
 3028 0456 B6F5807F 		cmp	r6, #256
 3029 045a F0D1     		bne	.L239
 3030 045c 0025     		movs	r5, #0
 3031              	.LVL185:
 3032 045e 04E0     		b	.L237
 3033              	.L242:
 3034 0460 2046     		mov	r0, r4
 3035 0462 1D49     		ldr	r1, .L262+16
 3036 0464 FFF7FEFF 		bl	__aeabi_fsub
 3037 0468 0446     		mov	r4, r0
 3038              	.LVL186:
 3039              	.L237:
 3040 046a 2046     		mov	r0, r4
 3041 046c 1A49     		ldr	r1, .L262+16
 3042 046e FFF7FEFF 		bl	__aeabi_fcmpge
 3043 0472 18B1     		cbz	r0, .L240
 3044 0474 0135     		adds	r5, r5, #1
 3045              	.LVL187:
 3046 0476 EDB2     		uxtb	r5, r5
 3047              	.LVL188:
 3048 0478 002D     		cmp	r5, #0
 3049 047a F1D1     		bne	.L242
 3050              	.L240:
 3051              	.LBE23:
 3052 047c 2046     		mov	r0, r4
 3053 047e 1849     		ldr	r1, .L262+24
 3054 0480 FFF7FEFF 		bl	__aeabi_fcmpgt
 3055 0484 28B9     		cbnz	r0, .L243
 3056 0486 2046     		mov	r0, r4
 3057 0488 1649     		ldr	r1, .L262+28
 3058 048a FFF7FEFF 		bl	__aeabi_fcmplt
 3059 048e 0028     		cmp	r0, #0
 3060 0490 47D0     		beq	.L245
 3061              	.L243:
 3062              	.LBE20:
 549:subsystems/nav.c ****       eight_status = R2T;
 3063              		.loc 1 549 0
 3064 0492 0322     		movs	r2, #3
 3065 0494 3EE0     		b	.L259
 3066              	.LVL189:
 3067              	.L209:
 555:subsystems/nav.c ****     nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 3068              		.loc 1 555 0
 3069 0496 5046     		mov	r0, sl
 3070 0498 4946     		mov	r1, r9
 3071 049a 099A     		ldr	r2, [sp, #36]	@ float
 3072 049c 089B     		ldr	r3, [sp, #32]	@ float
 3073 049e FFF7FEFF 		bl	nav_route_xy
 556:subsystems/nav.c ****     if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c2_out.x, c2_out.y, 0)) {
 3074              		.loc 1 556 0
 3075 04a2 0C23     		movs	r3, #12
 3076 04a4 5D43     		muls	r5, r3, r5
 3077              	.LVL190:
 3078 04a6 104A     		ldr	r2, .L262+32
 3079 04a8 0021     		movs	r1, #0
 3080 04aa AB18     		adds	r3, r5, r2
 3081 04ac 0091     		str	r1, [sp, #0]	@ float
 3082 04ae A858     		ldr	r0, [r5, r2]	@ float
 3083 04b0 5968     		ldr	r1, [r3, #4]	@ float
 3084 04b2 5246     		mov	r2, sl
 3085 04b4 4B46     		mov	r3, r9
 3086 04b6 FFF7FEFF 		bl	nav_approaching_xy
 3087 04ba 0028     		cmp	r0, #0
 3088 04bc 31D0     		beq	.L245
 557:subsystems/nav.c ****       eight_status = RT1;
 3089              		.loc 1 557 0
 3090 04be 0422     		movs	r2, #4
 3091 04c0 28E0     		b	.L259
 3092              	.L263:
 3093 04c2 00BFAFF3 		.align	3
 3093      0080
 3094              	.L262:
 3095 04c8 F8C1631A 		.word	442745336
 3096 04cc DCA54C40 		.word	1078765020
 3097 04d0 182D4454 		.word	1413754136
 3098 04d4 FB21F93F 		.word	1073291771
 3099 04d8 0000B443 		.word	1135869952
 3100 04dc 00002440 		.word	1076101120
 3101 04e0 0000AF43 		.word	1135542272
 3102 04e4 00002041 		.word	1092616192
 3103 04e8 00000000 		.word	.LANCHOR8
 3104 04ec 0000A040 		.word	1084227584
 3105 04f0 00000000 		.word	.LANCHOR38
 3106              	.LVL191:
 3107              	.L210:
 563:subsystems/nav.c ****     nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 3108              		.loc 1 563 0
 3109 04f4 5046     		mov	r0, sl
 3110 04f6 4946     		mov	r1, r9
 3111 04f8 099A     		ldr	r2, [sp, #36]	@ float
 3112 04fa 089B     		ldr	r3, [sp, #32]	@ float
 3113 04fc FFF7FEFF 		bl	nav_route_xy
 564:subsystems/nav.c ****     if (nav_approaching_xy(c1_in.x, c1_in.y, c2_out.x, c2_out.y, CARROT)) {
 3114              		.loc 1 564 0
 3115 0500 094B     		ldr	r3, .L264
 3116 0502 0998     		ldr	r0, [sp, #36]	@ float
 3117 0504 0093     		str	r3, [sp, #0]	@ float
 3118 0506 0899     		ldr	r1, [sp, #32]	@ float
 3119 0508 5246     		mov	r2, sl
 3120 050a 4B46     		mov	r3, r9
 3121 050c FFF7FEFF 		bl	nav_approaching_xy
 3122 0510 38B1     		cbz	r0, .L245
 565:subsystems/nav.c ****       eight_status = C1;
 3123              		.loc 1 565 0
 3124 0512 0522     		movs	r2, #5
 3125              	.LVL192:
 3126              	.L259:
 3127 0514 054B     		ldr	r3, .L264+4
 3128 0516 1A70     		strb	r2, [r3, #0]
 573:subsystems/nav.c **** }
 3129              		.loc 1 573 0
 3130 0518 0FB0     		add	sp, sp, #60
 3131 051a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 566:subsystems/nav.c ****       InitStage();
 3132              		.loc 1 566 0
 3133 051e FFF7FEBF 		b	nav_init_stage
 3134              	.L245:
 573:subsystems/nav.c **** }
 3135              		.loc 1 573 0
 3136 0522 0FB0     		add	sp, sp, #60
 3137 0524 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3138              	.L265:
 3139              		.align	2
 3140              	.L264:
 3141 0528 0000A040 		.word	1084227584
 3142 052c 00000000 		.word	.LANCHOR25
 3143              		.cfi_endproc
 3144              	.LFE56:
 3146              		.section	.text.nav_home,"ax",%progbits
 3147              		.align	1
 3148              		.global	nav_home
 3149              		.thumb
 3150              		.thumb_func
 3152              	nav_home:
 3153              	.LFB51:
 380:subsystems/nav.c **** void nav_home(void) {
 3154              		.loc 1 380 0
 3155              		.cfi_startproc
 3156              		@ args = 0, pretend = 0, frame = 0
 3157              		@ frame_needed = 0, uses_anonymous_args = 0
 381:subsystems/nav.c ****   NavCircleWaypoint(WP_HOME, FAILSAFE_HOME_RADIUS);
 3158              		.loc 1 381 0
 3159 0000 0E4B     		ldr	r3, .L268
 380:subsystems/nav.c **** void nav_home(void) {
 3160              		.loc 1 380 0
 3161 0002 10B5     		push	{r4, lr}
 3162              	.LCFI16:
 3163              		.cfi_def_cfa_offset 8
 381:subsystems/nav.c ****   NavCircleWaypoint(WP_HOME, FAILSAFE_HOME_RADIUS);
 3164              		.loc 1 381 0
 3165 0004 D868     		ldr	r0, [r3, #12]	@ float
 3166 0006 1969     		ldr	r1, [r3, #16]	@ float
 3167 0008 0D4A     		ldr	r2, .L268+4
 3168              		.cfi_offset 14, -4
 3169              		.cfi_offset 4, -8
 3170 000a FFF7FEFF 		bl	nav_circle_XY
 383:subsystems/nav.c ****   nav_pitch = 0.;
 3171              		.loc 1 383 0
 3172 000e 0D4B     		ldr	r3, .L268+8
 3173 0010 0022     		movs	r2, #0
 3174 0012 1A60     		str	r2, [r3, #0]	@ float
 384:subsystems/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_ALT;
 3175              		.loc 1 384 0
 3176 0014 0C4B     		ldr	r3, .L268+12
 3177 0016 0322     		movs	r2, #3
 3178 0018 1A70     		strb	r2, [r3, #0]
 385:subsystems/nav.c ****   nav_altitude = ground_alt+SECURITY_HEIGHT;
 3179              		.loc 1 385 0
 3180 001a 0C4B     		ldr	r3, .L268+16
 3181 001c 0C49     		ldr	r1, .L268+20
 3182 001e 1868     		ldr	r0, [r3, #0]	@ float
 3183 0020 FFF7FEFF 		bl	__aeabi_fadd
 3184 0024 0B4B     		ldr	r3, .L268+24
 3185 0026 1860     		str	r0, [r3, #0]	@ float
 386:subsystems/nav.c ****   compute_dist2_to_home();
 3186              		.loc 1 386 0
 3187 0028 FFF7FEFF 		bl	compute_dist2_to_home
 387:subsystems/nav.c ****   dist2_to_wp = dist2_to_home;
 3188              		.loc 1 387 0
 3189 002c 0A4B     		ldr	r3, .L268+28
 3190 002e 1A68     		ldr	r2, [r3, #0]	@ float
 3191 0030 0A4B     		ldr	r3, .L268+32
 3192 0032 1A60     		str	r2, [r3, #0]	@ float
 389:subsystems/nav.c **** }
 3193              		.loc 1 389 0
 3194 0034 BDE81040 		pop	{r4, lr}
 388:subsystems/nav.c ****   nav_set_altitude();
 3195              		.loc 1 388 0
 3196 0038 FFF7FEBF 		b	nav_set_altitude
 3197              	.L269:
 3198              		.align	2
 3199              	.L268:
 3200 003c 00000000 		.word	.LANCHOR8
 3201 0040 0000C842 		.word	1120403456
 3202 0044 00000000 		.word	.LANCHOR6
 3203 0048 00000000 		.word	v_ctl_mode
 3204 004c 00000000 		.word	.LANCHOR11
 3205 0050 0000C841 		.word	1103626240
 3206 0054 00000000 		.word	.LANCHOR17
 3207 0058 00000000 		.word	.LANCHOR9
 3208 005c 00000000 		.word	.LANCHOR7
 3209              		.cfi_endproc
 3210              	.LFE51:
 3212              		.section	.text.nav_periodic_task,"ax",%progbits
 3213              		.align	1
 3214              		.global	nav_periodic_task
 3215              		.thumb
 3216              		.thumb_func
 3218              	nav_periodic_task:
 3219              	.LFB52:
 395:subsystems/nav.c **** void nav_periodic_task(void) {
 3220              		.loc 1 395 0
 3221              		.cfi_startproc
 3222              		@ args = 0, pretend = 0, frame = 0
 3223              		@ frame_needed = 0, uses_anonymous_args = 0
 396:subsystems/nav.c ****   nav_survey_active = FALSE;
 3224              		.loc 1 396 0
 3225 0000 164B     		ldr	r3, .L280
 3226 0002 0022     		movs	r2, #0
 395:subsystems/nav.c **** void nav_periodic_task(void) {
 3227              		.loc 1 395 0
 3228 0004 10B5     		push	{r4, lr}
 3229              	.LCFI17:
 3230              		.cfi_def_cfa_offset 8
 396:subsystems/nav.c ****   nav_survey_active = FALSE;
 3231              		.loc 1 396 0
 3232 0006 1A70     		strb	r2, [r3, #0]
 398:subsystems/nav.c ****   compute_dist2_to_home();
 3233              		.loc 1 398 0
 3234              		.cfi_offset 14, -4
 3235              		.cfi_offset 4, -8
 3236 0008 FFF7FEFF 		bl	compute_dist2_to_home
 399:subsystems/nav.c ****   dist2_to_wp = 0.;
 3237              		.loc 1 399 0
 3238 000c 144B     		ldr	r3, .L280+4
 3239 000e 0022     		movs	r2, #0
 3240 0010 1A60     		str	r2, [r3, #0]	@ float
 3241              	.LBB26:
 3242              	.LBB27:
 3243              		.file 3 "/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h"
   1:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** /* This file has been generated from /home/mav/lisa-m-team4938/paparazzi/conf/flight_plans/dummy.xm
   2:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** /* Please DO NOT EDIT */
   3:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** 
   4:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #ifndef FLIGHT_PLAN_H
   5:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define FLIGHT_PLAN_H 
   6:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** 
   7:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #include "std.h"
   8:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #include "generated/modules.h"
   9:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define FLIGHT_PLAN_NAME "Dummy"
  10:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_UTM_EAST0 360285
  11:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_UTM_NORTH0 4813595
  12:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_UTM_ZONE0 31
  13:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_LAT0 434622300 /* 1e7deg */
  14:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_LON0 12728900 /* 1e7deg */
  15:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_ALT0 185000 /* mm above msl */
  16:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NAV_MSL0 51850 /* mm, EGM96 geoid-height (msl) over ellipsoid */
  17:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define QFU 270.0
  18:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define WP_dummy 0
  19:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define WP_HOME 1
  20:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define WAYPOINTS { \
  21:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****  {42.0, 42.0, 250},\
  22:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****  {0.0, 120.0, 250.},\
  23:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** };
  24:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define WAYPOINTS_LLA { \
  25:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****  {434626158, 12733981, 25000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  26:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****  {434633100, 12728592, 25000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  27:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** };
  28:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NB_WAYPOINT 2
  29:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define NB_BLOCK 1
  30:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define GROUND_ALT 185.
  31:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define GROUND_ALT_CM 18500
  32:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define SECURITY_HEIGHT 25.
  33:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define SECURITY_ALT 210.
  34:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #define MAX_DIST_FROM_HOME 1000.
  35:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** #ifdef NAV_C
  36:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** 
  37:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h **** static inline void auto_nav(void) {
  38:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****   switch (nav_block) {
 3244              		.loc 3 38 0
 3245 0012 144B     		ldr	r3, .L280+8
 3246 0014 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3247 0016 62B9     		cbnz	r2, .L271
  39:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****     Block(0) // HOME
 3248              		.loc 3 39 0
 3249 0018 1A70     		strb	r2, [r3, #0]
  40:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****     ; // pre_call
  41:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****     switch(nav_stage) {
 3250              		.loc 3 41 0
 3251 001a 134A     		ldr	r2, .L280+12
 3252 001c 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 3253 001e 19B9     		cbnz	r1, .L279
  42:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****       Stage(0)
 3254              		.loc 3 42 0
 3255 0020 1170     		strb	r1, [r2, #0]
  43:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****         nav_home();
 3256              		.loc 3 43 0
 3257 0022 FFF7FEFF 		bl	nav_home
 3258 0026 04E0     		b	.L271
 3259              	.L279:
  44:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****         break;
  45:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****       default:
  46:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****       Stage(1)
 3260              		.loc 3 46 0
 3261 0028 0121     		movs	r1, #1
 3262 002a 1170     		strb	r1, [r2, #0]
  47:/home/mav/lisa-m-team4938/paparazzi/var/ECE_2012/generated/flight_plan.h ****         NextBlock();
 3263              		.loc 3 47 0
 3264 002c 1970     		strb	r1, [r3, #0]
 3265 002e FFF7FEFF 		bl	nav_init_block
 3266              	.L271:
 3267              	.LBE27:
 3268              	.LBE26:
 403:subsystems/nav.c ****   h_ctl_course_pre_bank = nav_in_circle ? circle_bank : 0;
 3269              		.loc 1 403 0
 3270 0032 0E4B     		ldr	r3, .L280+16
 3271 0034 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3272 0036 0BB9     		cbnz	r3, .L275
 3273 0038 0023     		movs	r3, #0
 3274              	.LVL193:
 3275 003a 01E0     		b	.L276
 3276              	.LVL194:
 3277              	.L275:
 3278 003c 0C4B     		ldr	r3, .L280+20
 3279 003e 1B68     		ldr	r3, [r3, #0]	@ float
 3280              	.LVL195:
 3281              	.L276:
 3282 0040 0C4A     		ldr	r2, .L280+24
 3283 0042 1360     		str	r3, [r2, #0]	@ float
 406:subsystems/nav.c ****   if ( v_ctl_mode == V_CTL_MODE_AUTO_CLIMB)
 3284              		.loc 1 406 0
 3285 0044 0C4B     		ldr	r3, .L280+28
 3286              	.LVL196:
 3287 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3288 0048 022B     		cmp	r3, #2
 3289 004a 02D1     		bne	.L277
 407:subsystems/nav.c ****     v_ctl_auto_throttle_submode =  V_CTL_AUTO_THROTTLE_STANDARD;
 3290              		.loc 1 407 0
 3291 004c 0B4B     		ldr	r3, .L280+32
 3292 004e 0022     		movs	r2, #0
 3293 0050 1A70     		strb	r2, [r3, #0]
 3294              	.L277:
 411:subsystems/nav.c **** }
 3295              		.loc 1 411 0
 3296 0052 BDE81040 		pop	{r4, lr}
 410:subsystems/nav.c ****   nav_set_altitude();
 3297              		.loc 1 410 0
 3298 0056 FFF7FEBF 		b	nav_set_altitude
 3299              	.L281:
 3300 005a 00BF     		.align	2
 3301              	.L280:
 3302 005c 00000000 		.word	.LANCHOR43
 3303 0060 00000000 		.word	.LANCHOR7
 3304 0064 00000000 		.word	nav_block
 3305 0068 00000000 		.word	nav_stage
 3306 006c 00000000 		.word	.LANCHOR3
 3307 0070 00000000 		.word	.LANCHOR39
 3308 0074 00000000 		.word	h_ctl_course_pre_bank
 3309 0078 00000000 		.word	v_ctl_mode
 3310 007c 00000000 		.word	v_ctl_auto_throttle_submode
 3311              		.cfi_endproc
 3312              	.LFE52:
 3314              		.global	nav_in_circle
 3315              		.global	nav_in_segment
 3316              		.global	circle_bank
 3317              		.global	nav_altitude
 3318              		.global	nb_waypoint
 3319              		.global	waypoints
 3320              		.global	nav_utm_east0
 3321              		.global	nav_utm_north0
 3322              		.global	nav_utm_zone0
 3323              		.global	max_dist_from_home
 3324              		.global	dist2_to_home
 3325              		.global	dist2_to_wp
 3326              		.global	too_far_from_home
 3327              		.global	ground_alt
 3328              		.global	last_x
 3329              		.global	last_y
 3330              		.global	desired_x
 3331              		.global	desired_y
 3332              		.global	flight_altitude
 3333              		.global	nav_glide_pitch_trim
 3334              		.global	nav_throttle_setpoint
 3335              		.global	nav_pitch
 3336              		.global	rc_pitch
 3337              		.global	fp_pitch
 3338              		.global	carrot_x
 3339              		.global	carrot_y
 3340              		.global	nav_circle_radians
 3341              		.global	nav_circle_x
 3342              		.global	nav_circle_y
 3343              		.global	nav_circle_radius
 3344              		.global	nav_segment_x_1
 3345              		.global	nav_segment_y_1
 3346              		.global	nav_segment_x_2
 3347              		.global	nav_segment_y_2
 3348              		.global	nav_mode
 3349              		.global	horizontal_mode
 3350              		.global	nav_oval_count
 3351              		.global	nav_radius
 3352              		.global	nav_course
 3353              		.global	nav_climb
 3354              		.global	nav_shift
 3355              		.global	nav_ground_speed_pgain
 3356              		.global	nav_ground_speed_setpoint
 3357              		.global	nav_survey_shift
 3358              		.global	nav_survey_west
 3359              		.global	nav_survey_east
 3360              		.global	nav_survey_north
 3361              		.global	nav_survey_south
 3362              		.global	nav_survey_active
 3363              		.global	nav_circle_trigo_qdr
 3364              		.global	oval_status
 3365              		.section	.data.max_dist_from_home,"aw",%progbits
 3366              		.align	2
 3367              		.set	.LANCHOR16,. + 0
 3370              	max_dist_from_home:
 3371 0000 00007A44 		.word	1148846080
 3372              		.section	.bss.ground_alt,"aw",%nobits
 3373              		.align	2
 3374              		.set	.LANCHOR11,. + 0
 3377              	ground_alt:
 3378 0000 00000000 		.space	4
 3379              		.section	.bss.nav_survey_east,"aw",%nobits
 3380              		.align	2
 3383              	nav_survey_east:
 3384 0000 00000000 		.space	4
 3385              		.section	.bss.last_nav_altitude.4974,"aw",%nobits
 3386              		.align	2
 3387              		.set	.LANCHOR18,. + 0
 3390              	last_nav_altitude.4974:
 3391 0000 00000000 		.space	4
 3392              		.section	.data.nav_altitude,"aw",%progbits
 3393              		.align	2
 3394              		.set	.LANCHOR17,. + 0
 3397              	nav_altitude:
 3398 0000 00006B43 		.word	1131085824
 3399              		.section	.bss.desired_x,"aw",%nobits
 3400              		.align	2
 3401              		.set	.LANCHOR29,. + 0
 3404              	desired_x:
 3405 0000 00000000 		.space	4
 3406              		.section	.bss.desired_y,"aw",%nobits
 3407              		.align	2
 3408              		.set	.LANCHOR30,. + 0
 3411              	desired_y:
 3412 0000 00000000 		.space	4
 3413              		.section	.bss.previous_ground_alt,"aw",%nobits
 3414              		.align	2
 3415              		.set	.LANCHOR12,. + 0
 3418              	previous_ground_alt:
 3419 0000 00000000 		.space	4
 3420              		.section	.bss.carrot_x,"aw",%nobits
 3421              		.align	2
 3424              	carrot_x:
 3425 0000 00000000 		.space	4
 3426              		.section	.bss.prescaler.4925,"aw",%nobits
 3427              		.align	1
 3428              		.set	.LANCHOR13,. + 0
 3431              	prescaler.4925:
 3432 0000 0000     		.space	2
 3433              		.section	.bss.fp_pitch,"aw",%nobits
 3434              		.align	2
 3437              	fp_pitch:
 3438 0000 00000000 		.space	4
 3439              		.section	.bss.nav_shift,"aw",%nobits
 3440              		.align	2
 3441              		.set	.LANCHOR5,. + 0
 3444              	nav_shift:
 3445 0000 00000000 		.space	4
 3446              		.section	.bss.nav_throttle_setpoint,"aw",%nobits
 3447              		.align	1
 3448              		.set	.LANCHOR24,. + 0
 3451              	nav_throttle_setpoint:
 3452 0000 0000     		.space	2
 3453              		.section	.data.nav_utm_zone0,"aw",%progbits
 3454              		.set	.LANCHOR28,. + 0
 3457              	nav_utm_zone0:
 3458 0000 1F       		.byte	31
 3459              		.section	.bss.flight_altitude,"aw",%nobits
 3460              		.align	2
 3461              		.set	.LANCHOR19,. + 0
 3464              	flight_altitude:
 3465 0000 00000000 		.space	4
 3466              		.section	.rodata.nb_waypoint,"a",%progbits
 3469              	nb_waypoint:
 3470 0000 02       		.byte	2
 3471              		.section	.bss.nav_survey_west,"aw",%nobits
 3472              		.align	2
 3475              	nav_survey_west:
 3476 0000 00000000 		.space	4
 3477              		.section	.bss.nav_climb,"aw",%nobits
 3478              		.align	2
 3481              	nav_climb:
 3482 0000 00000000 		.space	4
 3483              		.section	.bss.nav_radius,"aw",%nobits
 3484              		.align	2
 3485              		.set	.LANCHOR21,. + 0
 3488              	nav_radius:
 3489 0000 00000000 		.space	4
 3490              		.section	.bss.oval_status,"aw",%nobits
 3491              		.set	.LANCHOR26,. + 0
 3494              	oval_status:
 3495 0000 00       		.space	1
 3496              		.section	.bss.nav_segment_y_1,"aw",%nobits
 3497              		.align	2
 3498              		.set	.LANCHOR34,. + 0
 3501              	nav_segment_y_1:
 3502 0000 00000000 		.space	4
 3503              		.section	.bss.nav_segment_y_2,"aw",%nobits
 3504              		.align	2
 3505              		.set	.LANCHOR36,. + 0
 3508              	nav_segment_y_2:
 3509 0000 00000000 		.space	4
 3510              		.section	.bss.nav_survey_active,"aw",%nobits
 3511              		.set	.LANCHOR43,. + 0
 3514              	nav_survey_active:
 3515 0000 00       		.space	1
 3516              		.section	.bss.nav_in_segment,"aw",%nobits
 3517              		.set	.LANCHOR4,. + 0
 3520              	nav_in_segment:
 3521 0000 00       		.space	1
 3522              		.section	.bss.nav_circle_radians,"aw",%nobits
 3523              		.align	2
 3524              		.set	.LANCHOR2,. + 0
 3527              	nav_circle_radians:
 3528 0000 00000000 		.space	4
 3529              		.section	.bss.nav_ground_speed_setpoint,"aw",%nobits
 3530              		.align	2
 3533              	nav_ground_speed_setpoint:
 3534 0000 00000000 		.space	4
 3535              		.section	.bss.nav_leg_progress,"aw",%nobits
 3536              		.align	2
 3537              		.set	.LANCHOR31,. + 0
 3540              	nav_leg_progress:
 3541 0000 00000000 		.space	4
 3542              		.section	.data.nav_utm_north0,"aw",%progbits
 3543              		.align	2
 3544              		.set	.LANCHOR15,. + 0
 3547              	nav_utm_north0:
 3548 0000 1B734900 		.word	4813595
 3549              		.section	.bss.dist2_to_wp,"aw",%nobits
 3550              		.align	2
 3551              		.set	.LANCHOR7,. + 0
 3554              	dist2_to_wp:
 3555 0000 00000000 		.space	4
 3556              		.section	.bss.nav_circle_radius,"aw",%nobits
 3557              		.align	2
 3558              		.set	.LANCHOR42,. + 0
 3561              	nav_circle_radius:
 3562 0000 00000000 		.space	4
 3563              		.section	.bss.nav_in_circle,"aw",%nobits
 3564              		.set	.LANCHOR3,. + 0
 3567              	nav_in_circle:
 3568 0000 00       		.space	1
 3569              		.section	.bss.nav_course,"aw",%nobits
 3570              		.align	2
 3573              	nav_course:
 3574 0000 00000000 		.space	4
 3575              		.section	.bss.nav_survey_north,"aw",%nobits
 3576              		.align	2
 3579              	nav_survey_north:
 3580 0000 00000000 		.space	4
 3581              		.section	.data.nav_utm_east0,"aw",%progbits
 3582              		.align	2
 3583              		.set	.LANCHOR14,. + 0
 3586              	nav_utm_east0:
 3587 0000 5D7F0500 		.word	360285
 3588              		.section	.bss.nav_glide_pitch_trim,"aw",%nobits
 3589              		.align	2
 3590              		.set	.LANCHOR20,. + 0
 3593              	nav_glide_pitch_trim:
 3594 0000 00000000 		.space	4
 3595              		.section	.data.waypoints,"aw",%progbits
 3596              		.align	2
 3597              		.set	.LANCHOR8,. + 0
 3600              	waypoints:
 3601 0000 00002842 		.word	1109917696
 3602 0004 00002842 		.word	1109917696
 3603 0008 00007A43 		.word	1132068864
 3604 000c 00000000 		.word	0
 3605 0010 0000F042 		.word	1123024896
 3606 0014 00007A43 		.word	1132068864
 3607              		.section	.bss.dist2_to_home,"aw",%nobits
 3608              		.align	2
 3609              		.set	.LANCHOR9,. + 0
 3612              	dist2_to_home:
 3613 0000 00000000 		.space	4
 3614              		.section	.bss.nav_oval_count,"aw",%nobits
 3615              		.set	.LANCHOR27,. + 0
 3618              	nav_oval_count:
 3619 0000 00       		.space	1
 3620              		.section	.bss.rc_pitch,"aw",%nobits
 3621              		.align	2
 3624              	rc_pitch:
 3625 0000 00000000 		.space	4
 3626              		.section	.bss.nav_ground_speed_pgain,"aw",%nobits
 3627              		.align	2
 3630              	nav_ground_speed_pgain:
 3631 0000 00000000 		.space	4
 3632              		.section	.bss.too_far_from_home,"aw",%nobits
 3633              		.set	.LANCHOR10,. + 0
 3636              	too_far_from_home:
 3637 0000 00       		.space	1
 3638              		.section	.bss.circle_bank,"aw",%nobits
 3639              		.align	2
 3640              		.set	.LANCHOR39,. + 0
 3643              	circle_bank:
 3644 0000 00000000 		.space	4
 3645              		.section	.bss.nav_pitch,"aw",%nobits
 3646              		.align	2
 3647              		.set	.LANCHOR6,. + 0
 3650              	nav_pitch:
 3651 0000 00000000 		.space	4
 3652              		.section	.bss.nav_mode,"aw",%nobits
 3653              		.align	2
 3654              		.set	.LANCHOR23,. + 0
 3657              	nav_mode:
 3658 0000 00000000 		.space	4
 3659              		.section	.bss.horizontal_mode,"aw",%nobits
 3660              		.set	.LANCHOR37,. + 0
 3663              	horizontal_mode:
 3664 0000 00       		.space	1
 3665              		.section	.bss.nav_circle_trigo_qdr,"aw",%nobits
 3666              		.align	2
 3667              		.set	.LANCHOR38,. + 0
 3670              	nav_circle_trigo_qdr:
 3671 0000 00000000 		.space	4
 3672              		.section	.bss.nav_survey_south,"aw",%nobits
 3673              		.align	2
 3676              	nav_survey_south:
 3677 0000 00000000 		.space	4
 3678              		.section	.bss.eight_status,"aw",%nobits
 3679              		.set	.LANCHOR25,. + 0
 3682              	eight_status:
 3683 0000 00       		.space	1
 3684              		.section	.bss.last_x,"aw",%nobits
 3685              		.align	2
 3686              		.set	.LANCHOR0,. + 0
 3689              	last_x:
 3690 0000 00000000 		.space	4
 3691              		.section	.bss.nav_circle_x,"aw",%nobits
 3692              		.align	2
 3693              		.set	.LANCHOR40,. + 0
 3696              	nav_circle_x:
 3697 0000 00000000 		.space	4
 3698              		.section	.bss.nav_circle_y,"aw",%nobits
 3699              		.align	2
 3700              		.set	.LANCHOR41,. + 0
 3703              	nav_circle_y:
 3704 0000 00000000 		.space	4
 3705              		.section	.bss.nav_leg_length,"aw",%nobits
 3706              		.align	2
 3707              		.set	.LANCHOR32,. + 0
 3710              	nav_leg_length:
 3711 0000 00000000 		.space	4
 3712              		.section	.bss.nav_survey_shift,"aw",%nobits
 3713              		.align	2
 3714              		.set	.LANCHOR22,. + 0
 3717              	nav_survey_shift:
 3718 0000 00000000 		.space	4
 3719              		.section	.bss.last_y,"aw",%nobits
 3720              		.align	2
 3721              		.set	.LANCHOR1,. + 0
 3724              	last_y:
 3725 0000 00000000 		.space	4
 3726              		.section	.bss.nav_segment_x_1,"aw",%nobits
 3727              		.align	2
 3728              		.set	.LANCHOR33,. + 0
 3731              	nav_segment_x_1:
 3732 0000 00000000 		.space	4
 3733              		.section	.bss.nav_segment_x_2,"aw",%nobits
 3734              		.align	2
 3735              		.set	.LANCHOR35,. + 0
 3738              	nav_segment_x_2:
 3739 0000 00000000 		.space	4
 3740              		.section	.bss.carrot_y,"aw",%nobits
 3741              		.align	2
 3744              	carrot_y:
 3745 0000 00000000 		.space	4
 3746              		.text
 3747              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nav.c
     /tmp/ccwxqUDG.s:24     .text.nav_init_stage:00000000 $t
     /tmp/ccwxqUDG.s:29     .text.nav_init_stage:00000000 nav_init_stage
     /tmp/ccwxqUDG.s:73     .text.nav_init_stage:00000030 $d
     /tmp/ccwxqUDG.s:91     .text.nav_approaching_xy:00000000 $t
     /tmp/ccwxqUDG.s:96     .text.nav_approaching_xy:00000000 nav_approaching_xy
     /tmp/ccwxqUDG.s:196    .text.nav_approaching_xy:00000098 $d
     /tmp/ccwxqUDG.s:205    .text.compute_dist2_to_home:00000000 $t
     /tmp/ccwxqUDG.s:210    .text.compute_dist2_to_home:00000000 compute_dist2_to_home
     /tmp/ccwxqUDG.s:270    .text.compute_dist2_to_home:00000050 $d
     /tmp/ccwxqUDG.s:280    .text.nav_update_waypoints_alt:00000000 $t
     /tmp/ccwxqUDG.s:285    .text.nav_update_waypoints_alt:00000000 nav_update_waypoints_alt
     /tmp/ccwxqUDG.s:320    .text.nav_update_waypoints_alt:0000002c $d
     /tmp/ccwxqUDG.s:327    .text.common_nav_periodic_task_4Hz:00000000 $t
     /tmp/ccwxqUDG.s:332    .text.common_nav_periodic_task_4Hz:00000000 common_nav_periodic_task_4Hz
     /tmp/ccwxqUDG.s:363    .text.common_nav_periodic_task_4Hz:00000028 $d
     /tmp/ccwxqUDG.s:372    .text.nav_move_waypoint:00000000 $t
     /tmp/ccwxqUDG.s:377    .text.nav_move_waypoint:00000000 nav_move_waypoint
     /tmp/ccwxqUDG.s:500    .text.nav_move_waypoint:000000b4 $d
     /tmp/ccwxqUDG.s:509    .text.nav_set_altitude:00000000 $t
     /tmp/ccwxqUDG.s:513    .text.nav_set_altitude:00000000 nav_set_altitude
     /tmp/ccwxqUDG.s:554    .text.nav_set_altitude:00000030 $d
     /tmp/ccwxqUDG.s:562    .text.nav_init:00000000 $t
     /tmp/ccwxqUDG.s:567    .text.nav_init:00000000 nav_init
     /tmp/ccwxqUDG.s:606    .text.nav_init:0000002c $d
     /tmp/ccwxqUDG.s:620    .text.nav_without_gps:00000000 $t
     /tmp/ccwxqUDG.s:625    .text.nav_without_gps:00000000 nav_without_gps
     /tmp/ccwxqUDG.s:657    .text.nav_without_gps:00000024 $d
     /tmp/ccwxqUDG.s:667    .text.nav_eight_init:00000000 $t
     /tmp/ccwxqUDG.s:672    .text.nav_eight_init:00000000 nav_eight_init
     /tmp/ccwxqUDG.s:688    .text.nav_eight_init:00000008 $d
     /tmp/ccwxqUDG.s:693    .text.nav_oval_init:00000000 $t
     /tmp/ccwxqUDG.s:698    .text.nav_oval_init:00000000 nav_oval_init
     /tmp/ccwxqUDG.s:718    .text.nav_oval_init:00000010 $d
     /tmp/ccwxqUDG.s:731    .text.nav_reset_reference:00000000 $t
     /tmp/ccwxqUDG.s:736    .text.nav_reset_reference:00000000 nav_reset_reference
     /tmp/ccwxqUDG.s:840    .text.nav_reset_reference:000000b0 $d
     /tmp/ccwxqUDG.s:864    .text.fly_to_xy:00000000 $t
     /tmp/ccwxqUDG.s:869    .text.fly_to_xy:00000000 fly_to_xy
     /tmp/ccwxqUDG.s:1103   .text.fly_to_xy:000001a0 $d
     /tmp/ccwxqUDG.s:1135   .text.nav_route_xy:00000000 $t
     /tmp/ccwxqUDG.s:1140   .text.nav_route_xy:00000000 nav_route_xy
     /tmp/ccwxqUDG.s:1343   .text.nav_route_xy:00000164 $d
     /tmp/ccwxqUDG.s:1359   .text.nav_circle_XY:00000000 $t
     /tmp/ccwxqUDG.s:1364   .text.nav_circle_XY:00000000 nav_circle_XY
     /tmp/ccwxqUDG.s:1584   .text.nav_circle_XY:00000188 $d
     /tmp/ccwxqUDG.s:1602   .text.nav_circle_XY:000001cc $t
     /tmp/ccwxqUDG.s:1742   .text.nav_circle_XY:000002f8 $d
     /tmp/ccwxqUDG.s:1761   .text.nav_oval:00000000 $t
     /tmp/ccwxqUDG.s:1766   .text.nav_oval:00000000 nav_oval
     /tmp/ccwxqUDG.s:1943   .text.nav_oval:0000013c $d
     /tmp/ccwxqUDG.s:1949   .text.nav_oval:00000144 $t
     /tmp/ccwxqUDG.s:2108   .text.nav_oval:00000270 $d
     /tmp/ccwxqUDG.s:2125   .text.nav_oval:000002a8 $t
     /tmp/ccwxqUDG.s:2401   .text.nav_oval:00000490 $d
     /tmp/ccwxqUDG.s:2417   .text.nav_eight:00000000 $t
     /tmp/ccwxqUDG.s:2422   .text.nav_eight:00000000 nav_eight
     /tmp/ccwxqUDG.s:2705   .text.nav_eight:000001f6 $d
     /tmp/ccwxqUDG.s:2713   .text.nav_eight:00000202 $t
     /tmp/ccwxqUDG.s:2771   .text.nav_eight:00000268 $d
     /tmp/ccwxqUDG.s:2782   .text.nav_eight:00000290 $t
     /tmp/ccwxqUDG.s:3095   .text.nav_eight:000004c8 $d
     /tmp/ccwxqUDG.s:3109   .text.nav_eight:000004f4 $t
     /tmp/ccwxqUDG.s:3141   .text.nav_eight:00000528 $d
     /tmp/ccwxqUDG.s:3147   .text.nav_home:00000000 $t
     /tmp/ccwxqUDG.s:3152   .text.nav_home:00000000 nav_home
     /tmp/ccwxqUDG.s:3200   .text.nav_home:0000003c $d
     /tmp/ccwxqUDG.s:3213   .text.nav_periodic_task:00000000 $t
     /tmp/ccwxqUDG.s:3218   .text.nav_periodic_task:00000000 nav_periodic_task
     /tmp/ccwxqUDG.s:3302   .text.nav_periodic_task:0000005c $d
     /tmp/ccwxqUDG.s:3567   .bss.nav_in_circle:00000000 nav_in_circle
     /tmp/ccwxqUDG.s:3520   .bss.nav_in_segment:00000000 nav_in_segment
     /tmp/ccwxqUDG.s:3643   .bss.circle_bank:00000000 circle_bank
     /tmp/ccwxqUDG.s:3397   .data.nav_altitude:00000000 nav_altitude
     /tmp/ccwxqUDG.s:3469   .rodata.nb_waypoint:00000000 nb_waypoint
     /tmp/ccwxqUDG.s:3600   .data.waypoints:00000000 waypoints
     /tmp/ccwxqUDG.s:3586   .data.nav_utm_east0:00000000 nav_utm_east0
     /tmp/ccwxqUDG.s:3547   .data.nav_utm_north0:00000000 nav_utm_north0
     /tmp/ccwxqUDG.s:3457   .data.nav_utm_zone0:00000000 nav_utm_zone0
     /tmp/ccwxqUDG.s:3370   .data.max_dist_from_home:00000000 max_dist_from_home
     /tmp/ccwxqUDG.s:3612   .bss.dist2_to_home:00000000 dist2_to_home
     /tmp/ccwxqUDG.s:3554   .bss.dist2_to_wp:00000000 dist2_to_wp
     /tmp/ccwxqUDG.s:3636   .bss.too_far_from_home:00000000 too_far_from_home
     /tmp/ccwxqUDG.s:3377   .bss.ground_alt:00000000 ground_alt
     /tmp/ccwxqUDG.s:3689   .bss.last_x:00000000 last_x
     /tmp/ccwxqUDG.s:3724   .bss.last_y:00000000 last_y
     /tmp/ccwxqUDG.s:3404   .bss.desired_x:00000000 desired_x
     /tmp/ccwxqUDG.s:3411   .bss.desired_y:00000000 desired_y
     /tmp/ccwxqUDG.s:3464   .bss.flight_altitude:00000000 flight_altitude
     /tmp/ccwxqUDG.s:3593   .bss.nav_glide_pitch_trim:00000000 nav_glide_pitch_trim
     /tmp/ccwxqUDG.s:3451   .bss.nav_throttle_setpoint:00000000 nav_throttle_setpoint
     /tmp/ccwxqUDG.s:3650   .bss.nav_pitch:00000000 nav_pitch
     /tmp/ccwxqUDG.s:3624   .bss.rc_pitch:00000000 rc_pitch
     /tmp/ccwxqUDG.s:3437   .bss.fp_pitch:00000000 fp_pitch
     /tmp/ccwxqUDG.s:3424   .bss.carrot_x:00000000 carrot_x
     /tmp/ccwxqUDG.s:3744   .bss.carrot_y:00000000 carrot_y
     /tmp/ccwxqUDG.s:3527   .bss.nav_circle_radians:00000000 nav_circle_radians
     /tmp/ccwxqUDG.s:3696   .bss.nav_circle_x:00000000 nav_circle_x
     /tmp/ccwxqUDG.s:3703   .bss.nav_circle_y:00000000 nav_circle_y
     /tmp/ccwxqUDG.s:3561   .bss.nav_circle_radius:00000000 nav_circle_radius
     /tmp/ccwxqUDG.s:3731   .bss.nav_segment_x_1:00000000 nav_segment_x_1
     /tmp/ccwxqUDG.s:3501   .bss.nav_segment_y_1:00000000 nav_segment_y_1
     /tmp/ccwxqUDG.s:3738   .bss.nav_segment_x_2:00000000 nav_segment_x_2
     /tmp/ccwxqUDG.s:3508   .bss.nav_segment_y_2:00000000 nav_segment_y_2
     /tmp/ccwxqUDG.s:3657   .bss.nav_mode:00000000 nav_mode
     /tmp/ccwxqUDG.s:3663   .bss.horizontal_mode:00000000 horizontal_mode
     /tmp/ccwxqUDG.s:3618   .bss.nav_oval_count:00000000 nav_oval_count
     /tmp/ccwxqUDG.s:3488   .bss.nav_radius:00000000 nav_radius
     /tmp/ccwxqUDG.s:3573   .bss.nav_course:00000000 nav_course
     /tmp/ccwxqUDG.s:3481   .bss.nav_climb:00000000 nav_climb
     /tmp/ccwxqUDG.s:3444   .bss.nav_shift:00000000 nav_shift
     /tmp/ccwxqUDG.s:3630   .bss.nav_ground_speed_pgain:00000000 nav_ground_speed_pgain
     /tmp/ccwxqUDG.s:3533   .bss.nav_ground_speed_setpoint:00000000 nav_ground_speed_setpoint
     /tmp/ccwxqUDG.s:3717   .bss.nav_survey_shift:00000000 nav_survey_shift
     /tmp/ccwxqUDG.s:3475   .bss.nav_survey_west:00000000 nav_survey_west
     /tmp/ccwxqUDG.s:3383   .bss.nav_survey_east:00000000 nav_survey_east
     /tmp/ccwxqUDG.s:3579   .bss.nav_survey_north:00000000 nav_survey_north
     /tmp/ccwxqUDG.s:3676   .bss.nav_survey_south:00000000 nav_survey_south
     /tmp/ccwxqUDG.s:3514   .bss.nav_survey_active:00000000 nav_survey_active
     /tmp/ccwxqUDG.s:3670   .bss.nav_circle_trigo_qdr:00000000 nav_circle_trigo_qdr
     /tmp/ccwxqUDG.s:3494   .bss.oval_status:00000000 oval_status
     /tmp/ccwxqUDG.s:3366   .data.max_dist_from_home:00000000 $d
     /tmp/ccwxqUDG.s:3373   .bss.ground_alt:00000000 $d
     /tmp/ccwxqUDG.s:3380   .bss.nav_survey_east:00000000 $d
     /tmp/ccwxqUDG.s:3386   .bss.last_nav_altitude.4974:00000000 $d
     /tmp/ccwxqUDG.s:3390   .bss.last_nav_altitude.4974:00000000 last_nav_altitude.4974
     /tmp/ccwxqUDG.s:3393   .data.nav_altitude:00000000 $d
     /tmp/ccwxqUDG.s:3400   .bss.desired_x:00000000 $d
     /tmp/ccwxqUDG.s:3407   .bss.desired_y:00000000 $d
     /tmp/ccwxqUDG.s:3414   .bss.previous_ground_alt:00000000 $d
     /tmp/ccwxqUDG.s:3418   .bss.previous_ground_alt:00000000 previous_ground_alt
     /tmp/ccwxqUDG.s:3421   .bss.carrot_x:00000000 $d
     /tmp/ccwxqUDG.s:3427   .bss.prescaler.4925:00000000 $d
     /tmp/ccwxqUDG.s:3431   .bss.prescaler.4925:00000000 prescaler.4925
     /tmp/ccwxqUDG.s:3434   .bss.fp_pitch:00000000 $d
     /tmp/ccwxqUDG.s:3440   .bss.nav_shift:00000000 $d
     /tmp/ccwxqUDG.s:3447   .bss.nav_throttle_setpoint:00000000 $d
     /tmp/ccwxqUDG.s:3460   .bss.flight_altitude:00000000 $d
     /tmp/ccwxqUDG.s:3472   .bss.nav_survey_west:00000000 $d
     /tmp/ccwxqUDG.s:3478   .bss.nav_climb:00000000 $d
     /tmp/ccwxqUDG.s:3484   .bss.nav_radius:00000000 $d
     /tmp/ccwxqUDG.s:3495   .bss.oval_status:00000000 $d
     /tmp/ccwxqUDG.s:3497   .bss.nav_segment_y_1:00000000 $d
     /tmp/ccwxqUDG.s:3504   .bss.nav_segment_y_2:00000000 $d
     /tmp/ccwxqUDG.s:3515   .bss.nav_survey_active:00000000 $d
     /tmp/ccwxqUDG.s:3521   .bss.nav_in_segment:00000000 $d
     /tmp/ccwxqUDG.s:3523   .bss.nav_circle_radians:00000000 $d
     /tmp/ccwxqUDG.s:3530   .bss.nav_ground_speed_setpoint:00000000 $d
     /tmp/ccwxqUDG.s:3536   .bss.nav_leg_progress:00000000 $d
     /tmp/ccwxqUDG.s:3540   .bss.nav_leg_progress:00000000 nav_leg_progress
     /tmp/ccwxqUDG.s:3543   .data.nav_utm_north0:00000000 $d
     /tmp/ccwxqUDG.s:3550   .bss.dist2_to_wp:00000000 $d
     /tmp/ccwxqUDG.s:3557   .bss.nav_circle_radius:00000000 $d
     /tmp/ccwxqUDG.s:3568   .bss.nav_in_circle:00000000 $d
     /tmp/ccwxqUDG.s:3570   .bss.nav_course:00000000 $d
     /tmp/ccwxqUDG.s:3576   .bss.nav_survey_north:00000000 $d
     /tmp/ccwxqUDG.s:3582   .data.nav_utm_east0:00000000 $d
     /tmp/ccwxqUDG.s:3589   .bss.nav_glide_pitch_trim:00000000 $d
     /tmp/ccwxqUDG.s:3596   .data.waypoints:00000000 $d
     /tmp/ccwxqUDG.s:3608   .bss.dist2_to_home:00000000 $d
     /tmp/ccwxqUDG.s:3619   .bss.nav_oval_count:00000000 $d
     /tmp/ccwxqUDG.s:3621   .bss.rc_pitch:00000000 $d
     /tmp/ccwxqUDG.s:3627   .bss.nav_ground_speed_pgain:00000000 $d
     /tmp/ccwxqUDG.s:3637   .bss.too_far_from_home:00000000 $d
     /tmp/ccwxqUDG.s:3639   .bss.circle_bank:00000000 $d
     /tmp/ccwxqUDG.s:3646   .bss.nav_pitch:00000000 $d
     /tmp/ccwxqUDG.s:3653   .bss.nav_mode:00000000 $d
     /tmp/ccwxqUDG.s:3664   .bss.horizontal_mode:00000000 $d
     /tmp/ccwxqUDG.s:3666   .bss.nav_circle_trigo_qdr:00000000 $d
     /tmp/ccwxqUDG.s:3673   .bss.nav_survey_south:00000000 $d
     /tmp/ccwxqUDG.s:3682   .bss.eight_status:00000000 eight_status
     /tmp/ccwxqUDG.s:3683   .bss.eight_status:00000000 $d
     /tmp/ccwxqUDG.s:3685   .bss.last_x:00000000 $d
     /tmp/ccwxqUDG.s:3692   .bss.nav_circle_x:00000000 $d
     /tmp/ccwxqUDG.s:3699   .bss.nav_circle_y:00000000 $d
     /tmp/ccwxqUDG.s:3706   .bss.nav_leg_length:00000000 $d
     /tmp/ccwxqUDG.s:3710   .bss.nav_leg_length:00000000 nav_leg_length
     /tmp/ccwxqUDG.s:3713   .bss.nav_survey_shift:00000000 $d
     /tmp/ccwxqUDG.s:3720   .bss.last_y:00000000 $d
     /tmp/ccwxqUDG.s:3727   .bss.nav_segment_x_1:00000000 $d
     /tmp/ccwxqUDG.s:3734   .bss.nav_segment_x_2:00000000 $d
     /tmp/ccwxqUDG.s:3741   .bss.carrot_y:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
estimator_x
estimator_y
stage_time
__aeabi_fsub
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmplt
estimator_hspeed_mod
__aeabi_fcmpgt
block_time
__aeabi_i2f
v_ctl_altitude_setpoint
nav_block
nav_stage
lateral_mode
v_ctl_mode
h_ctl_roll_setpoint
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
__aeabi_d2f
__aeabi_f2iz
utm_of_lla_f
gps
__aeabi_f2d
__aeabi_dsub
__aeabi_dcmpgt
__aeabi_dcmplt
atan2
sin
atan
h_ctl_course_setpoint
estimator_hspeed_dir
h_ctl_course_pgain
h_ctl_roll_max_setpoint
__aeabi_fdiv
sqrt
cos
__aeabi_fcmpge
nav_init_block
h_ctl_course_pre_bank
v_ctl_auto_throttle_submode
