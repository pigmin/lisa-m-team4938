   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"pprz_geodetic_int.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.enu_of_ecef_point_i,"ax",%progbits
  24              		.align	1
  25              		.global	enu_of_ecef_point_i
  26              		.thumb
  27              		.thumb_func
  29              	enu_of_ecef_point_i:
  30              	.LFB2:
  31              		.file 1 "math/pprz_geodetic_int.c"
   1:math/pprz_geodetic_int.c **** /*
   2:math/pprz_geodetic_int.c ****  * $Id$
   3:math/pprz_geodetic_int.c ****  *
   4:math/pprz_geodetic_int.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   5:math/pprz_geodetic_int.c ****  *
   6:math/pprz_geodetic_int.c ****  * This file is part of paparazzi.
   7:math/pprz_geodetic_int.c ****  *
   8:math/pprz_geodetic_int.c ****  * paparazzi is free software; you can redistribute it and/or modify
   9:math/pprz_geodetic_int.c ****  * it under the terms of the GNU General Public License as published by
  10:math/pprz_geodetic_int.c ****  * the Free Software Foundation; either version 2, or (at your option)
  11:math/pprz_geodetic_int.c ****  * any later version.
  12:math/pprz_geodetic_int.c ****  *
  13:math/pprz_geodetic_int.c ****  * paparazzi is distributed in the hope that it will be useful,
  14:math/pprz_geodetic_int.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:math/pprz_geodetic_int.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:math/pprz_geodetic_int.c ****  * GNU General Public License for more details.
  17:math/pprz_geodetic_int.c ****  *
  18:math/pprz_geodetic_int.c ****  * You should have received a copy of the GNU General Public License
  19:math/pprz_geodetic_int.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  20:math/pprz_geodetic_int.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  21:math/pprz_geodetic_int.c ****  * Boston, MA 02111-1307, USA.
  22:math/pprz_geodetic_int.c ****  */
  23:math/pprz_geodetic_int.c **** 
  24:math/pprz_geodetic_int.c **** #include "pprz_geodetic_int.h"
  25:math/pprz_geodetic_int.c **** #include "pprz_algebra_int.h"
  26:math/pprz_geodetic_int.c **** 
  27:math/pprz_geodetic_int.c **** #define HIGH_RES_TRIG_FRAC  20
  28:math/pprz_geodetic_int.c **** 
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  30:math/pprz_geodetic_int.c **** 
  31:math/pprz_geodetic_int.c ****   /* store the origin of the tangeant plane */
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
  33:math/pprz_geodetic_int.c ****   /* compute the lla representation of the origin */
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
  35:math/pprz_geodetic_int.c ****   /* store the rotation matrix                    */
  36:math/pprz_geodetic_int.c **** 
  37:math/pprz_geodetic_int.c **** #if 1
  38:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  39:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  40:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  41:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  42:math/pprz_geodetic_int.c **** #else
  43:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  44:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  45:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  46:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  47:math/pprz_geodetic_int.c **** #endif
  48:math/pprz_geodetic_int.c **** 
  49:math/pprz_geodetic_int.c **** 
  50:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  51:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  52:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  55:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  58:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  59:math/pprz_geodetic_int.c **** 
  60:math/pprz_geodetic_int.c **** }
  61:math/pprz_geodetic_int.c **** 
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
  63:math/pprz_geodetic_int.c **** 
  64:math/pprz_geodetic_int.c ****   /* store the origin of the tangeant plane */
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
  66:math/pprz_geodetic_int.c ****   /* compute the ecef representation of the origin */
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
  68:math/pprz_geodetic_int.c ****   /* store the rotation matrix                    */
  69:math/pprz_geodetic_int.c **** 
  70:math/pprz_geodetic_int.c **** #if 1
  71:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  72:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  73:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  74:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  75:math/pprz_geodetic_int.c **** #else
  76:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  77:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lat)), HIGH_RES_TRIG_FRAC))
  78:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sin(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  79:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cos(RAD_OF_EM7RAD((double)def->lla.lon)), HIGH_RES_TRIG_FRAC))
  80:math/pprz_geodetic_int.c **** #endif
  81:math/pprz_geodetic_int.c **** 
  82:math/pprz_geodetic_int.c **** 
  83:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  84:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  85:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  88:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
  91:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  92:math/pprz_geodetic_int.c **** 
  93:math/pprz_geodetic_int.c **** }
  94:math/pprz_geodetic_int.c **** 
  95:math/pprz_geodetic_int.c **** void enu_of_ecef_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  32              		.loc 1 95 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 16
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              	.LVL0:
  37 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 36
  96:math/pprz_geodetic_int.c **** 
  97:math/pprz_geodetic_int.c ****   struct EcefCoor_i delta;
  98:math/pprz_geodetic_int.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  40              		.loc 1 98 0
  41 0004 8B68     		ldr	r3, [r1, #8]
  42 0006 9668     		ldr	r6, [r2, #8]
  43              		.cfi_offset 14, -4
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 9, -16
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 7, -24
  49              		.cfi_offset 6, -28
  50              		.cfi_offset 5, -32
  51              		.cfi_offset 4, -36
  95:math/pprz_geodetic_int.c **** void enu_of_ecef_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
  52              		.loc 1 95 0
  53 0008 85B0     		sub	sp, sp, #20
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 56
  56              		.loc 1 98 0
  57 000a F31A     		subs	r3, r6, r3
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
  58              		.loc 1 99 0
  59 000c 1468     		ldr	r4, [r2, #0]
  98:math/pprz_geodetic_int.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  60              		.loc 1 98 0
  61 000e 0193     		str	r3, [sp, #4]
  62              		.loc 1 99 0
  63 0010 0B68     		ldr	r3, [r1, #0]
 100:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*delta.y +
  64              		.loc 1 100 0
  65 0012 5268     		ldr	r2, [r2, #4]
  66              	.LVL1:
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
  67              		.loc 1 99 0
  68 0014 E41A     		subs	r4, r4, r3
  69              		.loc 1 100 0
  70 0016 4B68     		ldr	r3, [r1, #4]
 101:math/pprz_geodetic_int.c ****                        0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_syst
 102:math/pprz_geodetic_int.c ****   enu->x = (int32_t)(tmpx>>HIGH_RES_TRIG_FRAC);
  71              		.loc 1 102 0
  72 0018 CF69     		ldr	r7, [r1, #28]
 100:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*delta.y +
  73              		.loc 1 100 0
  74 001a D21A     		subs	r2, r2, r3
  75 001c 1246     		mov	r2, r2
  76 001e 4FEAE273 		asr	r3, r2, #31
  77              		.loc 1 102 0
  78 0022 BA46     		mov	sl, r7
  79 0024 4FEAEA7B 		asr	fp, sl, #31
  80 0028 02FB0BFC 		mul	ip, r2, fp
  81 002c 0AFB03CC 		mla	ip, sl, r3, ip
  82 0030 A2FB0AAB 		umull	sl, fp, r2, sl
  83 0034 8F69     		ldr	r7, [r1, #24]
  99:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*delta.x +
  84              		.loc 1 99 0
  85 0036 2446     		mov	r4, r4
  86 0038 4FEAE475 		asr	r5, r4, #31
  87              		.loc 1 102 0
  88 003c B846     		mov	r8, r7
  89 003e 4FEAE879 		asr	r9, r8, #31
  90 0042 E344     		add	fp, ip, fp
  91 0044 04FB09FC 		mul	ip, r4, r9
  92 0048 08FB05CC 		mla	ip, r8, r5, ip
  93 004c A4FB0889 		umull	r8, r9, r4, r8
  94 0050 1AEB0806 		adds	r6, sl, r8
  95 0054 E144     		add	r9, ip, r9
  96 0056 4BEB0907 		adc	r7, fp, r9
  97 005a CDE90267 		strd	r6, [sp, #8]
  98 005e DDF80C80 		ldr	r8, [sp, #12]
  99 0062 370D     		lsrs	r7, r6, #20
 100 0064 47EA0837 		orr	r7, r7, r8, lsl #12
 101 0068 0760     		str	r7, [r0, #0]
 103:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*delta.x +
 104:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[4]*delta.y +
 105:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*delta.z;
 106:math/pprz_geodetic_int.c ****   enu->y = (int32_t)(tmpy>>HIGH_RES_TRIG_FRAC);
 102              		.loc 1 106 0
 103 006a D1F82880 		ldr	r8, [r1, #40]
 105:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*delta.z;
 104              		.loc 1 105 0
 105 006e DDF804A0 		ldr	sl, [sp, #4]
 106              		.loc 1 106 0
 107 0072 C046     		mov	r8, r8
 108 0074 4FEAE879 		asr	r9, r8, #31
 109 0078 02FB09FC 		mul	ip, r2, r9
 105:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*delta.z;
 110              		.loc 1 105 0
 111 007c 5646     		mov	r6, sl
 112 007e 4FEAE677 		asr	r7, r6, #31
 113              		.loc 1 106 0
 114 0082 A2FB08AB 		umull	sl, fp, r2, r8
 115 0086 08FB03CC 		mla	ip, r8, r3, ip
 116 008a CDE902AB 		strd	sl, [sp, #8]
 117 008e D1F824A0 		ldr	sl, [r1, #36]
 118 0092 E344     		add	fp, ip, fp
 119 0094 CDF80CB0 		str	fp, [sp, #12]
 120 0098 D246     		mov	sl, sl
 121 009a 4FEAEA7B 		asr	fp, sl, #31
 122 009e 04FB0BFC 		mul	ip, r4, fp
 123 00a2 DDE90289 		ldrd	r8, [sp, #8]
 124 00a6 0AFB05CC 		mla	ip, sl, r5, ip
 125 00aa A4FB0AAB 		umull	sl, fp, r4, sl
 126 00ae 18EB0A08 		adds	r8, r8, sl
 127 00b2 D1F82CA0 		ldr	sl, [r1, #44]
 128 00b6 E344     		add	fp, ip, fp
 129 00b8 49EB0B09 		adc	r9, r9, fp
 130 00bc D246     		mov	sl, sl
 131 00be 4FEAEA7B 		asr	fp, sl, #31
 132 00c2 06FB0BFC 		mul	ip, r6, fp
 133 00c6 0AFB07CC 		mla	ip, sl, r7, ip
 134 00ca A6FB0AAB 		umull	sl, fp, r6, sl
 135 00ce 18EB0A08 		adds	r8, r8, sl
 136 00d2 E344     		add	fp, ip, fp
 137 00d4 49EB0B09 		adc	r9, r9, fp
 138 00d8 4FEA185C 		lsr	ip, r8, #20
 139 00dc 4CEA093C 		orr	ip, ip, r9, lsl #12
 140 00e0 C0F804C0 		str	ip, [r0, #4]
 107:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*delta.x +
 108:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[7]*delta.y +
 109:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[8]*delta.z;
 110:math/pprz_geodetic_int.c ****   enu->z = (int32_t)(tmpz>>HIGH_RES_TRIG_FRAC);
 141              		.loc 1 110 0
 142 00e4 D1F83480 		ldr	r8, [r1, #52]
 143 00e8 C046     		mov	r8, r8
 144 00ea 4FEAE879 		asr	r9, r8, #31
 145 00ee 02FB09FC 		mul	ip, r2, r9
 146 00f2 08FB03CC 		mla	ip, r8, r3, ip
 147 00f6 A2FB0823 		umull	r2, r3, r2, r8
 148 00fa D1F83080 		ldr	r8, [r1, #48]
 149 00fe 6344     		add	r3, ip, r3
 150 0100 C046     		mov	r8, r8
 151 0102 4FEAE879 		asr	r9, r8, #31
 152 0106 04FB09FC 		mul	ip, r4, r9
 153 010a 08FB05CC 		mla	ip, r8, r5, ip
 154 010e A4FB0845 		umull	r4, r5, r4, r8
 155 0112 12EB0408 		adds	r8, r2, r4
 156 0116 8A6B     		ldr	r2, [r1, #56]
 157 0118 6544     		add	r5, ip, r5
 158 011a 43EB0509 		adc	r9, r3, r5
 159 011e 1246     		mov	r2, r2
 160 0120 4FEAE273 		asr	r3, r2, #31
 161 0124 06FB03F1 		mul	r1, r6, r3
 162              	.LVL2:
 163 0128 02FB0711 		mla	r1, r2, r7, r1
 164 012c A6FB0267 		umull	r6, r7, r6, r2
 165 0130 CF19     		adds	r7, r1, r7
 166 0132 18EB0608 		adds	r8, r8, r6
 167 0136 49EB0709 		adc	r9, r9, r7
 168 013a 4FEA1853 		lsr	r3, r8, #20
 169 013e 43EA0933 		orr	r3, r3, r9, lsl #12
 170 0142 8360     		str	r3, [r0, #8]
 111:math/pprz_geodetic_int.c **** 
 112:math/pprz_geodetic_int.c **** }
 171              		.loc 1 112 0
 172 0144 05B0     		add	sp, sp, #20
 173 0146 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 174              		.cfi_endproc
 175              	.LFE2:
 177              		.section	.text.ned_of_ecef_point_i,"ax",%progbits
 178              		.align	1
 179              		.global	ned_of_ecef_point_i
 180              		.thumb
 181              		.thumb_func
 183              	ned_of_ecef_point_i:
 184              	.LFB3:
 113:math/pprz_geodetic_int.c **** 
 114:math/pprz_geodetic_int.c **** 
 115:math/pprz_geodetic_int.c **** void ned_of_ecef_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 185              		.loc 1 115 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 16
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL3:
 190 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 24
 193              	.LVL4:
 194              		.loc 1 115 0
 195 0002 0446     		mov	r4, r0
 196              		.cfi_offset 14, -4
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 3, -12
 199              		.cfi_offset 2, -16
 200              		.cfi_offset 1, -20
 201              		.cfi_offset 0, -24
 202              	.LVL5:
 116:math/pprz_geodetic_int.c **** 
 117:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 118:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(&enu, def, ecef);
 203              		.loc 1 118 0
 204 0004 01A8     		add	r0, sp, #4
 205              	.LVL6:
 206 0006 FFF7FEFF 		bl	enu_of_ecef_point_i
 119:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(*ned, enu);
 207              		.loc 1 119 0
 208 000a 029B     		ldr	r3, [sp, #8]
 209 000c 2360     		str	r3, [r4, #0]
 210 000e 019B     		ldr	r3, [sp, #4]
 211 0010 6360     		str	r3, [r4, #4]
 212 0012 039B     		ldr	r3, [sp, #12]
 213 0014 5B42     		negs	r3, r3
 214 0016 A360     		str	r3, [r4, #8]
 120:math/pprz_geodetic_int.c **** 
 121:math/pprz_geodetic_int.c **** }
 215              		.loc 1 121 0
 216 0018 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 217              		.cfi_endproc
 218              	.LFE3:
 220              		.section	.text.enu_of_ecef_vect_i,"ax",%progbits
 221              		.align	1
 222              		.global	enu_of_ecef_vect_i
 223              		.thumb
 224              		.thumb_func
 226              	enu_of_ecef_vect_i:
 227              	.LFB4:
 122:math/pprz_geodetic_int.c **** 
 123:math/pprz_geodetic_int.c **** void enu_of_ecef_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 228              		.loc 1 123 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 16
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL7:
 233 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 36
 124:math/pprz_geodetic_int.c **** 
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 126:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*ecef->y +
 127:math/pprz_geodetic_int.c ****                        0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_syst
 128:math/pprz_geodetic_int.c ****   enu->x = (int32_t)(tmpx>>HIGH_RES_TRIG_FRAC);
 236              		.loc 1 128 0
 237 0004 CB69     		ldr	r3, [r1, #28]
 126:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*ecef->y +
 238              		.loc 1 126 0
 239 0006 5668     		ldr	r6, [r2, #4]
 240              		.cfi_offset 14, -4
 241              		.cfi_offset 11, -8
 242              		.cfi_offset 10, -12
 243              		.cfi_offset 9, -16
 244              		.cfi_offset 8, -20
 245              		.cfi_offset 7, -24
 246              		.cfi_offset 6, -28
 247              		.cfi_offset 5, -32
 248              		.cfi_offset 4, -36
 249              		.loc 1 128 0
 250 0008 9A46     		mov	sl, r3
 251 000a 4FEAEA7B 		asr	fp, sl, #31
 126:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[1]*ecef->y +
 252              		.loc 1 126 0
 253 000e 3646     		mov	r6, r6
 254 0010 4FEAE677 		asr	r7, r6, #31
 255              		.loc 1 128 0
 256 0014 06FB0BF3 		mul	r3, r6, fp
 257 0018 A6FB0A89 		umull	r8, r9, r6, sl
 258 001c 0AFB0733 		mla	r3, sl, r7, r3
 123:math/pprz_geodetic_int.c **** void enu_of_ecef_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 259              		.loc 1 123 0
 260 0020 85B0     		sub	sp, sp, #20
 261              	.LCFI4:
 262              		.cfi_def_cfa_offset 56
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 263              		.loc 1 125 0
 264 0022 1468     		ldr	r4, [r2, #0]
 265              		.loc 1 128 0
 266 0024 CDE90089 		strd	r8, [sp]
 267 0028 9944     		add	r9, r3, r9
 268 002a 8B69     		ldr	r3, [r1, #24]
 125:math/pprz_geodetic_int.c ****   const int64_t tmpx = (int64_t)def->ltp_of_ecef.m[0]*ecef->x +
 269              		.loc 1 125 0
 270 002c 2446     		mov	r4, r4
 271 002e 4FEAE475 		asr	r5, r4, #31
 272              		.loc 1 128 0
 273 0032 CDF80490 		str	r9, [sp, #4]
 274 0036 9846     		mov	r8, r3
 275 0038 4FEAE879 		asr	r9, r8, #31
 276 003c 04FB09F3 		mul	r3, r4, r9
 277 0040 DDE900AB 		ldrd	sl, [sp]
 278 0044 08FB0533 		mla	r3, r8, r5, r3
 279 0048 A4FB0889 		umull	r8, r9, r4, r8
 280 004c 1AEB080A 		adds	sl, sl, r8
 281 0050 9944     		add	r9, r3, r9
 282 0052 4BEB090B 		adc	fp, fp, r9
 283 0056 4FEA1A53 		lsr	r3, sl, #20
 284 005a 43EA0B33 		orr	r3, r3, fp, lsl #12
 285 005e 0360     		str	r3, [r0, #0]
 129:math/pprz_geodetic_int.c ****   const int64_t tmpy = (int64_t)def->ltp_of_ecef.m[3]*ecef->x +
 130:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[4]*ecef->y +
 131:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*ecef->z;
 132:math/pprz_geodetic_int.c ****   enu->y = (int32_t)(tmpy>>HIGH_RES_TRIG_FRAC);
 286              		.loc 1 132 0
 287 0060 D1F82880 		ldr	r8, [r1, #40]
 131:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*ecef->z;
 288              		.loc 1 131 0
 289 0064 9268     		ldr	r2, [r2, #8]
 290              	.LVL8:
 291              		.loc 1 132 0
 292 0066 C046     		mov	r8, r8
 293 0068 4FEAE879 		asr	r9, r8, #31
 294 006c 08FB07FC 		mul	ip, r8, r7
 295 0070 A8FB06AB 		umull	sl, fp, r8, r6
 296 0074 06FB09CC 		mla	ip, r6, r9, ip
 297 0078 CDE902AB 		strd	sl, [sp, #8]
 298 007c D1F824A0 		ldr	sl, [r1, #36]
 299 0080 E344     		add	fp, ip, fp
 300 0082 CDF80CB0 		str	fp, [sp, #12]
 301 0086 D246     		mov	sl, sl
 302 0088 4FEAEA7B 		asr	fp, sl, #31
 303 008c 0AFB05FC 		mul	ip, sl, r5
 304 0090 DDE90289 		ldrd	r8, [sp, #8]
 305 0094 04FB0BCC 		mla	ip, r4, fp, ip
 306 0098 AAFB04AB 		umull	sl, fp, sl, r4
 307 009c 18EB0A08 		adds	r8, r8, sl
 308 00a0 D1F82CA0 		ldr	sl, [r1, #44]
 309 00a4 E344     		add	fp, ip, fp
 131:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[5]*ecef->z;
 310              		.loc 1 131 0
 311 00a6 1246     		mov	r2, r2
 312 00a8 4FEAE273 		asr	r3, r2, #31
 313              		.loc 1 132 0
 314 00ac 49EB0B09 		adc	r9, r9, fp
 315 00b0 D246     		mov	sl, sl
 316 00b2 4FEAEA7B 		asr	fp, sl, #31
 317 00b6 02FB0BFC 		mul	ip, r2, fp
 318 00ba 0AFB03CC 		mla	ip, sl, r3, ip
 319 00be A2FB0AAB 		umull	sl, fp, r2, sl
 320 00c2 18EB0A08 		adds	r8, r8, sl
 321 00c6 E344     		add	fp, ip, fp
 322 00c8 49EB0B09 		adc	r9, r9, fp
 323 00cc 4FEA185C 		lsr	ip, r8, #20
 324 00d0 4CEA093C 		orr	ip, ip, r9, lsl #12
 325 00d4 C0F804C0 		str	ip, [r0, #4]
 133:math/pprz_geodetic_int.c ****   const int64_t tmpz = (int64_t)def->ltp_of_ecef.m[6]*ecef->x +
 134:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[7]*ecef->y +
 135:math/pprz_geodetic_int.c ****                        (int64_t)def->ltp_of_ecef.m[8]*ecef->z;
 136:math/pprz_geodetic_int.c ****   enu->z = (int32_t)(tmpz>>HIGH_RES_TRIG_FRAC);
 326              		.loc 1 136 0
 327 00d8 D1F83480 		ldr	r8, [r1, #52]
 328 00dc C046     		mov	r8, r8
 329 00de 4FEAE879 		asr	r9, r8, #31
 330 00e2 08FB07FC 		mul	ip, r8, r7
 331 00e6 06FB09CC 		mla	ip, r6, r9, ip
 332 00ea A8FB0667 		umull	r6, r7, r8, r6
 333 00ee D1F83080 		ldr	r8, [r1, #48]
 334 00f2 6744     		add	r7, ip, r7
 335 00f4 C046     		mov	r8, r8
 336 00f6 4FEAE879 		asr	r9, r8, #31
 337 00fa 08FB05FC 		mul	ip, r8, r5
 338 00fe 04FB09CC 		mla	ip, r4, r9, ip
 339 0102 A8FB0445 		umull	r4, r5, r8, r4
 340 0106 16EB0408 		adds	r8, r6, r4
 341 010a 8C6B     		ldr	r4, [r1, #56]
 342 010c 6544     		add	r5, ip, r5
 343 010e 47EB0509 		adc	r9, r7, r5
 344 0112 2446     		mov	r4, r4
 345 0114 4FEAE475 		asr	r5, r4, #31
 346 0118 04FB03F1 		mul	r1, r4, r3
 347              	.LVL9:
 348 011c 02FB0511 		mla	r1, r2, r5, r1
 349 0120 A4FB0223 		umull	r2, r3, r4, r2
 350 0124 CB18     		adds	r3, r1, r3
 351 0126 18EB0208 		adds	r8, r8, r2
 352 012a 49EB0309 		adc	r9, r9, r3
 353 012e 4FEA1853 		lsr	r3, r8, #20
 354 0132 43EA0933 		orr	r3, r3, r9, lsl #12
 355 0136 8360     		str	r3, [r0, #8]
 137:math/pprz_geodetic_int.c **** 
 138:math/pprz_geodetic_int.c **** }
 356              		.loc 1 138 0
 357 0138 05B0     		add	sp, sp, #20
 358 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 359              		.cfi_endproc
 360              	.LFE4:
 362              		.section	.text.ned_of_ecef_vect_i,"ax",%progbits
 363              		.align	1
 364              		.global	ned_of_ecef_vect_i
 365              		.thumb
 366              		.thumb_func
 368              	ned_of_ecef_vect_i:
 369              	.LFB5:
 139:math/pprz_geodetic_int.c **** 
 140:math/pprz_geodetic_int.c **** 
 141:math/pprz_geodetic_int.c **** void ned_of_ecef_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 370              		.loc 1 141 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 16
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL10:
 375 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 376              	.LCFI5:
 377              		.cfi_def_cfa_offset 24
 378              	.LVL11:
 379              		.loc 1 141 0
 380 0002 0446     		mov	r4, r0
 381              		.cfi_offset 14, -4
 382              		.cfi_offset 4, -8
 383              		.cfi_offset 3, -12
 384              		.cfi_offset 2, -16
 385              		.cfi_offset 1, -20
 386              		.cfi_offset 0, -24
 387              	.LVL12:
 142:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 143:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(&enu, def, ecef);
 388              		.loc 1 143 0
 389 0004 01A8     		add	r0, sp, #4
 390              	.LVL13:
 391 0006 FFF7FEFF 		bl	enu_of_ecef_vect_i
 144:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(*ned, enu);
 392              		.loc 1 144 0
 393 000a 029B     		ldr	r3, [sp, #8]
 394 000c 2360     		str	r3, [r4, #0]
 395 000e 019B     		ldr	r3, [sp, #4]
 396 0010 6360     		str	r3, [r4, #4]
 397 0012 039B     		ldr	r3, [sp, #12]
 398 0014 5B42     		negs	r3, r3
 399 0016 A360     		str	r3, [r4, #8]
 145:math/pprz_geodetic_int.c **** }
 400              		.loc 1 145 0
 401 0018 1FBD     		pop	{r0, r1, r2, r3, r4, pc}
 402              		.cfi_endproc
 403              	.LFE5:
 405              		.section	.text.ecef_of_enu_point_i,"ax",%progbits
 406              		.align	1
 407              		.global	ecef_of_enu_point_i
 408              		.thumb
 409              		.thumb_func
 411              	ecef_of_enu_point_i:
 412              	.LFB6:
 146:math/pprz_geodetic_int.c **** 
 147:math/pprz_geodetic_int.c **** /* check if resolution of INT32_TRIG_FRAC (14) is enough here */
 148:math/pprz_geodetic_int.c **** void ecef_of_enu_point_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 413              		.loc 1 148 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL14:
 418 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 419              	.LCFI6:
 420              		.cfi_def_cfa_offset 20
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 421              		.loc 1 149 0
 422 0002 1568     		ldr	r5, [r2, #0]
 423              		.cfi_offset 14, -4
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 6, -12
 426              		.cfi_offset 5, -16
 427              		.cfi_offset 4, -20
 428 0004 8E69     		ldr	r6, [r1, #24]
 429 0006 5468     		ldr	r4, [r2, #4]
 430 0008 6E43     		muls	r6, r5, r6
 431 000a 9368     		ldr	r3, [r2, #8]
 432 000c 4A6A     		ldr	r2, [r1, #36]
 433              	.LVL15:
 434 000e 02FB0466 		mla	r6, r2, r4, r6
 435 0012 0A6B     		ldr	r2, [r1, #48]
 436 0014 02FB0366 		mla	r6, r2, r3, r6
 437 0018 B613     		asrs	r6, r6, #14
 438 001a 0660     		str	r6, [r0, #0]
 439 001c CA69     		ldr	r2, [r1, #28]
 440 001e 8F6A     		ldr	r7, [r1, #40]
 441 0020 6A43     		muls	r2, r5, r2
 442 0022 07FB0422 		mla	r2, r7, r4, r2
 443 0026 4F6B     		ldr	r7, [r1, #52]
 444 0028 07FB0322 		mla	r2, r7, r3, r2
 445 002c 9213     		asrs	r2, r2, #14
 446 002e 4260     		str	r2, [r0, #4]
 447 0030 D1F820C0 		ldr	ip, [r1, #32]
 448 0034 CF6A     		ldr	r7, [r1, #44]
 449 0036 0CFB05F5 		mul	r5, ip, r5
 450 003a 07FB0454 		mla	r4, r7, r4, r5
 451 003e 8D6B     		ldr	r5, [r1, #56]
 452 0040 05FB0343 		mla	r3, r5, r3, r4
 150:math/pprz_geodetic_int.c ****   INT32_VECT3_ADD(*ecef, def->ecef);
 453              		.loc 1 150 0
 454 0044 0C68     		ldr	r4, [r1, #0]
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 455              		.loc 1 149 0
 456 0046 9B13     		asrs	r3, r3, #14
 457              		.loc 1 150 0
 458 0048 3619     		adds	r6, r6, r4
 459 004a 4C68     		ldr	r4, [r1, #4]
 149:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 460              		.loc 1 149 0
 461 004c 8360     		str	r3, [r0, #8]
 462              		.loc 1 150 0
 463 004e 1219     		adds	r2, r2, r4
 464 0050 4260     		str	r2, [r0, #4]
 465 0052 8A68     		ldr	r2, [r1, #8]
 466 0054 0660     		str	r6, [r0, #0]
 467 0056 9B18     		adds	r3, r3, r2
 468 0058 8360     		str	r3, [r0, #8]
 151:math/pprz_geodetic_int.c **** }
 469              		.loc 1 151 0
 470 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 471              		.cfi_endproc
 472              	.LFE6:
 474              		.section	.text.ecef_of_ned_point_i,"ax",%progbits
 475              		.align	1
 476              		.global	ecef_of_ned_point_i
 477              		.thumb
 478              		.thumb_func
 480              	ecef_of_ned_point_i:
 481              	.LFB7:
 152:math/pprz_geodetic_int.c **** 
 153:math/pprz_geodetic_int.c **** void ecef_of_ned_point_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct NedCoor_i* ned) {
 482              		.loc 1 153 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 16
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL16:
 487 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 488              	.LCFI7:
 489              		.cfi_def_cfa_offset 24
 490              	.LVL17:
 154:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 155:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 491              		.loc 1 155 0
 492 0002 5368     		ldr	r3, [r2, #4]
 493              		.cfi_offset 14, -4
 494              		.cfi_offset 4, -8
 495              		.cfi_offset 3, -12
 496              		.cfi_offset 2, -16
 497              		.cfi_offset 1, -20
 498              		.cfi_offset 0, -24
 499              	.LVL18:
 500 0004 0193     		str	r3, [sp, #4]
 501 0006 1368     		ldr	r3, [r2, #0]
 502 0008 0293     		str	r3, [sp, #8]
 503 000a 9368     		ldr	r3, [r2, #8]
 156:math/pprz_geodetic_int.c ****   ecef_of_enu_point_i(ecef, def, &enu);
 504              		.loc 1 156 0
 505 000c 01AA     		add	r2, sp, #4
 506              	.LVL19:
 155:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 507              		.loc 1 155 0
 508 000e 5B42     		negs	r3, r3
 509 0010 0393     		str	r3, [sp, #12]
 510              		.loc 1 156 0
 511 0012 FFF7FEFF 		bl	ecef_of_enu_point_i
 157:math/pprz_geodetic_int.c **** }
 512              		.loc 1 157 0
 513 0016 05B0     		add	sp, sp, #20
 514 0018 00BD     		pop	{pc}
 515              		.cfi_endproc
 516              	.LFE7:
 518              		.section	.text.ecef_of_enu_vect_i,"ax",%progbits
 519              		.align	1
 520              		.global	ecef_of_enu_vect_i
 521              		.thumb
 522              		.thumb_func
 524              	ecef_of_enu_vect_i:
 525              	.LFB8:
 158:math/pprz_geodetic_int.c **** 
 159:math/pprz_geodetic_int.c **** void ecef_of_enu_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 526              		.loc 1 159 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              	.LVL20:
 160:math/pprz_geodetic_int.c ****   INT32_RMAT_TRANSP_VMULT(*ecef, def->ltp_of_ecef, *enu);
 531              		.loc 1 160 0
 532 0000 9368     		ldr	r3, [r2, #8]
 159:math/pprz_geodetic_int.c **** void ecef_of_enu_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct EnuCoor_i* enu) {
 533              		.loc 1 159 0
 534 0002 70B5     		push	{r4, r5, r6, lr}
 535              	.LCFI8:
 536              		.cfi_def_cfa_offset 16
 537              		.loc 1 160 0
 538 0004 1568     		ldr	r5, [r2, #0]
 539              		.cfi_offset 14, -4
 540              		.cfi_offset 6, -8
 541              		.cfi_offset 5, -12
 542              		.cfi_offset 4, -16
 543 0006 5468     		ldr	r4, [r2, #4]
 544 0008 8A69     		ldr	r2, [r1, #24]
 545              	.LVL21:
 546 000a 4E6A     		ldr	r6, [r1, #36]
 547 000c 6A43     		muls	r2, r5, r2
 548 000e 06FB0422 		mla	r2, r6, r4, r2
 549 0012 0E6B     		ldr	r6, [r1, #48]
 550 0014 06FB0322 		mla	r2, r6, r3, r2
 551 0018 9213     		asrs	r2, r2, #14
 552 001a 0260     		str	r2, [r0, #0]
 553 001c CA69     		ldr	r2, [r1, #28]
 554 001e 8E6A     		ldr	r6, [r1, #40]
 555 0020 6A43     		muls	r2, r5, r2
 556 0022 06FB0422 		mla	r2, r6, r4, r2
 557 0026 4E6B     		ldr	r6, [r1, #52]
 558 0028 06FB0322 		mla	r2, r6, r3, r2
 559 002c 9213     		asrs	r2, r2, #14
 560 002e 4260     		str	r2, [r0, #4]
 561 0030 0E6A     		ldr	r6, [r1, #32]
 562 0032 CA6A     		ldr	r2, [r1, #44]
 563 0034 7543     		muls	r5, r6, r5
 564 0036 02FB0454 		mla	r4, r2, r4, r5
 565 003a 8D6B     		ldr	r5, [r1, #56]
 566 003c 05FB0343 		mla	r3, r5, r3, r4
 567 0040 9B13     		asrs	r3, r3, #14
 568 0042 8360     		str	r3, [r0, #8]
 161:math/pprz_geodetic_int.c **** }
 569              		.loc 1 161 0
 570 0044 70BD     		pop	{r4, r5, r6, pc}
 571              		.cfi_endproc
 572              	.LFE8:
 574              		.section	.text.ecef_of_ned_vect_i,"ax",%progbits
 575              		.align	1
 576              		.global	ecef_of_ned_vect_i
 577              		.thumb
 578              		.thumb_func
 580              	ecef_of_ned_vect_i:
 581              	.LFB9:
 162:math/pprz_geodetic_int.c **** 
 163:math/pprz_geodetic_int.c **** void ecef_of_ned_vect_i(struct EcefCoor_i* ecef, struct LtpDef_i* def, struct NedCoor_i* ned) {
 582              		.loc 1 163 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 16
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL22:
 587 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 588              	.LCFI9:
 589              		.cfi_def_cfa_offset 24
 590              	.LVL23:
 164:math/pprz_geodetic_int.c ****   struct EnuCoor_i enu;
 165:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 591              		.loc 1 165 0
 592 0002 5368     		ldr	r3, [r2, #4]
 593              		.cfi_offset 14, -4
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 3, -12
 596              		.cfi_offset 2, -16
 597              		.cfi_offset 1, -20
 598              		.cfi_offset 0, -24
 599              	.LVL24:
 600 0004 0193     		str	r3, [sp, #4]
 601 0006 1368     		ldr	r3, [r2, #0]
 602 0008 0293     		str	r3, [sp, #8]
 603 000a 9368     		ldr	r3, [r2, #8]
 166:math/pprz_geodetic_int.c ****   ecef_of_enu_vect_i(ecef, def, &enu);
 604              		.loc 1 166 0
 605 000c 01AA     		add	r2, sp, #4
 606              	.LVL25:
 165:math/pprz_geodetic_int.c ****   ENU_OF_TO_NED(enu, *ned);
 607              		.loc 1 165 0
 608 000e 5B42     		negs	r3, r3
 609 0010 0393     		str	r3, [sp, #12]
 610              		.loc 1 166 0
 611 0012 FFF7FEFF 		bl	ecef_of_enu_vect_i
 167:math/pprz_geodetic_int.c **** }
 612              		.loc 1 167 0
 613 0016 05B0     		add	sp, sp, #20
 614 0018 00BD     		pop	{pc}
 615              		.cfi_endproc
 616              	.LFE9:
 618              		.global	__aeabi_i2d
 619              		.global	__aeabi_ddiv
 620              		.global	__aeabi_dmul
 621              		.global	__aeabi_d2iz
 622              		.section	.text.ecef_of_lla_i,"ax",%progbits
 623              		.align	1
 624              		.global	ecef_of_lla_i
 625              		.thumb
 626              		.thumb_func
 628              	ecef_of_lla_i:
 629              	.LFB17:
 168:math/pprz_geodetic_int.c **** 
 169:math/pprz_geodetic_int.c **** 
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 171:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 172:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 173:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(enu,def,&ecef);
 174:math/pprz_geodetic_int.c **** }
 175:math/pprz_geodetic_int.c **** 
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 177:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 178:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 179:math/pprz_geodetic_int.c ****   ned_of_ecef_point_i(ned,def,&ecef);
 180:math/pprz_geodetic_int.c **** }
 181:math/pprz_geodetic_int.c **** 
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 183:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 184:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 185:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(enu,def,&ecef);
 186:math/pprz_geodetic_int.c **** }
 187:math/pprz_geodetic_int.c **** 
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 189:math/pprz_geodetic_int.c ****   struct EcefCoor_i ecef;
 190:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 191:math/pprz_geodetic_int.c ****   ned_of_ecef_vect_i(ned,def,&ecef);
 192:math/pprz_geodetic_int.c **** }
 193:math/pprz_geodetic_int.c **** 
 194:math/pprz_geodetic_int.c **** /*
 195:math/pprz_geodetic_int.c ****    For now we cheat and call the floating point version
 196:math/pprz_geodetic_int.c ****    Anyone up for writing it in fixed point ?
 197:math/pprz_geodetic_int.c **** */
 198:math/pprz_geodetic_int.c **** #include "pprz_geodetic_float.h"
 199:math/pprz_geodetic_int.c **** #include "pprz_geodetic_double.h"
 200:math/pprz_geodetic_int.c **** 
 201:math/pprz_geodetic_int.c **** void lla_of_ecef_i(struct LlaCoor_i* out, struct EcefCoor_i* in) {
 202:math/pprz_geodetic_int.c **** 
 203:math/pprz_geodetic_int.c ****   /* convert our input to floating point */
 204:math/pprz_geodetic_int.c ****   struct EcefCoor_d in_d;
 205:math/pprz_geodetic_int.c ****   in_d.x = M_OF_CM((double)in->x);
 206:math/pprz_geodetic_int.c ****   in_d.y = M_OF_CM((double)in->y);
 207:math/pprz_geodetic_int.c ****   in_d.z = M_OF_CM((double)in->z);
 208:math/pprz_geodetic_int.c ****   /* calls the floating point transformation */
 209:math/pprz_geodetic_int.c ****   struct LlaCoor_d out_d;
 210:math/pprz_geodetic_int.c ****   lla_of_ecef_d(&out_d, &in_d);
 211:math/pprz_geodetic_int.c ****   /* convert the output to fixed point       */
 212:math/pprz_geodetic_int.c ****   out->lon = (int32_t)rint(EM7RAD_OF_RAD(out_d.lon));
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 214:math/pprz_geodetic_int.c ****   out->alt = (int32_t)MM_OF_M(out_d.alt);
 215:math/pprz_geodetic_int.c **** 
 216:math/pprz_geodetic_int.c **** }
 217:math/pprz_geodetic_int.c **** 
 218:math/pprz_geodetic_int.c **** void ecef_of_lla_i(struct EcefCoor_i* out, struct LlaCoor_i* in) {
 630              		.loc 1 218 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 48
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              	.LVL26:
 635 0000 30B5     		push	{r4, r5, lr}
 636              	.LCFI10:
 637              		.cfi_def_cfa_offset 12
 638 0002 0446     		mov	r4, r0
 639              		.cfi_offset 14, -4
 640              		.cfi_offset 5, -8
 641              		.cfi_offset 4, -12
 642 0004 8DB0     		sub	sp, sp, #52
 643              	.LCFI11:
 644              		.cfi_def_cfa_offset 64
 219:math/pprz_geodetic_int.c **** 
 220:math/pprz_geodetic_int.c ****   /* convert our input to floating point */
 221:math/pprz_geodetic_int.c ****   struct LlaCoor_d in_d;
 222:math/pprz_geodetic_int.c ****   in_d.lon = RAD_OF_EM7RAD((double)in->lon);
 645              		.loc 1 222 0
 646 0006 0868     		ldr	r0, [r1, #0]
 647              	.LVL27:
 218:math/pprz_geodetic_int.c **** void ecef_of_lla_i(struct EcefCoor_i* out, struct LlaCoor_i* in) {
 648              		.loc 1 218 0
 649 0008 0D46     		mov	r5, r1
 650              		.loc 1 222 0
 651 000a FFF7FEFF 		bl	__aeabi_i2d
 652              	.LVL28:
 653 000e 1FA3     		adr	r3, .L19+4
 654 0010 D3E90023 		ldrd	r2, [r3]
 655 0014 FFF7FEFF 		bl	__aeabi_ddiv
 656 0018 CDE90601 		strd	r0, [sp, #24]
 223:math/pprz_geodetic_int.c ****   in_d.lat = RAD_OF_EM7RAD((double)in->lat);
 657              		.loc 1 223 0
 658 001c 6868     		ldr	r0, [r5, #4]
 659 001e FFF7FEFF 		bl	__aeabi_i2d
 660 0022 1AA3     		adr	r3, .L19+4
 661 0024 D3E90023 		ldrd	r2, [r3]
 662 0028 FFF7FEFF 		bl	__aeabi_ddiv
 663 002c CDE90801 		strd	r0, [sp, #32]
 224:math/pprz_geodetic_int.c ****   in_d.alt = M_OF_MM((double)in->alt);
 664              		.loc 1 224 0
 665 0030 A868     		ldr	r0, [r5, #8]
 666 0032 FFF7FEFF 		bl	__aeabi_i2d
 667 0036 17A3     		adr	r3, .L19+12
 668 0038 D3E90023 		ldrd	r2, [r3]
 669 003c FFF7FEFF 		bl	__aeabi_ddiv
 670 0040 CDE90A01 		strd	r0, [sp, #40]
 225:math/pprz_geodetic_int.c ****   /* calls the floating point transformation */
 226:math/pprz_geodetic_int.c ****   struct EcefCoor_d out_d;
 227:math/pprz_geodetic_int.c ****   ecef_of_lla_d(&out_d, &in_d);
 671              		.loc 1 227 0
 672 0044 6846     		mov	r0, sp
 673 0046 06A9     		add	r1, sp, #24
 674 0048 FFF7FEFF 		bl	ecef_of_lla_d
 228:math/pprz_geodetic_int.c ****   /* convert the output to fixed point       */
 229:math/pprz_geodetic_int.c ****   out->x = (int32_t)CM_OF_M(out_d.x);
 675              		.loc 1 229 0
 676 004c DDE90001 		ldrd	r0, [sp]
 677 0050 0022     		movs	r2, #0
 678 0052 0D4B     		ldr	r3, .L19
 679 0054 FFF7FEFF 		bl	__aeabi_dmul
 680 0058 FFF7FEFF 		bl	__aeabi_d2iz
 230:math/pprz_geodetic_int.c ****   out->y = (int32_t)CM_OF_M(out_d.y);
 681              		.loc 1 230 0
 682 005c 0022     		movs	r2, #0
 683 005e 0A4B     		ldr	r3, .L19
 229:math/pprz_geodetic_int.c ****   out->x = (int32_t)CM_OF_M(out_d.x);
 684              		.loc 1 229 0
 685 0060 2060     		str	r0, [r4, #0]
 686              		.loc 1 230 0
 687 0062 DDE90201 		ldrd	r0, [sp, #8]
 688 0066 FFF7FEFF 		bl	__aeabi_dmul
 689 006a FFF7FEFF 		bl	__aeabi_d2iz
 231:math/pprz_geodetic_int.c ****   out->z = (int32_t)CM_OF_M(out_d.z);
 690              		.loc 1 231 0
 691 006e 0022     		movs	r2, #0
 230:math/pprz_geodetic_int.c ****   out->y = (int32_t)CM_OF_M(out_d.y);
 692              		.loc 1 230 0
 693 0070 6060     		str	r0, [r4, #4]
 694              		.loc 1 231 0
 695 0072 054B     		ldr	r3, .L19
 696 0074 DDE90401 		ldrd	r0, [sp, #16]
 697 0078 FFF7FEFF 		bl	__aeabi_dmul
 698 007c FFF7FEFF 		bl	__aeabi_d2iz
 699 0080 A060     		str	r0, [r4, #8]
 232:math/pprz_geodetic_int.c **** 
 233:math/pprz_geodetic_int.c **** }
 700              		.loc 1 233 0
 701 0082 0DB0     		add	sp, sp, #52
 702 0084 30BD     		pop	{r4, r5, pc}
 703              	.L20:
 704 0086 00BF     		.align	3
 705              	.L19:
 706 0088 00005940 		.word	1079574528
 707 008c 00000000 		.word	0
 708 0090 D0126341 		.word	1097011920
 709 0094 00000000 		.word	0
 710 0098 00408F40 		.word	1083129856
 711              		.cfi_endproc
 712              	.LFE17:
 714 009c AFF30080 		.section	.text.ned_of_lla_vect_i,"ax",%progbits
 715              		.align	1
 716              		.global	ned_of_lla_vect_i
 717              		.thumb
 718              		.thumb_func
 720              	ned_of_lla_vect_i:
 721              	.LFB13:
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 722              		.loc 1 188 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 16
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              	.LVL29:
 727 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 728              	.LCFI12:
 729              		.cfi_def_cfa_offset 32
 730              	.LVL30:
 190:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 731              		.loc 1 190 0
 732 0002 01AC     		add	r4, sp, #4
 733              		.cfi_offset 14, -4
 734              		.cfi_offset 6, -8
 735              		.cfi_offset 5, -12
 736              		.cfi_offset 4, -16
 737              		.cfi_offset 3, -20
 738              		.cfi_offset 2, -24
 739              		.cfi_offset 1, -28
 740              		.cfi_offset 0, -32
 188:math/pprz_geodetic_int.c **** void ned_of_lla_vect_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 741              		.loc 1 188 0
 742 0004 0646     		mov	r6, r0
 743              	.LVL31:
 744 0006 0D46     		mov	r5, r1
 745              	.LVL32:
 190:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 746              		.loc 1 190 0
 747 0008 2046     		mov	r0, r4
 748              	.LVL33:
 749 000a 1146     		mov	r1, r2
 750              	.LVL34:
 751 000c FFF7FEFF 		bl	ecef_of_lla_i
 752              	.LVL35:
 191:math/pprz_geodetic_int.c ****   ned_of_ecef_vect_i(ned,def,&ecef);
 753              		.loc 1 191 0
 754 0010 3046     		mov	r0, r6
 755 0012 2946     		mov	r1, r5
 756 0014 2246     		mov	r2, r4
 757 0016 FFF7FEFF 		bl	ned_of_ecef_vect_i
 192:math/pprz_geodetic_int.c **** }
 758              		.loc 1 192 0
 759 001a 7FBD     		pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 760              		.cfi_endproc
 761              	.LFE13:
 763              		.section	.text.enu_of_lla_vect_i,"ax",%progbits
 764              		.align	1
 765              		.global	enu_of_lla_vect_i
 766              		.thumb
 767              		.thumb_func
 769              	enu_of_lla_vect_i:
 770              	.LFB12:
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 771              		.loc 1 182 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 16
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              	.LVL36:
 776 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 777              	.LCFI13:
 778              		.cfi_def_cfa_offset 32
 779              	.LVL37:
 184:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 780              		.loc 1 184 0
 781 0002 01AC     		add	r4, sp, #4
 782              		.cfi_offset 14, -4
 783              		.cfi_offset 6, -8
 784              		.cfi_offset 5, -12
 785              		.cfi_offset 4, -16
 786              		.cfi_offset 3, -20
 787              		.cfi_offset 2, -24
 788              		.cfi_offset 1, -28
 789              		.cfi_offset 0, -32
 182:math/pprz_geodetic_int.c **** void enu_of_lla_vect_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 790              		.loc 1 182 0
 791 0004 0646     		mov	r6, r0
 792              	.LVL38:
 793 0006 0D46     		mov	r5, r1
 794              	.LVL39:
 184:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 795              		.loc 1 184 0
 796 0008 2046     		mov	r0, r4
 797              	.LVL40:
 798 000a 1146     		mov	r1, r2
 799              	.LVL41:
 800 000c FFF7FEFF 		bl	ecef_of_lla_i
 801              	.LVL42:
 185:math/pprz_geodetic_int.c ****   enu_of_ecef_vect_i(enu,def,&ecef);
 802              		.loc 1 185 0
 803 0010 3046     		mov	r0, r6
 804 0012 2946     		mov	r1, r5
 805 0014 2246     		mov	r2, r4
 806 0016 FFF7FEFF 		bl	enu_of_ecef_vect_i
 186:math/pprz_geodetic_int.c **** }
 807              		.loc 1 186 0
 808 001a 7FBD     		pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 809              		.cfi_endproc
 810              	.LFE12:
 812              		.section	.text.ned_of_lla_point_i,"ax",%progbits
 813              		.align	1
 814              		.global	ned_of_lla_point_i
 815              		.thumb
 816              		.thumb_func
 818              	ned_of_lla_point_i:
 819              	.LFB11:
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 820              		.loc 1 176 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 16
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL43:
 825 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 826              	.LCFI14:
 827              		.cfi_def_cfa_offset 32
 828              	.LVL44:
 178:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 829              		.loc 1 178 0
 830 0002 01AC     		add	r4, sp, #4
 831              		.cfi_offset 14, -4
 832              		.cfi_offset 6, -8
 833              		.cfi_offset 5, -12
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 3, -20
 836              		.cfi_offset 2, -24
 837              		.cfi_offset 1, -28
 838              		.cfi_offset 0, -32
 176:math/pprz_geodetic_int.c **** void ned_of_lla_point_i(struct NedCoor_i* ned, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 839              		.loc 1 176 0
 840 0004 0646     		mov	r6, r0
 841              	.LVL45:
 842 0006 0D46     		mov	r5, r1
 843              	.LVL46:
 178:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 844              		.loc 1 178 0
 845 0008 2046     		mov	r0, r4
 846              	.LVL47:
 847 000a 1146     		mov	r1, r2
 848              	.LVL48:
 849 000c FFF7FEFF 		bl	ecef_of_lla_i
 850              	.LVL49:
 179:math/pprz_geodetic_int.c ****   ned_of_ecef_point_i(ned,def,&ecef);
 851              		.loc 1 179 0
 852 0010 3046     		mov	r0, r6
 853 0012 2946     		mov	r1, r5
 854 0014 2246     		mov	r2, r4
 855 0016 FFF7FEFF 		bl	ned_of_ecef_point_i
 180:math/pprz_geodetic_int.c **** }
 856              		.loc 1 180 0
 857 001a 7FBD     		pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 858              		.cfi_endproc
 859              	.LFE11:
 861              		.section	.text.enu_of_lla_point_i,"ax",%progbits
 862              		.align	1
 863              		.global	enu_of_lla_point_i
 864              		.thumb
 865              		.thumb_func
 867              	enu_of_lla_point_i:
 868              	.LFB10:
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 869              		.loc 1 170 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 16
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL50:
 874 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 875              	.LCFI15:
 876              		.cfi_def_cfa_offset 32
 877              	.LVL51:
 172:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 878              		.loc 1 172 0
 879 0002 01AC     		add	r4, sp, #4
 880              		.cfi_offset 14, -4
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 5, -12
 883              		.cfi_offset 4, -16
 884              		.cfi_offset 3, -20
 885              		.cfi_offset 2, -24
 886              		.cfi_offset 1, -28
 887              		.cfi_offset 0, -32
 170:math/pprz_geodetic_int.c **** void enu_of_lla_point_i(struct EnuCoor_i* enu, struct LtpDef_i* def, struct LlaCoor_i* lla) {
 888              		.loc 1 170 0
 889 0004 0646     		mov	r6, r0
 890              	.LVL52:
 891 0006 0D46     		mov	r5, r1
 892              	.LVL53:
 172:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&ecef,lla);
 893              		.loc 1 172 0
 894 0008 2046     		mov	r0, r4
 895              	.LVL54:
 896 000a 1146     		mov	r1, r2
 897              	.LVL55:
 898 000c FFF7FEFF 		bl	ecef_of_lla_i
 899              	.LVL56:
 173:math/pprz_geodetic_int.c ****   enu_of_ecef_point_i(enu,def,&ecef);
 900              		.loc 1 173 0
 901 0010 3046     		mov	r0, r6
 902 0012 2946     		mov	r1, r5
 903 0014 2246     		mov	r2, r4
 904 0016 FFF7FEFF 		bl	enu_of_ecef_point_i
 174:math/pprz_geodetic_int.c **** }
 905              		.loc 1 174 0
 906 001a 7FBD     		pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 907              		.cfi_endproc
 908              	.LFE10:
 910              		.section	.text.lla_of_ecef_i,"ax",%progbits
 911              		.align	1
 912              		.global	lla_of_ecef_i
 913              		.thumb
 914              		.thumb_func
 916              	lla_of_ecef_i:
 917              	.LFB16:
 201:math/pprz_geodetic_int.c **** void lla_of_ecef_i(struct LlaCoor_i* out, struct EcefCoor_i* in) {
 918              		.loc 1 201 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 48
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              	.LVL57:
 923 0000 30B5     		push	{r4, r5, lr}
 924              	.LCFI16:
 925              		.cfi_def_cfa_offset 12
 926 0002 0446     		mov	r4, r0
 927              		.cfi_offset 14, -4
 928              		.cfi_offset 5, -8
 929              		.cfi_offset 4, -12
 930 0004 8DB0     		sub	sp, sp, #52
 931              	.LCFI17:
 932              		.cfi_def_cfa_offset 64
 205:math/pprz_geodetic_int.c ****   in_d.x = M_OF_CM((double)in->x);
 933              		.loc 1 205 0
 934 0006 0868     		ldr	r0, [r1, #0]
 935              	.LVL58:
 201:math/pprz_geodetic_int.c **** void lla_of_ecef_i(struct LlaCoor_i* out, struct EcefCoor_i* in) {
 936              		.loc 1 201 0
 937 0008 0D46     		mov	r5, r1
 205:math/pprz_geodetic_int.c ****   in_d.x = M_OF_CM((double)in->x);
 938              		.loc 1 205 0
 939 000a FFF7FEFF 		bl	__aeabi_i2d
 940              	.LVL59:
 941 000e 0022     		movs	r2, #0
 942 0010 234B     		ldr	r3, .L31+16
 943 0012 FFF7FEFF 		bl	__aeabi_ddiv
 944 0016 CDE90601 		strd	r0, [sp, #24]
 206:math/pprz_geodetic_int.c ****   in_d.y = M_OF_CM((double)in->y);
 945              		.loc 1 206 0
 946 001a 6868     		ldr	r0, [r5, #4]
 947 001c FFF7FEFF 		bl	__aeabi_i2d
 948 0020 0022     		movs	r2, #0
 949 0022 1F4B     		ldr	r3, .L31+16
 950 0024 FFF7FEFF 		bl	__aeabi_ddiv
 951 0028 CDE90801 		strd	r0, [sp, #32]
 207:math/pprz_geodetic_int.c ****   in_d.z = M_OF_CM((double)in->z);
 952              		.loc 1 207 0
 953 002c A868     		ldr	r0, [r5, #8]
 954 002e FFF7FEFF 		bl	__aeabi_i2d
 955 0032 0022     		movs	r2, #0
 956 0034 1A4B     		ldr	r3, .L31+16
 957 0036 FFF7FEFF 		bl	__aeabi_ddiv
 958 003a CDE90A01 		strd	r0, [sp, #40]
 210:math/pprz_geodetic_int.c ****   lla_of_ecef_d(&out_d, &in_d);
 959              		.loc 1 210 0
 960 003e 6846     		mov	r0, sp
 961 0040 06A9     		add	r1, sp, #24
 962 0042 FFF7FEFF 		bl	lla_of_ecef_d
 212:math/pprz_geodetic_int.c ****   out->lon = (int32_t)rint(EM7RAD_OF_RAD(out_d.lon));
 963              		.loc 1 212 0
 964 0046 12A3     		adr	r3, .L31
 965 0048 D3E90023 		ldrd	r2, [r3]
 966 004c DDE90001 		ldrd	r0, [sp]
 967 0050 FFF7FEFF 		bl	__aeabi_dmul
 968 0054 FFF7FEFF 		bl	rint
 969 0058 FFF7FEFF 		bl	__aeabi_d2iz
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 970              		.loc 1 213 0
 971 005c 0CA3     		adr	r3, .L31
 972 005e D3E90023 		ldrd	r2, [r3]
 212:math/pprz_geodetic_int.c ****   out->lon = (int32_t)rint(EM7RAD_OF_RAD(out_d.lon));
 973              		.loc 1 212 0
 974 0062 2060     		str	r0, [r4, #0]
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 975              		.loc 1 213 0
 976 0064 DDE90201 		ldrd	r0, [sp, #8]
 977 0068 FFF7FEFF 		bl	__aeabi_dmul
 978 006c FFF7FEFF 		bl	rint
 979 0070 FFF7FEFF 		bl	__aeabi_d2iz
 214:math/pprz_geodetic_int.c ****   out->alt = (int32_t)MM_OF_M(out_d.alt);
 980              		.loc 1 214 0
 981 0074 08A3     		adr	r3, .L31+8
 982 0076 D3E90023 		ldrd	r2, [r3]
 213:math/pprz_geodetic_int.c ****   out->lat = (int32_t)rint(EM7RAD_OF_RAD(out_d.lat));
 983              		.loc 1 213 0
 984 007a 6060     		str	r0, [r4, #4]
 214:math/pprz_geodetic_int.c ****   out->alt = (int32_t)MM_OF_M(out_d.alt);
 985              		.loc 1 214 0
 986 007c DDE90401 		ldrd	r0, [sp, #16]
 987 0080 FFF7FEFF 		bl	__aeabi_dmul
 988 0084 FFF7FEFF 		bl	__aeabi_d2iz
 989 0088 A060     		str	r0, [r4, #8]
 216:math/pprz_geodetic_int.c **** }
 990              		.loc 1 216 0
 991 008a 0DB0     		add	sp, sp, #52
 992 008c 30BD     		pop	{r4, r5, pc}
 993              	.L32:
 994 008e 00BF     		.align	3
 995              	.L31:
 996 0090 00000000 		.word	0
 997 0094 D0126341 		.word	1097011920
 998 0098 00000000 		.word	0
 999 009c 00408F40 		.word	1083129856
 1000 00a0 00005940 		.word	1079574528
 1001              		.cfi_endproc
 1002              	.LFE16:
 1004              		.global	__aeabi_i2f
 1005              		.global	__aeabi_fdiv
 1006              		.global	__aeabi_fmul
 1007              		.global	__aeabi_f2d
 1008 00a4 AFF30080 		.section	.text.ltp_def_from_lla_i,"ax",%progbits
 1009              		.align	1
 1010              		.global	ltp_def_from_lla_i
 1011              		.thumb
 1012              		.thumb_func
 1014              	ltp_def_from_lla_i:
 1015              	.LFB1:
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
 1016              		.loc 1 62 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL60:
 1021 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1022              	.LCFI18:
 1023              		.cfi_def_cfa_offset 32
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1024              		.loc 1 65 0
 1025 0004 4B68     		ldr	r3, [r1, #4]
 1026              		.cfi_offset 14, -4
 1027              		.cfi_offset 9, -8
 1028              		.cfi_offset 8, -12
 1029              		.cfi_offset 7, -16
 1030              		.cfi_offset 6, -20
 1031              		.cfi_offset 5, -24
 1032              		.cfi_offset 4, -28
 1033              		.cfi_offset 3, -32
  62:math/pprz_geodetic_int.c **** void ltp_def_from_lla_i(struct LtpDef_i* def, struct LlaCoor_i* lla) {
 1034              		.loc 1 62 0
 1035 0006 0446     		mov	r4, r0
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1036              		.loc 1 65 0
 1037 0008 0361     		str	r3, [r0, #16]
 1038 000a 0B68     		ldr	r3, [r1, #0]
 1039 000c C360     		str	r3, [r0, #12]
 1040 000e 8B68     		ldr	r3, [r1, #8]
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
 1041              		.loc 1 67 0
 1042 0010 00F10C01 		add	r1, r0, #12
 1043              	.LVL61:
  65:math/pprz_geodetic_int.c ****   LLA_COPY(def->lla, *lla);
 1044              		.loc 1 65 0
 1045 0014 4361     		str	r3, [r0, #20]
  67:math/pprz_geodetic_int.c ****   ecef_of_lla_i(&def->ecef, &def->lla);
 1046              		.loc 1 67 0
 1047 0016 FFF7FEFF 		bl	ecef_of_lla_i
 1048              	.LVL62:
  71:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1049              		.loc 1 71 0
 1050 001a 2069     		ldr	r0, [r4, #16]
 1051 001c FFF7FEFF 		bl	__aeabi_i2f
 1052 0020 4849     		ldr	r1, .L35
 1053 0022 FFF7FEFF 		bl	__aeabi_fdiv
 1054 0026 FFF7FEFF 		bl	sinf
 1055 002a 4FF09341 		mov	r1, #1233125376
 1056 002e FFF7FEFF 		bl	__aeabi_fmul
 1057 0032 FFF7FEFF 		bl	__aeabi_f2d
 1058 0036 FFF7FEFF 		bl	rint
 1059 003a FFF7FEFF 		bl	__aeabi_d2iz
 1060 003e 0546     		mov	r5, r0
  72:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1061              		.loc 1 72 0
 1062 0040 2069     		ldr	r0, [r4, #16]
 1063 0042 FFF7FEFF 		bl	__aeabi_i2f
 1064 0046 3F49     		ldr	r1, .L35
 1065 0048 FFF7FEFF 		bl	__aeabi_fdiv
 1066 004c FFF7FEFF 		bl	cosf
 1067 0050 4FF09341 		mov	r1, #1233125376
 1068 0054 FFF7FEFF 		bl	__aeabi_fmul
 1069 0058 FFF7FEFF 		bl	__aeabi_f2d
 1070 005c FFF7FEFF 		bl	rint
 1071 0060 FFF7FEFF 		bl	__aeabi_d2iz
 1072 0064 0646     		mov	r6, r0
  73:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1073              		.loc 1 73 0
 1074 0066 E068     		ldr	r0, [r4, #12]
 1075 0068 FFF7FEFF 		bl	__aeabi_i2f
 1076 006c 3549     		ldr	r1, .L35
 1077 006e FFF7FEFF 		bl	__aeabi_fdiv
 1078 0072 FFF7FEFF 		bl	sinf
 1079 0076 4FF09341 		mov	r1, #1233125376
 1080 007a FFF7FEFF 		bl	__aeabi_fmul
 1081 007e FFF7FEFF 		bl	__aeabi_f2d
 1082 0082 FFF7FEFF 		bl	rint
 1083 0086 FFF7FEFF 		bl	__aeabi_d2iz
 1084 008a 0746     		mov	r7, r0
  74:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1085              		.loc 1 74 0
 1086 008c E068     		ldr	r0, [r4, #12]
 1087 008e FFF7FEFF 		bl	__aeabi_i2f
 1088 0092 2C49     		ldr	r1, .L35
 1089 0094 FFF7FEFF 		bl	__aeabi_fdiv
 1090 0098 FFF7FEFF 		bl	cosf
 1091 009c 4FF09341 		mov	r1, #1233125376
 1092 00a0 FFF7FEFF 		bl	__aeabi_fmul
 1093 00a4 FFF7FEFF 		bl	__aeabi_f2d
 1094 00a8 FFF7FEFF 		bl	rint
 1095 00ac FFF7FEFF 		bl	__aeabi_d2iz
  83:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1096              		.loc 1 83 0
 1097 00b0 7B42     		negs	r3, r7
 1098 00b2 A361     		str	r3, [r4, #24]
  85:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
 1099              		.loc 1 85 0
 1100 00b4 0023     		movs	r3, #0
 1101 00b6 2362     		str	r3, [r4, #32]
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1102              		.loc 1 86 0
 1103 00b8 2A46     		mov	r2, r5
 1104 00ba 4FEAE273 		asr	r3, r2, #31
 1105              	.LVL63:
 1106 00be D2F10008 		negs	r8, r2
 1107 00c2 63EB4309 		sbc	r9, r3, r3, lsl #1
  84:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1108              		.loc 1 84 0
 1109 00c6 E061     		str	r0, [r4, #28]
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1110              		.loc 1 86 0
 1111 00c8 0046     		mov	r0, r0
 1112 00ca 4FEAE071 		asr	r1, r0, #31
 1113 00ce 08FB01FC 		mul	ip, r8, r1
 1114 00d2 A8FB0023 		umull	r2, r3, r8, r0
 1115              	.LVL64:
 1116 00d6 00FB09CC 		mla	ip, r0, r9, ip
 1117 00da 6344     		add	r3, ip, r3
 1118 00dc 4FEA125C 		lsr	ip, r2, #20
 1119 00e0 4CEA033C 		orr	ip, ip, r3, lsl #12
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1120              		.loc 1 87 0
 1121 00e4 3A46     		mov	r2, r7
 1122 00e6 4FEAE273 		asr	r3, r2, #31
  86:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1123              		.loc 1 86 0
 1124 00ea C4F824C0 		str	ip, [r4, #36]
  87:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1125              		.loc 1 87 0
 1126 00ee 08FB03FC 		mul	ip, r8, r3
 1127 00f2 02FB09CC 		mla	ip, r2, r9, ip
 1128 00f6 A8FB0289 		umull	r8, r9, r8, r2
 1129 00fa E144     		add	r9, ip, r9
 1130 00fc 4FEA1857 		lsr	r7, r8, #20
 1131 0100 47EA0937 		orr	r7, r7, r9, lsl #12
 1132 0104 A762     		str	r7, [r4, #40]
  88:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1133              		.loc 1 88 0
 1134 0106 E662     		str	r6, [r4, #44]
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1135              		.loc 1 89 0
 1136 0108 3646     		mov	r6, r6
 1137 010a 4FEAE677 		asr	r7, r6, #31
 1138 010e 06FB01FC 		mul	ip, r6, r1
 1139 0112 00FB07CC 		mla	ip, r0, r7, ip
 1140 0116 A6FB0001 		umull	r0, r1, r6, r0
 1141 011a 6144     		add	r1, ip, r1
 1142 011c 4FEA105C 		lsr	ip, r0, #20
 1143 0120 4CEA013C 		orr	ip, ip, r1, lsl #12
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1144              		.loc 1 90 0
 1145 0124 06FB03F1 		mul	r1, r6, r3
 1146 0128 02FB0711 		mla	r1, r2, r7, r1
 1147 012c A6FB0267 		umull	r6, r7, r6, r2
 1148 0130 CF19     		adds	r7, r1, r7
 1149 0132 330D     		lsrs	r3, r6, #20
 1150 0134 43EA0733 		orr	r3, r3, r7, lsl #12
  89:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1151              		.loc 1 89 0
 1152 0138 C4F830C0 		str	ip, [r4, #48]
  90:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1153              		.loc 1 90 0
 1154 013c 6363     		str	r3, [r4, #52]
  91:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1155              		.loc 1 91 0
 1156 013e A563     		str	r5, [r4, #56]
  93:math/pprz_geodetic_int.c **** }
 1157              		.loc 1 93 0
 1158 0140 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1159              	.L36:
 1160              		.align	2
 1161              	.L35:
 1162 0144 8096184B 		.word	1259902592
 1163              		.cfi_endproc
 1164              	.LFE1:
 1166              		.section	.text.ltp_def_from_ecef_i,"ax",%progbits
 1167              		.align	1
 1168              		.global	ltp_def_from_ecef_i
 1169              		.thumb
 1170              		.thumb_func
 1172              	ltp_def_from_ecef_i:
 1173              	.LFB0:
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 1174              		.loc 1 29 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              	.LVL65:
 1179 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1180              	.LCFI19:
 1181              		.cfi_def_cfa_offset 32
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 1182              		.loc 1 32 0
 1183 0004 0B68     		ldr	r3, [r1, #0]
 1184              		.cfi_offset 14, -4
 1185              		.cfi_offset 9, -8
 1186              		.cfi_offset 8, -12
 1187              		.cfi_offset 7, -16
 1188              		.cfi_offset 6, -20
 1189              		.cfi_offset 5, -24
 1190              		.cfi_offset 4, -28
 1191              		.cfi_offset 3, -32
  29:math/pprz_geodetic_int.c **** void ltp_def_from_ecef_i(struct LtpDef_i* def, struct EcefCoor_i* ecef) {
 1192              		.loc 1 29 0
 1193 0006 0446     		mov	r4, r0
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 1194              		.loc 1 32 0
 1195 0008 0360     		str	r3, [r0, #0]
 1196 000a 4B68     		ldr	r3, [r1, #4]
 1197 000c 4360     		str	r3, [r0, #4]
 1198 000e 8B68     		ldr	r3, [r1, #8]
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
 1199              		.loc 1 34 0
 1200 0010 2146     		mov	r1, r4
 1201              	.LVL66:
  32:math/pprz_geodetic_int.c ****   VECT3_COPY(def->ecef, *ecef);
 1202              		.loc 1 32 0
 1203 0012 8360     		str	r3, [r0, #8]
  34:math/pprz_geodetic_int.c ****   lla_of_ecef_i(&def->lla, &def->ecef);
 1204              		.loc 1 34 0
 1205 0014 0C30     		adds	r0, r0, #12
 1206              	.LVL67:
 1207 0016 FFF7FEFF 		bl	lla_of_ecef_i
  38:math/pprz_geodetic_int.c ****   int32_t sin_lat = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1208              		.loc 1 38 0
 1209 001a 2069     		ldr	r0, [r4, #16]
 1210 001c FFF7FEFF 		bl	__aeabi_i2f
 1211 0020 4849     		ldr	r1, .L39
 1212 0022 FFF7FEFF 		bl	__aeabi_fdiv
 1213 0026 FFF7FEFF 		bl	sinf
 1214 002a 4FF09341 		mov	r1, #1233125376
 1215 002e FFF7FEFF 		bl	__aeabi_fmul
 1216 0032 FFF7FEFF 		bl	__aeabi_f2d
 1217 0036 FFF7FEFF 		bl	rint
 1218 003a FFF7FEFF 		bl	__aeabi_d2iz
 1219 003e 0546     		mov	r5, r0
  39:math/pprz_geodetic_int.c ****   int32_t cos_lat = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lat)), HIGH_RES_TRIG_FRAC))
 1220              		.loc 1 39 0
 1221 0040 2069     		ldr	r0, [r4, #16]
 1222 0042 FFF7FEFF 		bl	__aeabi_i2f
 1223 0046 3F49     		ldr	r1, .L39
 1224 0048 FFF7FEFF 		bl	__aeabi_fdiv
 1225 004c FFF7FEFF 		bl	cosf
 1226 0050 4FF09341 		mov	r1, #1233125376
 1227 0054 FFF7FEFF 		bl	__aeabi_fmul
 1228 0058 FFF7FEFF 		bl	__aeabi_f2d
 1229 005c FFF7FEFF 		bl	rint
 1230 0060 FFF7FEFF 		bl	__aeabi_d2iz
 1231 0064 0646     		mov	r6, r0
  40:math/pprz_geodetic_int.c ****   int32_t sin_lon = rint(BFP_OF_REAL(sinf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1232              		.loc 1 40 0
 1233 0066 E068     		ldr	r0, [r4, #12]
 1234 0068 FFF7FEFF 		bl	__aeabi_i2f
 1235 006c 3549     		ldr	r1, .L39
 1236 006e FFF7FEFF 		bl	__aeabi_fdiv
 1237 0072 FFF7FEFF 		bl	sinf
 1238 0076 4FF09341 		mov	r1, #1233125376
 1239 007a FFF7FEFF 		bl	__aeabi_fmul
 1240 007e FFF7FEFF 		bl	__aeabi_f2d
 1241 0082 FFF7FEFF 		bl	rint
 1242 0086 FFF7FEFF 		bl	__aeabi_d2iz
 1243 008a 0746     		mov	r7, r0
  41:math/pprz_geodetic_int.c ****   int32_t cos_lon = rint(BFP_OF_REAL(cosf(RAD_OF_EM7RAD((float)def->lla.lon)), HIGH_RES_TRIG_FRAC))
 1244              		.loc 1 41 0
 1245 008c E068     		ldr	r0, [r4, #12]
 1246 008e FFF7FEFF 		bl	__aeabi_i2f
 1247 0092 2C49     		ldr	r1, .L39
 1248 0094 FFF7FEFF 		bl	__aeabi_fdiv
 1249 0098 FFF7FEFF 		bl	cosf
 1250 009c 4FF09341 		mov	r1, #1233125376
 1251 00a0 FFF7FEFF 		bl	__aeabi_fmul
 1252 00a4 FFF7FEFF 		bl	__aeabi_f2d
 1253 00a8 FFF7FEFF 		bl	rint
 1254 00ac FFF7FEFF 		bl	__aeabi_d2iz
  50:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1255              		.loc 1 50 0
 1256 00b0 7B42     		negs	r3, r7
 1257 00b2 A361     		str	r3, [r4, #24]
  52:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[2] =  0; /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_
 1258              		.loc 1 52 0
 1259 00b4 0023     		movs	r3, #0
 1260 00b6 2362     		str	r3, [r4, #32]
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1261              		.loc 1 53 0
 1262 00b8 2A46     		mov	r2, r5
 1263 00ba 4FEAE273 		asr	r3, r2, #31
 1264              	.LVL68:
 1265 00be D2F10008 		negs	r8, r2
 1266 00c2 63EB4309 		sbc	r9, r3, r3, lsl #1
  51:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1267              		.loc 1 51 0
 1268 00c6 E061     		str	r0, [r4, #28]
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1269              		.loc 1 53 0
 1270 00c8 0046     		mov	r0, r0
 1271 00ca 4FEAE071 		asr	r1, r0, #31
 1272 00ce 08FB01FC 		mul	ip, r8, r1
 1273 00d2 A8FB0023 		umull	r2, r3, r8, r0
 1274              	.LVL69:
 1275 00d6 00FB09CC 		mla	ip, r0, r9, ip
 1276 00da 6344     		add	r3, ip, r3
 1277 00dc 4FEA125C 		lsr	ip, r2, #20
 1278 00e0 4CEA033C 		orr	ip, ip, r3, lsl #12
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1279              		.loc 1 54 0
 1280 00e4 3A46     		mov	r2, r7
 1281 00e6 4FEAE273 		asr	r3, r2, #31
  53:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[3] = (int32_t)((-(int64_t)sin_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1282              		.loc 1 53 0
 1283 00ea C4F824C0 		str	ip, [r4, #36]
  54:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[4] = (int32_t)((-(int64_t)sin_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1284              		.loc 1 54 0
 1285 00ee 08FB03FC 		mul	ip, r8, r3
 1286 00f2 02FB09CC 		mla	ip, r2, r9, ip
 1287 00f6 A8FB0289 		umull	r8, r9, r8, r2
 1288 00fa E144     		add	r9, ip, r9
 1289 00fc 4FEA1857 		lsr	r7, r8, #20
 1290 0100 47EA0937 		orr	r7, r7, r9, lsl #12
 1291 0104 A762     		str	r7, [r4, #40]
  55:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1292              		.loc 1 55 0
 1293 0106 E662     		str	r6, [r4, #44]
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1294              		.loc 1 56 0
 1295 0108 3646     		mov	r6, r6
 1296 010a 4FEAE677 		asr	r7, r6, #31
 1297 010e 06FB01FC 		mul	ip, r6, r1
 1298 0112 00FB07CC 		mla	ip, r0, r7, ip
 1299 0116 A6FB0001 		umull	r0, r1, r6, r0
 1300 011a 6144     		add	r1, ip, r1
 1301 011c 4FEA105C 		lsr	ip, r0, #20
 1302 0120 4CEA013C 		orr	ip, ip, r1, lsl #12
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1303              		.loc 1 57 0
 1304 0124 06FB03F1 		mul	r1, r6, r3
 1305 0128 02FB0711 		mla	r1, r2, r7, r1
 1306 012c A6FB0267 		umull	r6, r7, r6, r2
 1307 0130 CF19     		adds	r7, r1, r7
 1308 0132 330D     		lsrs	r3, r6, #20
 1309 0134 43EA0733 		orr	r3, r3, r7, lsl #12
  56:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[6] = (int32_t)(( (int64_t)cos_lat*(int64_t)cos_lon)>>HIGH_RES_TRIG_FRAC);
 1310              		.loc 1 56 0
 1311 0138 C4F830C0 		str	ip, [r4, #48]
  57:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[7] = (int32_t)(( (int64_t)cos_lat*(int64_t)sin_lon)>>HIGH_RES_TRIG_FRAC);
 1312              		.loc 1 57 0
 1313 013c 6363     		str	r3, [r4, #52]
  58:math/pprz_geodetic_int.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1314              		.loc 1 58 0
 1315 013e A563     		str	r5, [r4, #56]
  60:math/pprz_geodetic_int.c **** }
 1316              		.loc 1 60 0
 1317 0140 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1318              	.L40:
 1319              		.align	2
 1320              	.L39:
 1321 0144 8096184B 		.word	1259902592
 1322              		.cfi_endproc
 1323              	.LFE0:
 1325              		.text
 1326              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 pprz_geodetic_int.c
     /tmp/ccTlr0d7.s:24     .text.enu_of_ecef_point_i:00000000 $t
     /tmp/ccTlr0d7.s:29     .text.enu_of_ecef_point_i:00000000 enu_of_ecef_point_i
     /tmp/ccTlr0d7.s:178    .text.ned_of_ecef_point_i:00000000 $t
     /tmp/ccTlr0d7.s:183    .text.ned_of_ecef_point_i:00000000 ned_of_ecef_point_i
     /tmp/ccTlr0d7.s:221    .text.enu_of_ecef_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:226    .text.enu_of_ecef_vect_i:00000000 enu_of_ecef_vect_i
     /tmp/ccTlr0d7.s:363    .text.ned_of_ecef_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:368    .text.ned_of_ecef_vect_i:00000000 ned_of_ecef_vect_i
     /tmp/ccTlr0d7.s:406    .text.ecef_of_enu_point_i:00000000 $t
     /tmp/ccTlr0d7.s:411    .text.ecef_of_enu_point_i:00000000 ecef_of_enu_point_i
     /tmp/ccTlr0d7.s:475    .text.ecef_of_ned_point_i:00000000 $t
     /tmp/ccTlr0d7.s:480    .text.ecef_of_ned_point_i:00000000 ecef_of_ned_point_i
     /tmp/ccTlr0d7.s:519    .text.ecef_of_enu_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:524    .text.ecef_of_enu_vect_i:00000000 ecef_of_enu_vect_i
     /tmp/ccTlr0d7.s:575    .text.ecef_of_ned_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:580    .text.ecef_of_ned_vect_i:00000000 ecef_of_ned_vect_i
     /tmp/ccTlr0d7.s:623    .text.ecef_of_lla_i:00000000 $t
     /tmp/ccTlr0d7.s:628    .text.ecef_of_lla_i:00000000 ecef_of_lla_i
     /tmp/ccTlr0d7.s:706    .text.ecef_of_lla_i:00000088 $d
     /tmp/ccTlr0d7.s:715    .text.ned_of_lla_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:720    .text.ned_of_lla_vect_i:00000000 ned_of_lla_vect_i
     /tmp/ccTlr0d7.s:764    .text.enu_of_lla_vect_i:00000000 $t
     /tmp/ccTlr0d7.s:769    .text.enu_of_lla_vect_i:00000000 enu_of_lla_vect_i
     /tmp/ccTlr0d7.s:813    .text.ned_of_lla_point_i:00000000 $t
     /tmp/ccTlr0d7.s:818    .text.ned_of_lla_point_i:00000000 ned_of_lla_point_i
     /tmp/ccTlr0d7.s:862    .text.enu_of_lla_point_i:00000000 $t
     /tmp/ccTlr0d7.s:867    .text.enu_of_lla_point_i:00000000 enu_of_lla_point_i
     /tmp/ccTlr0d7.s:911    .text.lla_of_ecef_i:00000000 $t
     /tmp/ccTlr0d7.s:916    .text.lla_of_ecef_i:00000000 lla_of_ecef_i
     /tmp/ccTlr0d7.s:996    .text.lla_of_ecef_i:00000090 $d
     /tmp/ccTlr0d7.s:1009   .text.ltp_def_from_lla_i:00000000 $t
     /tmp/ccTlr0d7.s:1014   .text.ltp_def_from_lla_i:00000000 ltp_def_from_lla_i
     /tmp/ccTlr0d7.s:1162   .text.ltp_def_from_lla_i:00000144 $d
     /tmp/ccTlr0d7.s:1167   .text.ltp_def_from_ecef_i:00000000 $t
     /tmp/ccTlr0d7.s:1172   .text.ltp_def_from_ecef_i:00000000 ltp_def_from_ecef_i
     /tmp/ccTlr0d7.s:1321   .text.ltp_def_from_ecef_i:00000144 $d
                     .debug_frame:00000010 $d
     /tmp/ccTlr0d7.s:714    .text.ecef_of_lla_i:0000009c $t
     /tmp/ccTlr0d7.s:1008   .text.lla_of_ecef_i:000000a4 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
ecef_of_lla_d
lla_of_ecef_d
rint
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2d
sinf
cosf
