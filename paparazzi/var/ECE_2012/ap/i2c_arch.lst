   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"i2c_arch.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.i2c_delay,"ax",%progbits
  24              		.align	1
  25              		.thumb
  26              		.thumb_func
  28              	i2c_delay:
  29              	.LFB24:
  30              		.file 1 "arch/stm32/mcu_periph/i2c_arch.c"
   1:arch/stm32/mcu_periph/i2c_arch.c **** #include "mcu_periph/i2c.h"
   2:arch/stm32/mcu_periph/i2c_arch.c **** 
   3:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/rcc.h>
   4:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/gpio.h>
   5:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/flash.h>
   6:arch/stm32/mcu_periph/i2c_arch.c **** #include <stm32/misc.h>
   7:arch/stm32/mcu_periph/i2c_arch.c **** 
   8:arch/stm32/mcu_periph/i2c_arch.c **** 
   9:arch/stm32/mcu_periph/i2c_arch.c **** static void start_transaction(struct i2c_periph* p);
  10:arch/stm32/mcu_periph/i2c_arch.c **** static inline void end_of_transaction(struct i2c_periph *p);
  11:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_hard_reset(struct i2c_periph *p);
  12:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_reset_init(struct i2c_periph *p);
  13:arch/stm32/mcu_periph/i2c_arch.c **** 
  14:arch/stm32/mcu_periph/i2c_arch.c **** #define I2C_BUSY 0x20
  15:arch/stm32/mcu_periph/i2c_arch.c **** 
  16:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef DEBUG_I2C
  17:arch/stm32/mcu_periph/i2c_arch.c **** #define SPURIOUS_INTERRUPT(_periph, _status, _event) { while(1); }
  18:arch/stm32/mcu_periph/i2c_arch.c **** #define OUT_OF_SYNC_STATE_MACHINE(_periph, _status, _event) { while(1); }
  19:arch/stm32/mcu_periph/i2c_arch.c **** #else
  20:arch/stm32/mcu_periph/i2c_arch.c **** //#define SPURIOUS_INTERRUPT(_periph, _status, _event) { periph->errors->unexpected_event_cnt++; ab
  21:arch/stm32/mcu_periph/i2c_arch.c **** #define SPURIOUS_INTERRUPT(_periph, _status, _event) { if (_status == I2CAddrWrSent) abort_and_rese
  22:arch/stm32/mcu_periph/i2c_arch.c **** #define OUT_OF_SYNC_STATE_MACHINE(_periph, _status, _event) { abort_and_reset(_periph);}
  23:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  24:arch/stm32/mcu_periph/i2c_arch.c **** 
  25:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C1
  26:arch/stm32/mcu_periph/i2c_arch.c **** static I2C_InitTypeDef  I2C1_InitStruct = {
  27:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Mode = I2C_Mode_I2C,
  28:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_DutyCycle = I2C_DutyCycle_2,
  29:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_OwnAddress1 = 0x00,
  30:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Ack = I2C_Ack_Enable,
  31:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit,
  32:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_ClockSpeed = 200000
  33:arch/stm32/mcu_periph/i2c_arch.c **** };
  34:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  35:arch/stm32/mcu_periph/i2c_arch.c **** 
  36:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C2
  37:arch/stm32/mcu_periph/i2c_arch.c **** static I2C_InitTypeDef  I2C2_InitStruct = {
  38:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Mode = I2C_Mode_I2C,
  39:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_DutyCycle = I2C_DutyCycle_2,
  40:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_OwnAddress1 = 0x00,
  41:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_Ack = I2C_Ack_Enable,
  42:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit,
  43:arch/stm32/mcu_periph/i2c_arch.c ****       .I2C_ClockSpeed = 300000
  44:arch/stm32/mcu_periph/i2c_arch.c **** };
  45:arch/stm32/mcu_periph/i2c_arch.c **** #endif
  46:arch/stm32/mcu_periph/i2c_arch.c **** 
  47:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_delay(void)
  48:arch/stm32/mcu_periph/i2c_arch.c **** {
  31              		.loc 1 48 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36 0000 82B0     		sub	sp, sp, #8
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              	.LBB16:
  49:arch/stm32/mcu_periph/i2c_arch.c ****     for (__IO int j = 0; j < 50; j++);
  40              		.loc 1 49 0
  41 0002 0023     		movs	r3, #0
  42 0004 01E0     		b	.L5
  43              	.LVL0:
  44              	.L3:
  45 0006 019B     		ldr	r3, [sp, #4]
  46 0008 0133     		adds	r3, r3, #1
  47              	.LVL1:
  48              	.L5:
  49 000a 0193     		str	r3, [sp, #4]
  50 000c 019B     		ldr	r3, [sp, #4]
  51              	.LVL2:
  52 000e 312B     		cmp	r3, #49
  53 0010 F9DD     		ble	.L3
  54              	.LBE16:
  50:arch/stm32/mcu_periph/i2c_arch.c **** }
  55              		.loc 1 50 0
  56 0012 02B0     		add	sp, sp, #8
  57 0014 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE24:
  61              		.section	.text.start_transaction,"ax",%progbits
  62              		.align	1
  63              		.thumb
  64              		.thumb_func
  66              	start_transaction:
  67              	.LFB45:
  51:arch/stm32/mcu_periph/i2c_arch.c **** 
  52:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_apply_config(struct i2c_periph *p)
  53:arch/stm32/mcu_periph/i2c_arch.c **** {
  54:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Init(p->reg_addr, p->init_struct);
  55:arch/stm32/mcu_periph/i2c_arch.c **** }
  56:arch/stm32/mcu_periph/i2c_arch.c **** 
  57:arch/stm32/mcu_periph/i2c_arch.c **** static inline void end_of_transaction(struct i2c_periph *p)
  58:arch/stm32/mcu_periph/i2c_arch.c **** {
  59:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
  60:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
  61:arch/stm32/mcu_periph/i2c_arch.c ****       p->trans_extract_idx = 0;
  62:arch/stm32/mcu_periph/i2c_arch.c ****     /* if we have no more transaction to process, stop here */
  63:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx == p->trans_insert_idx)
  64:arch/stm32/mcu_periph/i2c_arch.c ****       p->status = I2CIdle;
  65:arch/stm32/mcu_periph/i2c_arch.c ****     /* if not, start next transaction */
  66:arch/stm32/mcu_periph/i2c_arch.c ****     else
  67:arch/stm32/mcu_periph/i2c_arch.c ****       start_transaction(p);
  68:arch/stm32/mcu_periph/i2c_arch.c **** }
  69:arch/stm32/mcu_periph/i2c_arch.c **** 
  70:arch/stm32/mcu_periph/i2c_arch.c **** static inline void abort_and_reset(struct i2c_periph *p) {
  71:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
  72:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
  73:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
  74:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_hard_reset(p);
  75:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
  76:arch/stm32/mcu_periph/i2c_arch.c ****     end_of_transaction(p);
  77:arch/stm32/mcu_periph/i2c_arch.c **** }
  78:arch/stm32/mcu_periph/i2c_arch.c **** 
  79:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C2
  80:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_start_requested(struct i2c_periph *periph, struct i2c_transaction* tra
  81:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_wr_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
  82:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_sending_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
  83:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_stop_requested(struct i2c_periph *periph, struct i2c_transaction* tran
  84:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_rd_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
  85:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
  86:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_last_byte(struct i2c_periph *periph, struct i2c_transaction* t
  87:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_restart_requested(struct i2c_periph *periph, struct i2c_transaction* t
  88:arch/stm32/mcu_periph/i2c_arch.c **** 
  89:arch/stm32/mcu_periph/i2c_arch.c **** /*
  90:arch/stm32/mcu_periph/i2c_arch.c ****  * Start Requested
  91:arch/stm32/mcu_periph/i2c_arch.c ****  *
  92:arch/stm32/mcu_periph/i2c_arch.c ****  */
  93:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_start_requested(struct i2c_periph *periph, struct i2c_transaction* tra
  94:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
  95:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->type == I2CTransRx) {
  96:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
  97:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrRdSent;
  98:arch/stm32/mcu_periph/i2c_arch.c ****     }
  99:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 100:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Transmitter);
 101:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrWrSent;
 102:arch/stm32/mcu_periph/i2c_arch.c ****     }
 103:arch/stm32/mcu_periph/i2c_arch.c ****   }
 104:arch/stm32/mcu_periph/i2c_arch.c ****   //  else
 105:arch/stm32/mcu_periph/i2c_arch.c ****   //    SPURIOUS_INTERRUPT(periph, I2CStartRequested, event);
 106:arch/stm32/mcu_periph/i2c_arch.c ****   // FIXME: this one seems to get called all the time with mkk controllers
 107:arch/stm32/mcu_periph/i2c_arch.c **** }
 108:arch/stm32/mcu_periph/i2c_arch.c **** 
 109:arch/stm32/mcu_periph/i2c_arch.c **** /*
 110:arch/stm32/mcu_periph/i2c_arch.c ****  * Addr WR sent
 111:arch/stm32/mcu_periph/i2c_arch.c ****  *
 112:arch/stm32/mcu_periph/i2c_arch.c ****  */
 113:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_wr_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
 114:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && (event & I2C_FLAG_TRA)) {
 115:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SendData(periph->reg_addr, trans->buf[0]);
 116:arch/stm32/mcu_periph/i2c_arch.c ****     if (trans->len_w > 1) {
 117:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[1]);
 118:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 2;
 119:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 120:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CSendingByte;
 121:arch/stm32/mcu_periph/i2c_arch.c ****     }
 122:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 123:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 1;
 124:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 125:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 126:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;
 127:arch/stm32/mcu_periph/i2c_arch.c ****       }
 128:arch/stm32/mcu_periph/i2c_arch.c ****       else {
 129:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 130:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 131:arch/stm32/mcu_periph/i2c_arch.c ****       }
 132:arch/stm32/mcu_periph/i2c_arch.c ****     }
 133:arch/stm32/mcu_periph/i2c_arch.c ****   }
 134:arch/stm32/mcu_periph/i2c_arch.c ****   else {
 135:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CAddrWrSent, event);
 136:arch/stm32/mcu_periph/i2c_arch.c ****     // FIXME: this was where the code would break with mkk controllers on april 10 2011
 137:arch/stm32/mcu_periph/i2c_arch.c ****     // now have SPURIOUS_INTERRUPT call abort_and_reset
 138:arch/stm32/mcu_periph/i2c_arch.c ****   }
 139:arch/stm32/mcu_periph/i2c_arch.c **** }
 140:arch/stm32/mcu_periph/i2c_arch.c **** 
 141:arch/stm32/mcu_periph/i2c_arch.c **** /*
 142:arch/stm32/mcu_periph/i2c_arch.c ****  * Sending Byte
 143:arch/stm32/mcu_periph/i2c_arch.c ****  *
 144:arch/stm32/mcu_periph/i2c_arch.c ****  */
 145:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_sending_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
 146:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 147:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 148:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_w) {
 149:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[periph->idx_buf]);
 150:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 151:arch/stm32/mcu_periph/i2c_arch.c ****     }
 152:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 153:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, DISABLE);
 154:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 155:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 156:arch/stm32/mcu_periph/i2c_arch.c ****         /* Make sure that the STOP bit is cleared by Hardware */
 157:arch/stm32/mcu_periph/i2c_arch.c ****         static __IO uint8_t counter = 0;
 158:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 159:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 160:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 161:arch/stm32/mcu_periph/i2c_arch.c ****         }
 162:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;
 163:arch/stm32/mcu_periph/i2c_arch.c ****       }
 164:arch/stm32/mcu_periph/i2c_arch.c ****       else {
 165:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 166:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 167:arch/stm32/mcu_periph/i2c_arch.c ****       }
 168:arch/stm32/mcu_periph/i2c_arch.c ****     }
 169:arch/stm32/mcu_periph/i2c_arch.c ****   }
 170:arch/stm32/mcu_periph/i2c_arch.c ****   else
 171:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CSendingByte, event);
 172:arch/stm32/mcu_periph/i2c_arch.c **** }
 173:arch/stm32/mcu_periph/i2c_arch.c **** 
 174:arch/stm32/mcu_periph/i2c_arch.c **** /*
 175:arch/stm32/mcu_periph/i2c_arch.c ****  * Stop Requested
 176:arch/stm32/mcu_periph/i2c_arch.c ****  *
 177:arch/stm32/mcu_periph/i2c_arch.c ****  */
 178:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_stop_requested(struct i2c_periph *periph, struct i2c_transaction* tran
 179:arch/stm32/mcu_periph/i2c_arch.c ****   /* bummer.... */
 180:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 181:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 182:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 183:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 184:arch/stm32/mcu_periph/i2c_arch.c ****     }
 185:arch/stm32/mcu_periph/i2c_arch.c ****   }
 186:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(periph->reg_addr, I2C_IT_EVT|I2C_IT_BUF, DISABLE);  // should only need to disable e
 187:arch/stm32/mcu_periph/i2c_arch.c ****   trans->status = I2CTransSuccess;
 188:arch/stm32/mcu_periph/i2c_arch.c ****   end_of_transaction(periph);
 189:arch/stm32/mcu_periph/i2c_arch.c **** }
 190:arch/stm32/mcu_periph/i2c_arch.c **** 
 191:arch/stm32/mcu_periph/i2c_arch.c **** /*
 192:arch/stm32/mcu_periph/i2c_arch.c ****  * Addr RD sent
 193:arch/stm32/mcu_periph/i2c_arch.c ****  *
 194:arch/stm32/mcu_periph/i2c_arch.c ****  */
 195:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_addr_rd_sent(struct i2c_periph *periph, struct i2c_transaction* trans,
 196:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 197:arch/stm32/mcu_periph/i2c_arch.c **** 
 198:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 199:arch/stm32/mcu_periph/i2c_arch.c ****     periph->idx_buf = 0;
 200:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->len_r == 1) {                                         // If we're going to read only 
 201:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);             // make sure it's gonna be nack
 202:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and followed by a stop
 203:arch/stm32/mcu_periph/i2c_arch.c ****       /* Make sure that the STOP bit is cleared by Hardware */
 204:arch/stm32/mcu_periph/i2c_arch.c ****       static __IO uint8_t counter = 0;
 205:arch/stm32/mcu_periph/i2c_arch.c ****       while ((regs->CR1 & 0x200) == 0x200) {
 206:arch/stm32/mcu_periph/i2c_arch.c ****         counter++;
 207:arch/stm32/mcu_periph/i2c_arch.c ****         if (counter > 100) break;
 208:arch/stm32/mcu_periph/i2c_arch.c ****       }
 209:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingLastByte;                           // and remember we did
 210:arch/stm32/mcu_periph/i2c_arch.c ****     }
 211:arch/stm32/mcu_periph/i2c_arch.c ****     else {
 212:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, ENABLE);               // if it's more than one byte,
 213:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 214:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingByte;                               // and remember we did
 215:arch/stm32/mcu_periph/i2c_arch.c ****     }
 216:arch/stm32/mcu_periph/i2c_arch.c ****   }
 217:arch/stm32/mcu_periph/i2c_arch.c ****   else
 218:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CAddrRdSent, event);
 219:arch/stm32/mcu_periph/i2c_arch.c **** }
 220:arch/stm32/mcu_periph/i2c_arch.c **** 
 221:arch/stm32/mcu_periph/i2c_arch.c **** 
 222:arch/stm32/mcu_periph/i2c_arch.c **** /*
 223:arch/stm32/mcu_periph/i2c_arch.c ****  * Reading byte
 224:arch/stm32/mcu_periph/i2c_arch.c ****  *
 225:arch/stm32/mcu_periph/i2c_arch.c ****  */
 226:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_byte(struct i2c_periph *periph, struct i2c_transaction* trans,
 227:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 228:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 229:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 230:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 231:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 232:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 233:arch/stm32/mcu_periph/i2c_arch.c ****       if (periph->idx_buf >= trans->len_r-1) {                    // We're reading our last byte
 234:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);         // give them a nack once it's don
 235:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and follow with a stop
 236:arch/stm32/mcu_periph/i2c_arch.c ****         /* Make sure that the STOP bit is cleared by Hardware */
 237:arch/stm32/mcu_periph/i2c_arch.c ****         static __IO uint8_t counter = 0;
 238:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 239:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 240:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 241:arch/stm32/mcu_periph/i2c_arch.c ****         }
 242:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;                        // remember we already trigered t
 243:arch/stm32/mcu_periph/i2c_arch.c ****       }
 244:arch/stm32/mcu_periph/i2c_arch.c ****     } // else { something very wrong has happened }
 245:arch/stm32/mcu_periph/i2c_arch.c ****   }
 246:arch/stm32/mcu_periph/i2c_arch.c ****   else
 247:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CReadingByte, event);
 248:arch/stm32/mcu_periph/i2c_arch.c **** }
 249:arch/stm32/mcu_periph/i2c_arch.c **** 
 250:arch/stm32/mcu_periph/i2c_arch.c **** /*
 251:arch/stm32/mcu_periph/i2c_arch.c ****  * Reading last byte
 252:arch/stm32/mcu_periph/i2c_arch.c ****  *
 253:arch/stm32/mcu_periph/i2c_arch.c ****  */
 254:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_reading_last_byte(struct i2c_periph *periph, struct i2c_transaction* t
 255:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_BTF) {
 256:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 257:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 258:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 259:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 260:arch/stm32/mcu_periph/i2c_arch.c ****   }
 261:arch/stm32/mcu_periph/i2c_arch.c ****   else if (event & I2C_FLAG_RXNE) {       // should really be BTF ?
 262:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 263:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 264:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 265:arch/stm32/mcu_periph/i2c_arch.c ****   }
 266:arch/stm32/mcu_periph/i2c_arch.c ****   else
 267:arch/stm32/mcu_periph/i2c_arch.c ****     SPURIOUS_INTERRUPT(periph, I2CReadingLastByte, event);
 268:arch/stm32/mcu_periph/i2c_arch.c **** }
 269:arch/stm32/mcu_periph/i2c_arch.c **** 
 270:arch/stm32/mcu_periph/i2c_arch.c **** /*
 271:arch/stm32/mcu_periph/i2c_arch.c ****  * Restart requested
 272:arch/stm32/mcu_periph/i2c_arch.c ****  *
 273:arch/stm32/mcu_periph/i2c_arch.c ****  */
 274:arch/stm32/mcu_periph/i2c_arch.c **** static inline void on_status_restart_requested(struct i2c_periph *periph, struct i2c_transaction* t
 275:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 276:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 277:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CAddrRdSent;
 278:arch/stm32/mcu_periph/i2c_arch.c ****   }
 279:arch/stm32/mcu_periph/i2c_arch.c **** }
 280:arch/stm32/mcu_periph/i2c_arch.c **** 
 281:arch/stm32/mcu_periph/i2c_arch.c **** 
 282:arch/stm32/mcu_periph/i2c_arch.c **** 
 283:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_event(struct i2c_periph *p, uint32_t event)
 284:arch/stm32/mcu_periph/i2c_arch.c **** {
 285:arch/stm32/mcu_periph/i2c_arch.c ****   struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 286:arch/stm32/mcu_periph/i2c_arch.c ****   switch (p->status) {
 287:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CStartRequested:
 288:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_start_requested(p, trans, event);
 289:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 290:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CAddrWrSent:
 291:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_addr_wr_sent(p, trans, event);
 292:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 293:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CSendingByte:
 294:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_sending_byte(p, trans, event);
 295:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 296:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CStopRequested:
 297:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_stop_requested(p, trans, event);
 298:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 299:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CAddrRdSent:
 300:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_addr_rd_sent(p, trans, event);
 301:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 302:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CReadingByte:
 303:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_reading_byte(p, trans, event);
 304:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 305:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CReadingLastByte:
 306:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_reading_last_byte(p, trans, event);
 307:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 308:arch/stm32/mcu_periph/i2c_arch.c ****   case I2CRestartRequested:
 309:arch/stm32/mcu_periph/i2c_arch.c ****     on_status_restart_requested(p, trans, event);
 310:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 311:arch/stm32/mcu_periph/i2c_arch.c ****   default:
 312:arch/stm32/mcu_periph/i2c_arch.c ****     OUT_OF_SYNC_STATE_MACHINE(p, p->status, event);
 313:arch/stm32/mcu_periph/i2c_arch.c ****     break;
 314:arch/stm32/mcu_periph/i2c_arch.c ****   }
 315:arch/stm32/mcu_periph/i2c_arch.c **** }
 316:arch/stm32/mcu_periph/i2c_arch.c **** 
 317:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_error(struct i2c_periph *p)
 318:arch/stm32/mcu_periph/i2c_arch.c **** {
 319:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 320:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 321:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 322:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 323:arch/stm32/mcu_periph/i2c_arch.c ****   }
 324:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_BERR)) {     /* Misplaced Start or Stop condition */
 325:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 326:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 327:arch/stm32/mcu_periph/i2c_arch.c ****   }
 328:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_ARLO)) {     /* Arbitration lost */
 329:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 330:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 331:arch/stm32/mcu_periph/i2c_arch.c ****     //    I2C_AcknowledgeConfig(I2C2, DISABLE);
 332:arch/stm32/mcu_periph/i2c_arch.c ****     //    uint8_t dummy __attribute__ ((unused)) = I2C_ReceiveData(I2C2);
 333:arch/stm32/mcu_periph/i2c_arch.c ****     //    I2C_GenerateSTOP(I2C2, ENABLE);
 334:arch/stm32/mcu_periph/i2c_arch.c ****   }
 335:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_OVR)) {      /* Overrun/Underrun */
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 338:arch/stm32/mcu_periph/i2c_arch.c ****   }
 339:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_PECERR)) {   /* PEC Error in reception */
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 342:arch/stm32/mcu_periph/i2c_arch.c ****   }
 343:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_TIMEOUT)) {  /* Timeout or Tlow error */
 344:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 345:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 346:arch/stm32/mcu_periph/i2c_arch.c ****   }
 347:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_SMBALERT)) { /* SMBus alert */
 348:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 349:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 350:arch/stm32/mcu_periph/i2c_arch.c ****   }
 351:arch/stm32/mcu_periph/i2c_arch.c **** 
 352:arch/stm32/mcu_periph/i2c_arch.c ****   abort_and_reset(p);
 353:arch/stm32/mcu_periph/i2c_arch.c **** }
 354:arch/stm32/mcu_periph/i2c_arch.c **** 
 355:arch/stm32/mcu_periph/i2c_arch.c **** 
 356:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_hard_reset(struct i2c_periph *p)
 357:arch/stm32/mcu_periph/i2c_arch.c **** {
 358:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) p->reg_addr;
 359:arch/stm32/mcu_periph/i2c_arch.c **** 
 360:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
 361:arch/stm32/mcu_periph/i2c_arch.c **** 
 362:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 363:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 364:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 365:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 366:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 367:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 368:arch/stm32/mcu_periph/i2c_arch.c **** 
 369:arch/stm32/mcu_periph/i2c_arch.c ****   while(GPIO_ReadInputDataBit(GPIOB, p->sda_pin) == Bit_RESET) {
 370:arch/stm32/mcu_periph/i2c_arch.c ****     // Raise SCL, wait until SCL is high (in case of clock stretching)
 371:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 372:arch/stm32/mcu_periph/i2c_arch.c ****     while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET);
 373:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 374:arch/stm32/mcu_periph/i2c_arch.c **** 
 375:arch/stm32/mcu_periph/i2c_arch.c ****     // Lower SCL, wait
 376:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_ResetBits(GPIOB, p->scl_pin);
 377:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 378:arch/stm32/mcu_periph/i2c_arch.c **** 
 379:arch/stm32/mcu_periph/i2c_arch.c ****     // Raise SCL, wait
 380:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 381:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 382:arch/stm32/mcu_periph/i2c_arch.c ****   }
 383:arch/stm32/mcu_periph/i2c_arch.c **** 
 384:arch/stm32/mcu_periph/i2c_arch.c ****   // Generate a start condition followed by a stop condition
 385:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin);
 386:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 387:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 388:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 389:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 390:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 391:arch/stm32/mcu_periph/i2c_arch.c **** 
 392:arch/stm32/mcu_periph/i2c_arch.c ****   // Raise both SCL and SDA and wait for SCL high (in case of clock stretching)
 393:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 394:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET);
 395:arch/stm32/mcu_periph/i2c_arch.c **** 
 396:arch/stm32/mcu_periph/i2c_arch.c ****   // Wait for SDA to be high
 397:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->sda_pin) != Bit_SET);
 398:arch/stm32/mcu_periph/i2c_arch.c **** 
 399:arch/stm32/mcu_periph/i2c_arch.c ****   // SCL and SDA should be high at this point, bus should be free
 400:arch/stm32/mcu_periph/i2c_arch.c ****   // Return the GPIO pins to the alternate function
 401:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 402:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 403:arch/stm32/mcu_periph/i2c_arch.c **** 
 404:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
 405:arch/stm32/mcu_periph/i2c_arch.c **** 
 406:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_apply_config(p);
 407:arch/stm32/mcu_periph/i2c_arch.c **** 
 408:arch/stm32/mcu_periph/i2c_arch.c ****   if (regs->SR2 & I2C_BUSY) {
 409:arch/stm32/mcu_periph/i2c_arch.c ****     // Reset the I2C block
 410:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, ENABLE);
 411:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, DISABLE);
 412:arch/stm32/mcu_periph/i2c_arch.c ****   }
 413:arch/stm32/mcu_periph/i2c_arch.c **** }
 414:arch/stm32/mcu_periph/i2c_arch.c **** 
 415:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_reset_init(struct i2c_periph *p)
 416:arch/stm32/mcu_periph/i2c_arch.c **** {
 417:arch/stm32/mcu_periph/i2c_arch.c ****   // Reset bus and configure GPIO pins
 418:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_hard_reset(p);
 419:arch/stm32/mcu_periph/i2c_arch.c **** 
 420:arch/stm32/mcu_periph/i2c_arch.c ****   // enable peripheral
 421:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_Cmd(p->reg_addr, ENABLE);
 422:arch/stm32/mcu_periph/i2c_arch.c **** 
 423:arch/stm32/mcu_periph/i2c_arch.c ****   // enable error interrupts
 424:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 425:arch/stm32/mcu_periph/i2c_arch.c **** }
 426:arch/stm32/mcu_periph/i2c_arch.c **** #endif /* USE_I2C2 */
 427:arch/stm32/mcu_periph/i2c_arch.c **** 
 428:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C1
 429:arch/stm32/mcu_periph/i2c_arch.c **** 
 430:arch/stm32/mcu_periph/i2c_arch.c **** struct i2c_errors i2c1_errors;
 431:arch/stm32/mcu_periph/i2c_arch.c **** 
 432:arch/stm32/mcu_periph/i2c_arch.c **** #include "my_debug_servo.h"
 433:arch/stm32/mcu_periph/i2c_arch.c **** 
 434:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_hw_init(void) {
 435:arch/stm32/mcu_periph/i2c_arch.c **** 
 436:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.reg_addr = I2C1;
 437:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.init_struct = &I2C1_InitStruct;
 438:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.scl_pin = GPIO_Pin_6;
 439:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.sda_pin = GPIO_Pin_7;
 440:arch/stm32/mcu_periph/i2c_arch.c ****   i2c1.errors = &i2c1_errors;
 441:arch/stm32/mcu_periph/i2c_arch.c **** 
 442:arch/stm32/mcu_periph/i2c_arch.c ****   /* zeros error counter */
 443:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c1_errors);
 444:arch/stm32/mcu_periph/i2c_arch.c **** 
 445:arch/stm32/mcu_periph/i2c_arch.c ****   /* reset peripheral to default state ( sometimes not achieved on reset :(  ) */
 446:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C1);
 447:arch/stm32/mcu_periph/i2c_arch.c **** 
 448:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 449:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitTypeDef  NVIC_InitStructure;
 450:arch/stm32/mcu_periph/i2c_arch.c **** 
 451:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C1 event interrupt -------------------------------*/
 452:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C1_EV_IRQn;
 453:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 454:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 455:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 456:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 457:arch/stm32/mcu_periph/i2c_arch.c **** 
 458:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C1 err interrupt -------------------------------*/
 459:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C1_ER_IRQn;
 460:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 461:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 462:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 463:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 464:arch/stm32/mcu_periph/i2c_arch.c **** 
 465:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable peripheral clocks --------------------------------------------------*/
 466:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable I2C1 clock */
 467:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);
 468:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable GPIOB clock */
 469:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 470:arch/stm32/mcu_periph/i2c_arch.c **** 
 471:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure I2C1 pins: SCL and SDA ------------------------------------------*/
 472:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 473:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_StructInit(&GPIO_InitStructure);
 474:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
 475:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 476:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 477:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 478:arch/stm32/mcu_periph/i2c_arch.c **** 
 479:arch/stm32/mcu_periph/i2c_arch.c ****   /* I2C configuration ----------------------------------------------------------*/
 480:arch/stm32/mcu_periph/i2c_arch.c **** 
 481:arch/stm32/mcu_periph/i2c_arch.c **** 
 482:arch/stm32/mcu_periph/i2c_arch.c ****   /* Reset and initialize I2C HW */
 483:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_reset_init(&i2c1);
 484:arch/stm32/mcu_periph/i2c_arch.c **** 
 485:arch/stm32/mcu_periph/i2c_arch.c **** }
 486:arch/stm32/mcu_periph/i2c_arch.c **** 
 487:arch/stm32/mcu_periph/i2c_arch.c **** 
 488:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_ev_irq_handler(void) {
 489:arch/stm32/mcu_periph/i2c_arch.c **** 
 490:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C1);
 491:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_event(&i2c1, event);
 492:arch/stm32/mcu_periph/i2c_arch.c **** 
 493:arch/stm32/mcu_periph/i2c_arch.c **** }
 494:arch/stm32/mcu_periph/i2c_arch.c **** 
 495:arch/stm32/mcu_periph/i2c_arch.c **** 
 496:arch/stm32/mcu_periph/i2c_arch.c **** void i2c1_er_irq_handler(void) {
 497:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_error(&i2c1);
 498:arch/stm32/mcu_periph/i2c_arch.c **** }
 499:arch/stm32/mcu_periph/i2c_arch.c **** 
 500:arch/stm32/mcu_periph/i2c_arch.c **** #endif /* USE_I2C1 */
 501:arch/stm32/mcu_periph/i2c_arch.c **** 
 502:arch/stm32/mcu_periph/i2c_arch.c **** 
 503:arch/stm32/mcu_periph/i2c_arch.c **** 
 504:arch/stm32/mcu_periph/i2c_arch.c **** 
 505:arch/stm32/mcu_periph/i2c_arch.c **** 
 506:arch/stm32/mcu_periph/i2c_arch.c **** #ifdef USE_I2C2
 507:arch/stm32/mcu_periph/i2c_arch.c **** 
 508:arch/stm32/mcu_periph/i2c_arch.c **** //  dec      hex
 509:arch/stm32/mcu_periph/i2c_arch.c **** //  196609   30001        BUSY  MSL |                 SB
 510:arch/stm32/mcu_periph/i2c_arch.c **** //  458882   70082    TRA BUSY  MSL | TXE       ADDR
 511:arch/stm32/mcu_periph/i2c_arch.c **** //  458884   70084    TRA BUSY  MSL | TXE  BTF
 512:arch/stm32/mcu_periph/i2c_arch.c **** //  196609   30001        BUSY  MSL |                 SB
 513:arch/stm32/mcu_periph/i2c_arch.c **** //  196610   30002        BUSY  MSL |           ADDR
 514:arch/stm32/mcu_periph/i2c_arch.c **** //
 515:arch/stm32/mcu_periph/i2c_arch.c **** 
 516:arch/stm32/mcu_periph/i2c_arch.c **** 
 517:arch/stm32/mcu_periph/i2c_arch.c **** struct i2c_errors i2c2_errors;
 518:arch/stm32/mcu_periph/i2c_arch.c **** 
 519:arch/stm32/mcu_periph/i2c_arch.c **** #include "my_debug_servo.h"
 520:arch/stm32/mcu_periph/i2c_arch.c **** 
 521:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_hw_init(void) {
 522:arch/stm32/mcu_periph/i2c_arch.c **** 
 523:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 524:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 525:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.scl_pin = GPIO_Pin_10;
 526:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.sda_pin = GPIO_Pin_11;
 527:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 528:arch/stm32/mcu_periph/i2c_arch.c **** 
 529:arch/stm32/mcu_periph/i2c_arch.c ****   /* zeros error counter */
 530:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 531:arch/stm32/mcu_periph/i2c_arch.c **** 
 532:arch/stm32/mcu_periph/i2c_arch.c ****   /* reset peripheral to default state ( sometimes not achieved on reset :(  ) */
 533:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C2);
 534:arch/stm32/mcu_periph/i2c_arch.c **** 
 535:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 536:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitTypeDef  NVIC_InitStructure;
 537:arch/stm32/mcu_periph/i2c_arch.c **** 
 538:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C2 event interrupt --------------------------------*/
 539:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 540:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 541:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 542:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 543:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 544:arch/stm32/mcu_periph/i2c_arch.c **** 
 545:arch/stm32/mcu_periph/i2c_arch.c ****   /* Configure and enable I2C2 err interrupt ----------------------------------*/
 546:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 547:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 548:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 549:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 550:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 551:arch/stm32/mcu_periph/i2c_arch.c **** 
 552:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable peripheral clocks -------------------------------------------------*/
 553:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable I2C2 clock */
 554:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2, ENABLE);
 555:arch/stm32/mcu_periph/i2c_arch.c ****   /* Enable GPIOB clock */
 556:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 557:arch/stm32/mcu_periph/i2c_arch.c **** 
 558:arch/stm32/mcu_periph/i2c_arch.c ****   // Reset and initialize I2C HW
 559:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_reset_init(&i2c2);
 560:arch/stm32/mcu_periph/i2c_arch.c **** 
 561:arch/stm32/mcu_periph/i2c_arch.c **** }
 562:arch/stm32/mcu_periph/i2c_arch.c **** 
 563:arch/stm32/mcu_periph/i2c_arch.c **** 
 564:arch/stm32/mcu_periph/i2c_arch.c **** 
 565:arch/stm32/mcu_periph/i2c_arch.c **** 
 566:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_ev_irq_handler(void) {
 567:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C2);
 568:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_event(&i2c2, event);
 569:arch/stm32/mcu_periph/i2c_arch.c **** }
 570:arch/stm32/mcu_periph/i2c_arch.c **** 
 571:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_er_irq_handler(void) {
 572:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_error(&i2c2);
 573:arch/stm32/mcu_periph/i2c_arch.c **** 
 574:arch/stm32/mcu_periph/i2c_arch.c **** }
 575:arch/stm32/mcu_periph/i2c_arch.c **** 
 576:arch/stm32/mcu_periph/i2c_arch.c **** #endif /* USE_I2C2 */
 577:arch/stm32/mcu_periph/i2c_arch.c **** 
 578:arch/stm32/mcu_periph/i2c_arch.c **** 
 579:arch/stm32/mcu_periph/i2c_arch.c **** 
 580:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_idle(struct i2c_periph* p)
 581:arch/stm32/mcu_periph/i2c_arch.c **** {
 582:arch/stm32/mcu_periph/i2c_arch.c ****   return !I2C_GetFlagStatus(p->reg_addr, I2C_FLAG_BUSY);
 583:arch/stm32/mcu_periph/i2c_arch.c **** }
 584:arch/stm32/mcu_periph/i2c_arch.c **** 
 585:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_submit(struct i2c_periph* p, struct i2c_transaction* t) {
 586:arch/stm32/mcu_periph/i2c_arch.c **** 
 587:arch/stm32/mcu_periph/i2c_arch.c ****   uint8_t temp;
 588:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 589:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp >= I2C_TRANSACTION_QUEUE_LEN) temp = 0;
 590:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 591:arch/stm32/mcu_periph/i2c_arch.c ****     return FALSE;                          // queue full
 592:arch/stm32/mcu_periph/i2c_arch.c **** 
 593:arch/stm32/mcu_periph/i2c_arch.c ****   t->status = I2CTransPending;
 594:arch/stm32/mcu_periph/i2c_arch.c **** 
 595:arch/stm32/mcu_periph/i2c_arch.c **** 
 596:arch/stm32/mcu_periph/i2c_arch.c ****   __disable_irq();
 597:arch/stm32/mcu_periph/i2c_arch.c ****   /* put transacation in queue */
 598:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans[p->trans_insert_idx] = t;
 599:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans_insert_idx = temp;
 600:arch/stm32/mcu_periph/i2c_arch.c **** 
 601:arch/stm32/mcu_periph/i2c_arch.c ****   /* if peripheral is idle, start the transaction */
 602:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 603:arch/stm32/mcu_periph/i2c_arch.c ****     start_transaction(p);
 604:arch/stm32/mcu_periph/i2c_arch.c ****   /* else it will be started by the interrupt handler when the previous transactions completes */
 605:arch/stm32/mcu_periph/i2c_arch.c ****   __enable_irq();
 606:arch/stm32/mcu_periph/i2c_arch.c **** 
 607:arch/stm32/mcu_periph/i2c_arch.c ****   return TRUE;
 608:arch/stm32/mcu_periph/i2c_arch.c **** }
 609:arch/stm32/mcu_periph/i2c_arch.c **** 
 610:arch/stm32/mcu_periph/i2c_arch.c **** 
 611:arch/stm32/mcu_periph/i2c_arch.c **** static void start_transaction(struct i2c_periph* p) {
  68              		.loc 1 611 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL3:
  73 0000 70B5     		push	{r4, r5, r6, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 16
 612:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
  76              		.loc 1 612 0
  77 0002 0023     		movs	r3, #0
 613:arch/stm32/mcu_periph/i2c_arch.c ****   p->status = I2CStartRequested;
  78              		.loc 1 613 0
  79 0004 0125     		movs	r5, #1
  80              		.cfi_offset 14, -4
  81              		.cfi_offset 6, -8
  82              		.cfi_offset 5, -12
  83              		.cfi_offset 4, -16
 612:arch/stm32/mcu_periph/i2c_arch.c ****   p->idx_buf = 0;
  84              		.loc 1 612 0
  85 0006 80F82330 		strb	r3, [r0, #35]
 611:arch/stm32/mcu_periph/i2c_arch.c **** static void start_transaction(struct i2c_periph* p) {
  86              		.loc 1 611 0
  87 000a 0446     		mov	r4, r0
  88              		.loc 1 613 0
  89 000c 80F82250 		strb	r5, [r0, #34]
 614:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_EVT, ENABLE);
  90              		.loc 1 614 0
  91 0010 4FF40071 		mov	r1, #512
  92 0014 406A     		ldr	r0, [r0, #36]
  93              	.LVL4:
  94 0016 2A46     		mov	r2, r5
  95 0018 FFF7FEFF 		bl	I2C_ITConfig
 615:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_GenerateSTART(p->reg_addr, ENABLE);
  96              		.loc 1 615 0
  97 001c 606A     		ldr	r0, [r4, #36]
  98 001e 2946     		mov	r1, r5
 616:arch/stm32/mcu_periph/i2c_arch.c **** }
  99              		.loc 1 616 0
 100 0020 BDE87040 		pop	{r4, r5, r6, lr}
 615:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_GenerateSTART(p->reg_addr, ENABLE);
 101              		.loc 1 615 0
 102 0024 FFF7FEBF 		b	I2C_GenerateSTART
 103              		.cfi_endproc
 104              	.LFE45:
 106              		.section	.text.i2c_submit,"ax",%progbits
 107              		.align	1
 108              		.global	i2c_submit
 109              		.thumb
 110              		.thumb_func
 112              	i2c_submit:
 113              	.LFB44:
 585:arch/stm32/mcu_periph/i2c_arch.c **** bool_t i2c_submit(struct i2c_periph* p, struct i2c_transaction* t) {
 114              		.loc 1 585 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL5:
 119 0000 10B5     		push	{r4, lr}
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 8
 588:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 122              		.loc 1 588 0
 123 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 590:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 124              		.loc 1 590 0
 125 0006 90F82140 		ldrb	r4, [r0, #33]	@ zero_extendqisi2
 126              		.cfi_offset 14, -4
 127              		.cfi_offset 4, -8
 588:arch/stm32/mcu_periph/i2c_arch.c ****   temp = p->trans_insert_idx + 1;
 128              		.loc 1 588 0
 129 000a 0CF10102 		add	r2, ip, #1
 130 000e D2B2     		uxtb	r2, r2
 131              	.LVL6:
 589:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp >= I2C_TRANSACTION_QUEUE_LEN) temp = 0;
 132              		.loc 1 589 0
 133 0010 072A     		cmp	r2, #7
 134 0012 88BF     		it	hi
 135 0014 0022     		movhi	r2, #0
 136              	.LVL7:
 590:arch/stm32/mcu_periph/i2c_arch.c ****   if (temp == p->trans_extract_idx)
 137              		.loc 1 590 0
 138 0016 9442     		cmp	r4, r2
 139 0018 01D1     		bne	.L11
 140 001a 0020     		movs	r0, #0
 141              	.LVL8:
 142 001c 10BD     		pop	{r4, pc}
 143              	.LVL9:
 144              	.L11:
 593:arch/stm32/mcu_periph/i2c_arch.c ****   t->status = I2CTransPending;
 145              		.loc 1 593 0
 146 001e 0024     		movs	r4, #0
 147 0020 81F82540 		strb	r4, [r1, #37]
 148              	.LBB21:
 149              	.LBB22:
 150              		.file 2 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include
   1:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /******************************************************************************
   2:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @file:    core_cm3.h
   3:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @purpose: CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @version: V1.10
   5:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @date:    24. Feb. 2009
   6:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *----------------------------------------------------------------------------
   7:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
   8:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  10:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-Mx 
  11:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  12:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  13:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  14:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  15:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  16:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  17:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  18:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  19:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  20:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
  21:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  22:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  23:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  24:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  25:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  26:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  27:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  28:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  29:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  30:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  31:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  32:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  33:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  34:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  35:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
  36:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  Lint configuration \n
  37:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  ----------------------- \n
  38:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  39:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  The following Lint messages will be suppressed and not shown: \n
  40:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *  \n
  41:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 10: --- \n
  42:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    register uint32_t __regBasePri         __asm("basepri"); \n
  43:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Error 10: Expecting ';' \n
  44:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  45:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 530: --- \n
  46:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    return(__regBasePri); \n
  47:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 530: Symbol '__regBasePri' (line 264) not initialized \n
  48:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  49:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 550: --- \n
  50:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *      __regBasePri = (basePri & 0x1ff); \n
  51:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    } \n
  52:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 550: Symbol '__regBasePri' (line 271) not accessed \n
  53:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  54:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 754: --- \n
  55:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    uint32_t RESERVED0[24]; \n
  56:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h) 
  57:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  58:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 750: --- \n
  59:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    #define __CM3_CORE_H__ \n
  60:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced \n
  61:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  62:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 528: --- \n
  63:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  64:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not referen
  65:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *     \n
  66:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    --- Error 751: --- \n
  67:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    } InterruptType_Type; \n
  68:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced \n
  69:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * \n
  70:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * \n
  71:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *    Note:  To re-enable a Message, insert a space before 'lint' * \n
  72:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
  73:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
  74:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  75:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -save */
  76:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e10  */
  77:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e530 */
  78:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e550 */
  79:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e754 */
  80:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e750 */
  81:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e528 */
  82:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*lint -e751 */
  83:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  84:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  85:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  86:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  87:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  88:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  89:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
  90:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  91:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  92:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  93:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  94:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
  95:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  96:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  97:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  98:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
  99:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 100:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * IO definitions
 101:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 102:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 103:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 104:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 105:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __I     volatile const            /*!< defines 'read only' permissions      */
 106:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 107:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 108:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 109:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 110:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 111:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*******************************************************************************
 112:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *                 Register Abstraction
 113:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
 114:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 115:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 116:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* System Reset */
 117:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_VECTRESET              0         /*!< Vector Reset Bit             */
 118:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_SYSRESETREQ            2         /*!< System Reset Request         */
 119:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_AIRCR_VECTKEY    (0x5FA << 16)   /*!< AIRCR Key for write access   */
 120:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_AIRCR_ENDIANESS        15        /*!< Endianess                    */
 121:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 122:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Core Debug */
 123:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA (1 << 24)      /*!< DEMCR TRCENA enable          */
 124:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA              1         /*!< ITM enable                   */
 125:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 126:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 127:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 128:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 129:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for Nested Vectored Interrupt Controller (NVIC) */
 130:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 131:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 132:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Interrupt Set Enable Register            */
 133:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 134:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Interrupt Clear Enable Register          */
 135:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 136:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Interrupt Set Pending Register           */
 137:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 138:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Interrupt Clear Pending Register         */
 139:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 140:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Interrupt Active bit Register            */
 141:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 142:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Interrupt Priority Register, 8Bit wide   */
 143:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 144:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Software Trigger Interrupt Register      */
 145:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }  NVIC_Type;
 146:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 147:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 148:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for System Control Block */
 149:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 150:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 151:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< CPU ID Base Register                            
 152:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Interrupt Control State Register                
 153:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Vector Table Offset Register                    
 154:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Application Interrupt / Reset Control Register  
 155:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< System Control Register                         
 156:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Configuration Control Register                  
 157:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< System Handlers Priority Registers (4-7, 8-11, 1
 158:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< System Handler Control and State Register       
 159:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Configurable Fault Status Register              
 160:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Hard Fault Status Register                      
 161:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Debug Fault Status Register                     
 162:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Mem Manage Address Register                     
 163:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Bus Fault Address Register                      
 164:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Auxiliary Fault Status Register                 
 165:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Processor Feature Register                      
 166:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Debug Feature Register                          
 167:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Auxiliary Feature Register                      
 168:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Memory Model Feature Register                   
 169:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< ISA Feature Register                            
 170:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } SCB_Type;
 171:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 172:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 173:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping struct for SysTick */
 174:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 175:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 176:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< SysTick Control and Status Register */
 177:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< SysTick Reload Value Register       */
 178:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< SysTick Current Value Register      */
 179:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< SysTick Calibration Register        */
 180:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } SysTick_Type;
 181:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 182:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 183:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapping structur for ITM */
 184:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 185:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 186:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  union  
 187:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   {
 188:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< ITM Stimulus Port 8-bit               */
 189:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< ITM Stimulus Port 16-bit              */
 190:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< ITM Stimulus Port 32-bit              */
 191:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< ITM Stimulus Port Registers           */
 192:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 193:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< ITM Trace Enable Register             */
 194:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 195:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< ITM Trace Privilege Register          */
 196:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 197:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< ITM Trace Control Register            */
 198:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 199:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< ITM Integration Write Register        */
 200:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< ITM Integration Read Register         */
 201:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< ITM Integration Mode Control Register */
 202:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 203:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< ITM Lock Access Register              */
 204:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< ITM Lock Status Register              */
 205:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
 206:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< ITM Product ID Registers              */
 207:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID5;
 208:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID6;
 209:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID7;
 210:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID0;
 211:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID1;
 212:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID2;
 213:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t PID3;
 214:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID0;
 215:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID1;
 216:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID2;
 217:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t CID3;
 218:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } ITM_Type;
 219:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 220:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 221:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* memory mapped struct for Interrupt Type */
 222:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 223:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 224:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 225:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Interrupt Control Type Register  */
 226:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 227:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Auxiliary Control Register       */
 228:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #else
 229:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 230:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 231:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } InterruptType_Type;
 232:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 233:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 234:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Memory Protection Unit */
 235:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 236:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 237:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 238:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< MPU Type Register                               
 239:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< MPU Control Register                            
 240:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< MPU Region RNRber Register                      
 241:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< MPU Region Base Address Register                
 242:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< MPU Region Attribute and Size Register          
 243:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< MPU Alias 1 Region Base Address Register        
 244:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< MPU Alias 1 Region Attribute and Size Register  
 245:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< MPU Alias 2 Region Base Address Register        
 246:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< MPU Alias 2 Region Attribute and Size Register  
 247:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< MPU Alias 3 Region Base Address Register        
 248:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< MPU Alias 3 Region Attribute and Size Register  
 249:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } MPU_Type;
 250:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 251:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 252:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 253:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Core Debug Register */
 254:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** typedef struct
 255:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 256:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Debug Halting Control and Status Register       
 257:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Debug Core Register Selector Register           
 258:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Debug Core Register Data Register               
 259:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Debug Exception and Monitor Control Register    
 260:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** } CoreDebug_Type;
 261:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 262:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 263:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 264:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 265:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 266:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 267:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 268:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 269:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 270:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 271:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 272:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 273:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 274:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 275:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 276:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 277:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 278:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 279:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 280:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 281:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 282:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 283:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 284:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 285:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*******************************************************************************
 286:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 287:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  ******************************************************************************/
 288:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 289:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 290:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 291:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 292:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 293:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 294:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 295:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 296:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 297:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __NOP           __no_operation                              /*!< no operation intrinsic i
 298:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 299:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 300:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                        /*!< asm keyword for GNU Co
 301:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 302:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 303:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif
 304:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 305:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 306:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 307:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 308:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 309:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 310:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 311:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 312:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 313:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 314:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __NOP                             __nop
 315:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __WFI                             __wfi
 316:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __WFE                             __wfe
 317:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __SEV                             __sev
 318:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 319:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
 320:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 321:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __REV                             __rev
 322:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 323:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 324:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 325:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 326:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 327:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 328:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 329:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 330:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 331:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 332:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 333:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic void __enable_irq();     */
 334:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   /* intrinsic void __disable_irq();    */
 335:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 336:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 337:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 338:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 339:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 340:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 341:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t ProcessStackPointer
 342:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 343:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 344:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 345:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 346:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 347:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 348:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 349:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 350:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Process Stack Pointer
 351:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 352:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 353:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 354:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 355:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 356:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 357:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 358:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 359:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 360:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 361:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 362:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Main Stack Pointer
 363:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 364:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 365:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Cortex processor register
 366:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 367:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 368:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 369:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 370:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 371:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 372:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Main Stack Pointer
 373:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 374:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 375:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 376:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 377:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 378:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 379:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 380:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 381:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 382:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 383:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to reverse
 384:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 385:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 386:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 387:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 388:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 389:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 390:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /*
 391:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 392:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 393:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  int16_t value to reverse
 394:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return int32_t reversed value
 395:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 396:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 397:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 398:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 399:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 400:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 401:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 402:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 403:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 404:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 405:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 406:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 407:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 408:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 409:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 410:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 411:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __CLREX(void);
 412:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 413:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 414:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 415:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 416:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 417:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t BasePriority
 418:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 419:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the base priority register
 420:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 421:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 422:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 423:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 424:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 425:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 426:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t BasePriority
 427:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 428:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 429:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the base priority register
 430:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 431:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 432:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 433:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 434:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 435:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 436:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 437:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t PriMask
 438:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 439:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the state of the priority mask bit from the priority mask
 440:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * register
 441:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 442:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 443:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 444:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 445:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 446:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 447:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t PriMask
 448:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 449:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 450:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 451:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 452:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 453:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 454:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 455:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 456:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 457:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 458:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t FaultMask
 459:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 460:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 461:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 462:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 463:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 464:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 465:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 466:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 467:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t faultMask value
 468:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 469:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 470:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the fault mask register
 471:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 472:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 473:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 474:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 475:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 476:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * 
 477:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 478:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Control value
 479:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 480:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the control register
 481:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 482:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 483:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 484:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 485:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 486:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 487:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Control value
 488:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 489:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 490:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the control register
 491:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 492:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 493:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 494:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 495:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 496:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 497:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 498:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 499:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 500:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 501:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 502:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 503:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 504:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 505:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 506:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 507:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 508:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 509:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 510:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 511:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t BasePriority
 512:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 513:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the base priority register
 514:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 515:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 516:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 517:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 518:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regBasePri);
 519:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 520:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 521:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 522:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 523:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 524:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t BasePriority
 525:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 526:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 527:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the base priority register
 528:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 529:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 530:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 531:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 532:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0x1ff);
 533:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 534:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 535:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 536:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 537:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 538:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 539:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t PriMask
 540:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 541:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the state of the priority mask bit from the priority mask
 542:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * register
 543:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 544:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 545:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 546:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 547:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regPriMask);
 548:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 549:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 550:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 551:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 552:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 553:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t PriMask
 554:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 555:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 556:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 557:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 558:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 559:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 560:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 561:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 562:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 563:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 564:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 565:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 566:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 567:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 568:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t FaultMask
 569:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 570:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 571:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 572:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
 573:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 574:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 575:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regFaultMask);
 576:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 577:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 578:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 579:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 580:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 581:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t faultMask value
 582:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 583:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 584:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the fault mask register
 585:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 586:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
 587:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 588:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 589:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
 590:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 591:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 592:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 593:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 594:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * 
 595:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 596:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Control value
 597:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 598:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the content of the control register
 599:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 600:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
 601:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 602:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
 603:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   return(__regControl);
 604:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 605:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 606:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 607:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 608:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 609:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Control value
 610:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 611:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 612:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Set the control register
 613:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 614:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
 615:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** {
 616:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
 617:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****   __regControl = control;
 618:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** }
 619:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 620:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
 621:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 622:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 623:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 624:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
 625:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
 626:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 627:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
 628:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
 629:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 630:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
 631:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
 632:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 633:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
 634:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
 635:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
 636:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
 637:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 638:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 639:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 640:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 641:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 642:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t ProcessStackPointer
 643:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 644:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 645:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 646:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 647:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 648:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 649:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 650:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 651:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Process Stack Pointer
 652:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 653:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 654:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 655:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 656:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 657:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 658:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 659:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 660:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 661:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 662:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  none
 663:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t Main Stack Pointer
 664:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 665:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 666:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Cortex processor register
 667:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 668:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 669:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 670:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 671:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 672:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 673:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t Main Stack Pointer
 674:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return none
 675:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 676:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 677:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 678:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 679:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 680:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 681:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 682:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 683:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 684:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to reverse
 685:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 686:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 687:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 688:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 689:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 690:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 691:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 692:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
 693:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 694:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t value to reverse
 695:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t reversed value
 696:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 697:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Reverse bit order of value
 698:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 699:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
 700:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 701:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 702:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 703:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 704:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t* address
 705:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint8_t value of (*address)
 706:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 707:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 708:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 709:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
 710:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 711:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 712:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 713:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 714:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t* address
 715:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint16_t value of (*address)
 716:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 717:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 718:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 719:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
 720:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 721:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 722:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  LDR Exclusive
 723:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 724:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t* address
 725:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t value of (*address)
 726:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 727:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive LDR command
 728:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 729:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
 730:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 731:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 732:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 733:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 734:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t *address
 735:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint8_t value to store
 736:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 737:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 738:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 739:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 740:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
 741:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 742:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 743:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 744:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 745:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t *address
 746:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint16_t value to store
 747:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 748:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 749:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 750:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 751:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
 752:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 753:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /**
 754:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @brief  STR Exclusive
 755:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 756:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t *address
 757:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @param  uint32_t value to store
 758:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * @return uint32_t successful / failed
 759:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  *
 760:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  * Exclusive STR command
 761:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h ****  */
 762:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
 763:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 764:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 765:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                    */
 766:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                    */
 767:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                                  */
 768:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                                  */
 769:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                          */
 770:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                        */
 771:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long);     */
 772:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);                  */
 773:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 774:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 775:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 776:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
 777:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** /* GNU gcc specific functions */
 778:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** 
 779:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
 780:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 781:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 151              		.loc 2 781 0
 152              	@ 781 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cm
 153 0024 72B6     		cpsid i
 154              	@ 0 "" 2
 155              		.thumb
 156              	.LBE22:
 157              	.LBE21:
 602:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 158              		.loc 1 602 0
 159 0026 90F82230 		ldrb	r3, [r0, #34]	@ zero_extendqisi2
 598:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans[p->trans_insert_idx] = t;
 160              		.loc 1 598 0
 161 002a 40F82C10 		str	r1, [r0, ip, lsl #2]
 599:arch/stm32/mcu_periph/i2c_arch.c ****   p->trans_insert_idx = temp;
 162              		.loc 1 599 0
 163 002e 80F82020 		strb	r2, [r0, #32]
 602:arch/stm32/mcu_periph/i2c_arch.c ****   if (p->status == I2CIdle)
 164              		.loc 1 602 0
 165 0032 0BB9     		cbnz	r3, .L13
 603:arch/stm32/mcu_periph/i2c_arch.c ****     start_transaction(p);
 166              		.loc 1 603 0
 167 0034 FFF7FEFF 		bl	start_transaction
 168              	.LVL10:
 169              	.L13:
 170              	.LBB23:
 171              	.LBB24:
 780:/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cmsis/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
 172              		.loc 2 780 0
 173              	@ 780 "/opt/paparazzi/arm-multilib/lib/gcc/arm-none-eabi/4.4.5/../../../../arm-none-eabi/include/cm
 174 0038 62B6     		cpsie i
 175              	@ 0 "" 2
 176              		.thumb
 177 003a 0120     		movs	r0, #1
 178              	.LVL11:
 179              	.LBE24:
 180              	.LBE23:
 608:arch/stm32/mcu_periph/i2c_arch.c **** }
 181              		.loc 1 608 0
 182 003c 10BD     		pop	{r4, pc}
 183              		.cfi_endproc
 184              	.LFE44:
 186              		.section	.text.i2c_idle,"ax",%progbits
 187              		.align	1
 188              		.global	i2c_idle
 189              		.thumb
 190              		.thumb_func
 192              	i2c_idle:
 193              	.LFB43:
 581:arch/stm32/mcu_periph/i2c_arch.c **** {
 194              		.loc 1 581 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL12:
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 8
 582:arch/stm32/mcu_periph/i2c_arch.c ****   return !I2C_GetFlagStatus(p->reg_addr, I2C_FLAG_BUSY);
 202              		.loc 1 582 0
 203 0002 4FF40031 		mov	r1, #131072
 204 0006 406A     		ldr	r0, [r0, #36]
 205              	.LVL13:
 206              		.cfi_offset 14, -4
 207              		.cfi_offset 3, -8
 208 0008 FFF7FEFF 		bl	I2C_GetFlagStatus
 583:arch/stm32/mcu_periph/i2c_arch.c **** }
 209              		.loc 1 583 0
 210 000c D0F10100 		rsbs	r0, r0, #1
 211 0010 38BF     		it	cc
 212 0012 0020     		movcc	r0, #0
 213 0014 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE43:
 217              		.section	.text.T.28,"ax",%progbits
 218              		.align	1
 219              		.thumb
 220              		.thumb_func
 222              	T.28:
 223              	.LFB48:
  57:arch/stm32/mcu_periph/i2c_arch.c **** static inline void end_of_transaction(struct i2c_periph *p)
 224              		.loc 1 57 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  59:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 229              		.loc 1 59 0
 230 0000 0C4B     		ldr	r3, .L22
 231 0002 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2
 232 0006 0132     		adds	r2, r2, #1
 233 0008 D2B2     		uxtb	r2, r2
  60:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 234              		.loc 1 60 0
 235 000a 072A     		cmp	r2, #7
  59:arch/stm32/mcu_periph/i2c_arch.c ****     p->trans_extract_idx++;
 236              		.loc 1 59 0
 237 000c 83F82120 		strb	r2, [r3, #33]
  60:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx >= I2C_TRANSACTION_QUEUE_LEN)
 238              		.loc 1 60 0
 239 0010 02D9     		bls	.L18
  61:arch/stm32/mcu_periph/i2c_arch.c ****       p->trans_extract_idx = 0;
 240              		.loc 1 61 0
 241 0012 0022     		movs	r2, #0
 242 0014 83F82120 		strb	r2, [r3, #33]
 243              	.L18:
  63:arch/stm32/mcu_periph/i2c_arch.c ****     if (p->trans_extract_idx == p->trans_insert_idx)
 244              		.loc 1 63 0
 245 0018 0648     		ldr	r0, .L22
 246 001a 90F82120 		ldrb	r2, [r0, #33]	@ zero_extendqisi2
 247 001e 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 248 0022 9A42     		cmp	r2, r3
 249 0024 03D1     		bne	.L19
  64:arch/stm32/mcu_periph/i2c_arch.c ****       p->status = I2CIdle;
 250              		.loc 1 64 0
 251 0026 0023     		movs	r3, #0
 252 0028 80F82230 		strb	r3, [r0, #34]
  68:arch/stm32/mcu_periph/i2c_arch.c **** }
 253              		.loc 1 68 0
 254 002c 7047     		bx	lr
 255              	.L19:
  67:arch/stm32/mcu_periph/i2c_arch.c ****       start_transaction(p);
 256              		.loc 1 67 0
 257 002e FFF7FEBF 		b	start_transaction
 258              	.L23:
 259 0032 00BF     		.align	2
 260              	.L22:
 261 0034 00000000 		.word	i2c2
 262              		.cfi_endproc
 263              	.LFE48:
 265              		.section	.text.T.29,"ax",%progbits
 266              		.align	1
 267              		.thumb
 268              		.thumb_func
 270              	T.29:
 271              	.LFB49:
 356:arch/stm32/mcu_periph/i2c_arch.c **** static inline void i2c_hard_reset(struct i2c_periph *p)
 272              		.loc 1 356 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 24
 358:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) p->reg_addr;
 279              		.loc 1 358 0
 280 0002 3D4C     		ldr	r4, .L32
 281              		.cfi_offset 14, -4
 282              		.cfi_offset 6, -8
 283              		.cfi_offset 5, -12
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 1, -20
 286              		.cfi_offset 0, -24
 287 0004 666A     		ldr	r6, [r4, #36]
 288              	.LVL14:
 360:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
 289              		.loc 1 360 0
 290 0006 3046     		mov	r0, r6
 291 0008 FFF7FEFF 		bl	I2C_DeInit
 363:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 292              		.loc 1 363 0
 293 000c A38D     		ldrh	r3, [r4, #44]
 294 000e E18D     		ldrh	r1, [r4, #46]
 366:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 295              		.loc 1 366 0
 296 0010 3A48     		ldr	r0, .L32+4
 363:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 297              		.loc 1 363 0
 298 0012 1943     		orrs	r1, r1, r3
 364:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 299              		.loc 1 364 0
 300 0014 0123     		movs	r3, #1
 363:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 301              		.loc 1 363 0
 302 0016 89B2     		uxth	r1, r1
 364:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 303              		.loc 1 364 0
 304 0018 8DF80630 		strb	r3, [sp, #6]
 365:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 305              		.loc 1 365 0
 306 001c 1333     		adds	r3, r3, #19
 363:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Pin = p->scl_pin | p->sda_pin;
 307              		.loc 1 363 0
 308 001e ADF80410 		strh	r1, [sp, #4]	@ movhi
 365:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
 309              		.loc 1 365 0
 310 0022 8DF80730 		strb	r3, [sp, #7]
 366:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 311              		.loc 1 366 0
 312 0026 FFF7FEFF 		bl	GPIO_SetBits
 367:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 313              		.loc 1 367 0
 314 002a 3448     		ldr	r0, .L32+4
 315 002c 01A9     		add	r1, sp, #4
 316 002e FFF7FEFF 		bl	GPIO_Init
 317 0032 17E0     		b	.L25
 318              	.L27:
 371:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 319              		.loc 1 371 0
 320 0034 3148     		ldr	r0, .L32+4
 321 0036 FFF7FEFF 		bl	GPIO_SetBits
 322              	.L26:
 372:arch/stm32/mcu_periph/i2c_arch.c ****     while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET);
 323              		.loc 1 372 0
 324 003a 2F4C     		ldr	r4, .L32
 325 003c 2F48     		ldr	r0, .L32+4
 326 003e A18D     		ldrh	r1, [r4, #44]
 327 0040 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 328 0044 0028     		cmp	r0, #0
 329 0046 F8D0     		beq	.L26
 373:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 330              		.loc 1 373 0
 331 0048 FFF7FEFF 		bl	i2c_delay
 376:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_ResetBits(GPIOB, p->scl_pin);
 332              		.loc 1 376 0
 333 004c 2B48     		ldr	r0, .L32+4
 334 004e A18D     		ldrh	r1, [r4, #44]
 335 0050 FFF7FEFF 		bl	GPIO_ResetBits
 377:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 336              		.loc 1 377 0
 337 0054 FFF7FEFF 		bl	i2c_delay
 380:arch/stm32/mcu_periph/i2c_arch.c ****     GPIO_SetBits(GPIOB, p->scl_pin);
 338              		.loc 1 380 0
 339 0058 2848     		ldr	r0, .L32+4
 340 005a A18D     		ldrh	r1, [r4, #44]
 341 005c FFF7FEFF 		bl	GPIO_SetBits
 381:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_delay();
 342              		.loc 1 381 0
 343 0060 FFF7FEFF 		bl	i2c_delay
 344              	.L25:
 369:arch/stm32/mcu_periph/i2c_arch.c ****   while(GPIO_ReadInputDataBit(GPIOB, p->sda_pin) == Bit_RESET) {
 345              		.loc 1 369 0
 346 0064 244C     		ldr	r4, .L32
 347 0066 2548     		ldr	r0, .L32+4
 348 0068 E18D     		ldrh	r1, [r4, #46]
 349 006a FFF7FEFF 		bl	GPIO_ReadInputDataBit
 350 006e A18D     		ldrh	r1, [r4, #44]
 351 0070 0028     		cmp	r0, #0
 352 0072 DFD0     		beq	.L27
 385:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin);
 353              		.loc 1 385 0
 354 0074 2148     		ldr	r0, .L32+4
 355 0076 FFF7FEFF 		bl	GPIO_SetBits
 386:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 356              		.loc 1 386 0
 357 007a FFF7FEFF 		bl	i2c_delay
 387:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 358              		.loc 1 387 0
 359 007e 1F48     		ldr	r0, .L32+4
 360 0080 E18D     		ldrh	r1, [r4, #46]
 361 0082 FFF7FEFF 		bl	GPIO_ResetBits
 388:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 362              		.loc 1 388 0
 363 0086 FFF7FEFF 		bl	i2c_delay
 389:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_ResetBits(GPIOB, p->sda_pin);
 364              		.loc 1 389 0
 365 008a 1C48     		ldr	r0, .L32+4
 366 008c E18D     		ldrh	r1, [r4, #46]
 367 008e FFF7FEFF 		bl	GPIO_ResetBits
 390:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_delay();
 368              		.loc 1 390 0
 369 0092 FFF7FEFF 		bl	i2c_delay
 393:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_SetBits(GPIOB, p->scl_pin | p->sda_pin);
 370              		.loc 1 393 0
 371 0096 E18D     		ldrh	r1, [r4, #46]
 372 0098 A38D     		ldrh	r3, [r4, #44]
 373 009a 1848     		ldr	r0, .L32+4
 374 009c 1943     		orrs	r1, r1, r3
 375 009e 89B2     		uxth	r1, r1
 376 00a0 FFF7FEFF 		bl	GPIO_SetBits
 377              	.L28:
 394:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->scl_pin) == Bit_RESET);
 378              		.loc 1 394 0
 379 00a4 144B     		ldr	r3, .L32
 380 00a6 1548     		ldr	r0, .L32+4
 381 00a8 998D     		ldrh	r1, [r3, #44]
 382 00aa FFF7FEFF 		bl	GPIO_ReadInputDataBit
 383 00ae 0028     		cmp	r0, #0
 384 00b0 F8D0     		beq	.L28
 385              	.L29:
 397:arch/stm32/mcu_periph/i2c_arch.c ****   while (GPIO_ReadInputDataBit(GPIOB, p->sda_pin) != Bit_SET);
 386              		.loc 1 397 0
 387 00b2 114C     		ldr	r4, .L32
 388 00b4 1148     		ldr	r0, .L32+4
 389 00b6 E18D     		ldrh	r1, [r4, #46]
 390 00b8 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 391 00bc 0128     		cmp	r0, #1
 392 00be 0546     		mov	r5, r0
 393 00c0 F7D1     		bne	.L29
 401:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 394              		.loc 1 401 0
 395 00c2 1C23     		movs	r3, #28
 402:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 396              		.loc 1 402 0
 397 00c4 01A9     		add	r1, sp, #4
 398 00c6 0D48     		ldr	r0, .L32+4
 401:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 399              		.loc 1 401 0
 400 00c8 8DF80730 		strb	r3, [sp, #7]
 402:arch/stm32/mcu_periph/i2c_arch.c ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
 401              		.loc 1 402 0
 402 00cc FFF7FEFF 		bl	GPIO_Init
 404:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(p->reg_addr);
 403              		.loc 1 404 0
 404 00d0 606A     		ldr	r0, [r4, #36]
 405 00d2 FFF7FEFF 		bl	I2C_DeInit
 406              	.LBB27:
 407              	.LBB28:
  54:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Init(p->reg_addr, p->init_struct);
 408              		.loc 1 54 0
 409 00d6 606A     		ldr	r0, [r4, #36]
 410 00d8 A16A     		ldr	r1, [r4, #40]
 411 00da FFF7FEFF 		bl	I2C_Init
 412              	.LBE28:
 413              	.LBE27:
 408:arch/stm32/mcu_periph/i2c_arch.c ****   if (regs->SR2 & I2C_BUSY) {
 414              		.loc 1 408 0
 415 00de 338B     		ldrh	r3, [r6, #24]
 416 00e0 13F0200F 		tst	r3, #32
 417 00e4 07D0     		beq	.L31
 410:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, ENABLE);
 418              		.loc 1 410 0
 419 00e6 606A     		ldr	r0, [r4, #36]
 420 00e8 2946     		mov	r1, r5
 421 00ea FFF7FEFF 		bl	I2C_SoftwareResetCmd
 411:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SoftwareResetCmd(p->reg_addr, DISABLE);
 422              		.loc 1 411 0
 423 00ee 606A     		ldr	r0, [r4, #36]
 424 00f0 0021     		movs	r1, #0
 425 00f2 FFF7FEFF 		bl	I2C_SoftwareResetCmd
 426              	.L31:
 413:arch/stm32/mcu_periph/i2c_arch.c **** }
 427              		.loc 1 413 0
 428 00f6 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 429              	.L33:
 430              		.align	2
 431              	.L32:
 432 00f8 00000000 		.word	i2c2
 433 00fc 000C0140 		.word	1073810432
 434              		.cfi_endproc
 435              	.LFE49:
 437              		.section	.text.i2c2_hw_init,"ax",%progbits
 438              		.align	1
 439              		.global	i2c2_hw_init
 440              		.thumb
 441              		.thumb_func
 443              	i2c2_hw_init:
 444              	.LFB40:
 521:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_hw_init(void) {
 445              		.loc 1 521 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 450              	.LCFI5:
 451              		.cfi_def_cfa_offset 32
 524:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 452              		.loc 1 524 0
 453 0002 274B     		ldr	r3, .L36
 523:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 454              		.loc 1 523 0
 455 0004 274D     		ldr	r5, .L36+4
 456              		.cfi_offset 14, -4
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 6, -12
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 4, -20
 461              		.cfi_offset 2, -24
 462              		.cfi_offset 1, -28
 463              		.cfi_offset 0, -32
 530:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 464              		.loc 1 530 0
 465 0006 0022     		movs	r2, #0
 524:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.init_struct = &I2C2_InitStruct;
 466              		.loc 1 524 0
 467 0008 AB62     		str	r3, [r5, #40]
 525:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.scl_pin = GPIO_Pin_10;
 468              		.loc 1 525 0
 469 000a 4FF48063 		mov	r3, #1024	@ movhi
 470 000e AB85     		strh	r3, [r5, #44]	@ movhi
 526:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.sda_pin = GPIO_Pin_11;
 471              		.loc 1 526 0
 472 0010 4FF40063 		mov	r3, #2048	@ movhi
 473 0014 EB85     		strh	r3, [r5, #46]	@ movhi
 527:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 474              		.loc 1 527 0
 475 0016 244B     		ldr	r3, .L36+8
 523:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 476              		.loc 1 523 0
 477 0018 2448     		ldr	r0, .L36+12
 530:arch/stm32/mcu_periph/i2c_arch.c ****   ZEROS_ERR_COUNTER(i2c2_errors);
 478              		.loc 1 530 0
 479 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 480 001c 5A80     		strh	r2, [r3, #2]	@ movhi
 481 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 482 0020 DA80     		strh	r2, [r3, #6]	@ movhi
 483 0022 1A81     		strh	r2, [r3, #8]	@ movhi
 484 0024 5A81     		strh	r2, [r3, #10]	@ movhi
 485 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 486 0028 DA81     		strh	r2, [r3, #14]	@ movhi
 487 002a 1A61     		str	r2, [r3, #16]
 488 002c 5A61     		str	r2, [r3, #20]
 489 002e 1646     		mov	r6, r2	@ movhi
 527:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.errors = &i2c2_errors;
 490              		.loc 1 527 0
 491 0030 2B63     		str	r3, [r5, #48]
 523:arch/stm32/mcu_periph/i2c_arch.c ****   i2c2.reg_addr = I2C2;
 492              		.loc 1 523 0
 493 0032 6862     		str	r0, [r5, #36]
 543:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 494              		.loc 1 543 0
 495 0034 01AF     		add	r7, sp, #4
 533:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_DeInit(I2C2);
 496              		.loc 1 533 0
 497 0036 FFF7FEFF 		bl	I2C_DeInit
 535:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 498              		.loc 1 535 0
 499 003a 4FF4E060 		mov	r0, #1792
 500 003e FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 542:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 501              		.loc 1 542 0
 502 0042 0124     		movs	r4, #1
 539:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 503              		.loc 1 539 0
 504 0044 2123     		movs	r3, #33
 543:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 505              		.loc 1 543 0
 506 0046 3846     		mov	r0, r7
 539:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_EV_IRQn;
 507              		.loc 1 539 0
 508 0048 8DF80430 		strb	r3, [sp, #4]
 540:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 509              		.loc 1 540 0
 510 004c 8DF80560 		strb	r6, [sp, #5]
 541:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 511              		.loc 1 541 0
 512 0050 8DF80660 		strb	r6, [sp, #6]
 542:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 513              		.loc 1 542 0
 514 0054 8DF80740 		strb	r4, [sp, #7]
 543:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 515              		.loc 1 543 0
 516 0058 FFF7FEFF 		bl	NVIC_Init
 546:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 517              		.loc 1 546 0
 518 005c 2223     		movs	r3, #34
 550:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 519              		.loc 1 550 0
 520 005e 3846     		mov	r0, r7
 546:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannel = I2C2_ER_IRQn;
 521              		.loc 1 546 0
 522 0060 8DF80430 		strb	r3, [sp, #4]
 547:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 523              		.loc 1 547 0
 524 0064 8DF80560 		strb	r6, [sp, #5]
 548:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 525              		.loc 1 548 0
 526 0068 8DF80640 		strb	r4, [sp, #6]
 549:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 527              		.loc 1 549 0
 528 006c 8DF80740 		strb	r4, [sp, #7]
 550:arch/stm32/mcu_periph/i2c_arch.c ****   NVIC_Init(&NVIC_InitStructure);
 529              		.loc 1 550 0
 530 0070 FFF7FEFF 		bl	NVIC_Init
 554:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2, ENABLE);
 531              		.loc 1 554 0
 532 0074 2146     		mov	r1, r4
 533 0076 4FF48000 		mov	r0, #4194304
 534 007a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 556:arch/stm32/mcu_periph/i2c_arch.c ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 535              		.loc 1 556 0
 536 007e 0820     		movs	r0, #8
 537 0080 2146     		mov	r1, r4
 538 0082 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 539              	.LBB31:
 540              	.LBB32:
 418:arch/stm32/mcu_periph/i2c_arch.c ****   i2c_hard_reset(p);
 541              		.loc 1 418 0
 542 0086 FFF7FEFF 		bl	T.29
 421:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_Cmd(p->reg_addr, ENABLE);
 543              		.loc 1 421 0
 544 008a 686A     		ldr	r0, [r5, #36]
 545 008c 2146     		mov	r1, r4
 546 008e FFF7FEFF 		bl	I2C_Cmd
 424:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 547              		.loc 1 424 0
 548 0092 686A     		ldr	r0, [r5, #36]
 549 0094 4FF48071 		mov	r1, #256
 550 0098 2246     		mov	r2, r4
 551 009a FFF7FEFF 		bl	I2C_ITConfig
 552              	.LBE32:
 553              	.LBE31:
 561:arch/stm32/mcu_periph/i2c_arch.c **** }
 554              		.loc 1 561 0
 555 009e FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 556              	.L37:
 557              		.align	2
 558              	.L36:
 559 00a0 00000000 		.word	.LANCHOR0
 560 00a4 00000000 		.word	i2c2
 561 00a8 00000000 		.word	.LANCHOR1
 562 00ac 00580040 		.word	1073764352
 563              		.cfi_endproc
 564              	.LFE40:
 566              		.section	.text.T.30,"ax",%progbits
 567              		.align	1
 568              		.thumb
 569              		.thumb_func
 571              	T.30:
 572              	.LFB50:
  70:arch/stm32/mcu_periph/i2c_arch.c **** static inline void abort_and_reset(struct i2c_periph *p) {
 573              		.loc 1 70 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577 0000 10B5     		push	{r4, lr}
 578              	.LCFI6:
 579              		.cfi_def_cfa_offset 8
  71:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 580              		.loc 1 71 0
 581 0002 0D4C     		ldr	r4, .L40
 582              		.cfi_offset 14, -4
 583              		.cfi_offset 4, -8
  72:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
 584              		.loc 1 72 0
 585 0004 0322     		movs	r2, #3
  71:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 586              		.loc 1 71 0
 587 0006 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
  73:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 588              		.loc 1 73 0
 589 000a 606A     		ldr	r0, [r4, #36]
  71:arch/stm32/mcu_periph/i2c_arch.c ****     struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 590              		.loc 1 71 0
 591 000c 54F82330 		ldr	r3, [r4, r3, lsl #2]
 592              	.LVL15:
  73:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 593              		.loc 1 73 0
 594 0010 4FF4E061 		mov	r1, #1792
  72:arch/stm32/mcu_periph/i2c_arch.c ****     trans->status = I2CTransFailed;
 595              		.loc 1 72 0
 596 0014 83F82520 		strb	r2, [r3, #37]
  73:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR, DISABLE);
 597              		.loc 1 73 0
 598 0018 033A     		subs	r2, r2, #3
 599 001a FFF7FEFF 		bl	I2C_ITConfig
 600              	.LVL16:
  74:arch/stm32/mcu_periph/i2c_arch.c ****     i2c_hard_reset(p);
 601              		.loc 1 74 0
 602 001e FFF7FEFF 		bl	T.29
  75:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ITConfig(p->reg_addr, I2C_IT_ERR, ENABLE);
 603              		.loc 1 75 0
 604 0022 606A     		ldr	r0, [r4, #36]
 605 0024 4FF48071 		mov	r1, #256
 606 0028 0122     		movs	r2, #1
 607 002a FFF7FEFF 		bl	I2C_ITConfig
  77:arch/stm32/mcu_periph/i2c_arch.c **** }
 608              		.loc 1 77 0
 609 002e BDE81040 		pop	{r4, lr}
  76:arch/stm32/mcu_periph/i2c_arch.c ****     end_of_transaction(p);
 610              		.loc 1 76 0
 611 0032 FFF7FEBF 		b	T.28
 612              	.L41:
 613 0036 00BF     		.align	2
 614              	.L40:
 615 0038 00000000 		.word	i2c2
 616              		.cfi_endproc
 617              	.LFE50:
 619              		.section	.text.i2c2_er_irq_handler,"ax",%progbits
 620              		.align	1
 621              		.global	i2c2_er_irq_handler
 622              		.thumb
 623              		.thumb_func
 625              	i2c2_er_irq_handler:
 626              	.LFB42:
 571:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_er_irq_handler(void) {
 627              		.loc 1 571 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 10B5     		push	{r4, lr}
 632              	.LCFI7:
 633              		.cfi_def_cfa_offset 8
 634              	.LBB35:
 635              	.LBB36:
 319:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 636              		.loc 1 319 0
 637 0002 374C     		ldr	r4, .L51
 638              		.cfi_offset 14, -4
 639              		.cfi_offset 4, -8
 320:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 640              		.loc 1 320 0
 641 0004 3749     		ldr	r1, .L51+4
 319:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 642              		.loc 1 319 0
 643 0006 236B     		ldr	r3, [r4, #48]
 320:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 644              		.loc 1 320 0
 645 0008 606A     		ldr	r0, [r4, #36]
 319:arch/stm32/mcu_periph/i2c_arch.c ****   p->errors->er_irq_cnt;
 646              		.loc 1 319 0
 647 000a 5B69     		ldr	r3, [r3, #20]
 320:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_AF)) {       /* Acknowledge failure */
 648              		.loc 1 320 0
 649 000c FFF7FEFF 		bl	I2C_GetITStatus
 650 0010 40B1     		cbz	r0, .L43
 321:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 651              		.loc 1 321 0
 652 0012 236B     		ldr	r3, [r4, #48]
 322:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 653              		.loc 1 322 0
 654 0014 606A     		ldr	r0, [r4, #36]
 321:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 655              		.loc 1 321 0
 656 0016 1A88     		ldrh	r2, [r3, #0]
 322:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 657              		.loc 1 322 0
 658 0018 3249     		ldr	r1, .L51+4
 321:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->ack_fail_cnt++;
 659              		.loc 1 321 0
 660 001a 0132     		adds	r2, r2, #1
 661 001c 92B2     		uxth	r2, r2
 662 001e 1A80     		strh	r2, [r3, #0]	@ movhi
 322:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_AF);
 663              		.loc 1 322 0
 664 0020 FFF7FEFF 		bl	I2C_ClearITPendingBit
 665              	.L43:
 324:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_BERR)) {     /* Misplaced Start or Stop condition */
 666              		.loc 1 324 0
 667 0024 2E4C     		ldr	r4, .L51
 668 0026 3049     		ldr	r1, .L51+8
 669 0028 606A     		ldr	r0, [r4, #36]
 670 002a FFF7FEFF 		bl	I2C_GetITStatus
 671 002e 40B1     		cbz	r0, .L44
 325:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 672              		.loc 1 325 0
 673 0030 236B     		ldr	r3, [r4, #48]
 326:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 674              		.loc 1 326 0
 675 0032 606A     		ldr	r0, [r4, #36]
 325:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 676              		.loc 1 325 0
 677 0034 5A88     		ldrh	r2, [r3, #2]
 326:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 678              		.loc 1 326 0
 679 0036 2C49     		ldr	r1, .L51+8
 325:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->miss_start_stop_cnt++;
 680              		.loc 1 325 0
 681 0038 0132     		adds	r2, r2, #1
 682 003a 92B2     		uxth	r2, r2
 683 003c 5A80     		strh	r2, [r3, #2]	@ movhi
 326:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_BERR);
 684              		.loc 1 326 0
 685 003e FFF7FEFF 		bl	I2C_ClearITPendingBit
 686              	.L44:
 328:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_ARLO)) {     /* Arbitration lost */
 687              		.loc 1 328 0
 688 0042 274C     		ldr	r4, .L51
 689 0044 2949     		ldr	r1, .L51+12
 690 0046 606A     		ldr	r0, [r4, #36]
 691 0048 FFF7FEFF 		bl	I2C_GetITStatus
 692 004c 40B1     		cbz	r0, .L45
 329:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 693              		.loc 1 329 0
 694 004e 236B     		ldr	r3, [r4, #48]
 330:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 695              		.loc 1 330 0
 696 0050 606A     		ldr	r0, [r4, #36]
 329:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 697              		.loc 1 329 0
 698 0052 9A88     		ldrh	r2, [r3, #4]
 330:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 699              		.loc 1 330 0
 700 0054 2549     		ldr	r1, .L51+12
 329:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->arb_lost_cnt++;
 701              		.loc 1 329 0
 702 0056 0132     		adds	r2, r2, #1
 703 0058 92B2     		uxth	r2, r2
 704 005a 9A80     		strh	r2, [r3, #4]	@ movhi
 330:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_ARLO);
 705              		.loc 1 330 0
 706 005c FFF7FEFF 		bl	I2C_ClearITPendingBit
 707              	.L45:
 335:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_OVR)) {      /* Overrun/Underrun */
 708              		.loc 1 335 0
 709 0060 1F4C     		ldr	r4, .L51
 710 0062 2349     		ldr	r1, .L51+16
 711 0064 606A     		ldr	r0, [r4, #36]
 712 0066 FFF7FEFF 		bl	I2C_GetITStatus
 713 006a 40B1     		cbz	r0, .L46
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 714              		.loc 1 336 0
 715 006c 236B     		ldr	r3, [r4, #48]
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 716              		.loc 1 337 0
 717 006e 606A     		ldr	r0, [r4, #36]
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 718              		.loc 1 336 0
 719 0070 DA88     		ldrh	r2, [r3, #6]
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 720              		.loc 1 337 0
 721 0072 1F49     		ldr	r1, .L51+16
 336:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->over_under_cnt++;
 722              		.loc 1 336 0
 723 0074 0132     		adds	r2, r2, #1
 724 0076 92B2     		uxth	r2, r2
 725 0078 DA80     		strh	r2, [r3, #6]	@ movhi
 337:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_OVR);
 726              		.loc 1 337 0
 727 007a FFF7FEFF 		bl	I2C_ClearITPendingBit
 728              	.L46:
 339:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_PECERR)) {   /* PEC Error in reception */
 729              		.loc 1 339 0
 730 007e 184C     		ldr	r4, .L51
 731 0080 1C49     		ldr	r1, .L51+20
 732 0082 606A     		ldr	r0, [r4, #36]
 733 0084 FFF7FEFF 		bl	I2C_GetITStatus
 734 0088 40B1     		cbz	r0, .L47
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 735              		.loc 1 340 0
 736 008a 236B     		ldr	r3, [r4, #48]
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 737              		.loc 1 341 0
 738 008c 606A     		ldr	r0, [r4, #36]
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 739              		.loc 1 340 0
 740 008e 1A89     		ldrh	r2, [r3, #8]
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 741              		.loc 1 341 0
 742 0090 1849     		ldr	r1, .L51+20
 340:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->pec_recep_cnt++;
 743              		.loc 1 340 0
 744 0092 0132     		adds	r2, r2, #1
 745 0094 92B2     		uxth	r2, r2
 746 0096 1A81     		strh	r2, [r3, #8]	@ movhi
 341:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_PECERR);
 747              		.loc 1 341 0
 748 0098 FFF7FEFF 		bl	I2C_ClearITPendingBit
 749              	.L47:
 343:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_TIMEOUT)) {  /* Timeout or Tlow error */
 750              		.loc 1 343 0
 751 009c 104C     		ldr	r4, .L51
 752 009e 1649     		ldr	r1, .L51+24
 753 00a0 606A     		ldr	r0, [r4, #36]
 754 00a2 FFF7FEFF 		bl	I2C_GetITStatus
 755 00a6 40B1     		cbz	r0, .L48
 344:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 756              		.loc 1 344 0
 757 00a8 236B     		ldr	r3, [r4, #48]
 345:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 758              		.loc 1 345 0
 759 00aa 606A     		ldr	r0, [r4, #36]
 344:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 760              		.loc 1 344 0
 761 00ac 5A89     		ldrh	r2, [r3, #10]
 345:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 762              		.loc 1 345 0
 763 00ae 1249     		ldr	r1, .L51+24
 344:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->timeout_tlow_cnt++;
 764              		.loc 1 344 0
 765 00b0 0132     		adds	r2, r2, #1
 766 00b2 92B2     		uxth	r2, r2
 767 00b4 5A81     		strh	r2, [r3, #10]	@ movhi
 345:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_TIMEOUT);
 768              		.loc 1 345 0
 769 00b6 FFF7FEFF 		bl	I2C_ClearITPendingBit
 770              	.L48:
 347:arch/stm32/mcu_periph/i2c_arch.c ****   if (I2C_GetITStatus(p->reg_addr, I2C_IT_SMBALERT)) { /* SMBus alert */
 771              		.loc 1 347 0
 772 00ba 094C     		ldr	r4, .L51
 773 00bc 0F49     		ldr	r1, .L51+28
 774 00be 606A     		ldr	r0, [r4, #36]
 775 00c0 FFF7FEFF 		bl	I2C_GetITStatus
 776 00c4 40B1     		cbz	r0, .L49
 348:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 777              		.loc 1 348 0
 778 00c6 236B     		ldr	r3, [r4, #48]
 349:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 779              		.loc 1 349 0
 780 00c8 606A     		ldr	r0, [r4, #36]
 348:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 781              		.loc 1 348 0
 782 00ca 9A89     		ldrh	r2, [r3, #12]
 349:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 783              		.loc 1 349 0
 784 00cc 0B49     		ldr	r1, .L51+28
 348:arch/stm32/mcu_periph/i2c_arch.c ****     p->errors->smbus_alert_cnt++;
 785              		.loc 1 348 0
 786 00ce 0132     		adds	r2, r2, #1
 787 00d0 92B2     		uxth	r2, r2
 788 00d2 9A81     		strh	r2, [r3, #12]	@ movhi
 349:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_ClearITPendingBit(p->reg_addr, I2C_IT_SMBALERT);
 789              		.loc 1 349 0
 790 00d4 FFF7FEFF 		bl	I2C_ClearITPendingBit
 791              	.L49:
 792              	.LBE36:
 793              	.LBE35:
 574:arch/stm32/mcu_periph/i2c_arch.c **** }
 794              		.loc 1 574 0
 795 00d8 BDE81040 		pop	{r4, lr}
 796              	.LBB38:
 797              	.LBB37:
 352:arch/stm32/mcu_periph/i2c_arch.c ****   abort_and_reset(p);
 798              		.loc 1 352 0
 799 00dc FFF7FEBF 		b	T.30
 800              	.L52:
 801              		.align	2
 802              	.L51:
 803 00e0 00000000 		.word	i2c2
 804 00e4 00040001 		.word	16778240
 805 00e8 00010001 		.word	16777472
 806 00ec 00020001 		.word	16777728
 807 00f0 00080001 		.word	16779264
 808 00f4 00100001 		.word	16781312
 809 00f8 00400001 		.word	16793600
 810 00fc 00800001 		.word	16809984
 811              	.LBE37:
 812              	.LBE38:
 813              		.cfi_endproc
 814              	.LFE42:
 816              		.section	.text.i2c2_ev_irq_handler,"ax",%progbits
 817              		.align	1
 818              		.global	i2c2_ev_irq_handler
 819              		.thumb
 820              		.thumb_func
 822              	i2c2_ev_irq_handler:
 823              	.LFB41:
 566:arch/stm32/mcu_periph/i2c_arch.c **** void i2c2_ev_irq_handler(void) {
 824              		.loc 1 566 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 70B5     		push	{r4, r5, r6, lr}
 829              	.LCFI8:
 830              		.cfi_def_cfa_offset 16
 567:arch/stm32/mcu_periph/i2c_arch.c ****   uint32_t event = I2C_GetLastEvent(I2C2);
 831              		.loc 1 567 0
 832 0002 9648     		ldr	r0, .L90
 833              		.cfi_offset 14, -4
 834              		.cfi_offset 6, -8
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 4, -16
 837 0004 FFF7FEFF 		bl	I2C_GetLastEvent
 838              	.LBB64:
 839              	.LBB66:
 285:arch/stm32/mcu_periph/i2c_arch.c ****   struct i2c_transaction* trans = p->trans[p->trans_extract_idx];
 840              		.loc 1 285 0
 841 0008 954B     		ldr	r3, .L90+4
 842 000a 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2
 843 000e 53F82240 		ldr	r4, [r3, r2, lsl #2]
 844              	.LVL17:
 286:arch/stm32/mcu_periph/i2c_arch.c ****   switch (p->status) {
 845              		.loc 1 286 0
 846 0012 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 847 0016 013B     		subs	r3, r3, #1
 848 0018 072B     		cmp	r3, #7
 849 001a 00F24F81 		bhi	.L54
 850 001e DFE813F0 		tbh	[pc, r3, lsl #1]
 851              	.L63:
 852 0022 0800     		.2byte	(.L55-.L63)/2
 853 0024 1B00     		.2byte	(.L56-.L63)/2
 854 0026 A000     		.2byte	(.L57-.L63)/2
 855 0028 4500     		.2byte	(.L58-.L63)/2
 856 002a D300     		.2byte	(.L59-.L63)/2
 857 002c 0C01     		.2byte	(.L60-.L63)/2
 858 002e 8100     		.2byte	(.L61-.L63)/2
 859 0030 3F01     		.2byte	(.L62-.L63)/2
 860              	.L55:
 861              	.LBB81:
 862              	.LBB82:
  94:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 863              		.loc 1 94 0
 864 0032 8C4B     		ldr	r3, .L90+8
 865 0034 00EA0303 		and	r3, r0, r3
 866              	.LVL18:
 867 0038 002B     		cmp	r3, #0
 868 003a 00F04381 		beq	.L83
  95:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->type == I2CTransRx) {
 869              		.loc 1 95 0
 870 003e 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 871 0040 874D     		ldr	r5, .L90+4
 872 0042 012A     		cmp	r2, #1
 873 0044 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 874 0046 01D1     		bne	.L65
  96:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 875              		.loc 1 96 0
 876 0048 686A     		ldr	r0, [r5, #36]
 877              	.LVL19:
 878 004a 31E1     		b	.L87
 879              	.LVL20:
 880              	.L65:
 100:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Transmitter);
 881              		.loc 1 100 0
 882 004c 686A     		ldr	r0, [r5, #36]
 883              	.LVL21:
 884 004e 0022     		movs	r2, #0
 885 0050 FFF7FEFF 		bl	I2C_Send7bitAddress
 101:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CAddrWrSent;
 886              		.loc 1 101 0
 887 0054 0223     		movs	r3, #2
 888 0056 2EE1     		b	.L84
 889              	.L56:
 890              	.LBE82:
 891              	.LBE81:
 892              	.LBB83:
 893              	.LBB84:
 114:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && (event & I2C_FLAG_TRA)) {
 894              		.loc 1 114 0
 895 0058 834B     		ldr	r3, .L90+12
 896 005a 00EA0303 		and	r3, r0, r3
 897              	.LVL22:
 898 005e 002B     		cmp	r3, #0
 899 0060 00F02C81 		beq	.L54
 900 0064 10F4802F 		tst	r0, #262144
 901 0068 00F02881 		beq	.L54
 115:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_SendData(periph->reg_addr, trans->buf[0]);
 902              		.loc 1 115 0
 903 006c 7C4D     		ldr	r5, .L90+4
 904 006e 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 905 0070 686A     		ldr	r0, [r5, #36]
 906              	.LVL23:
 907 0072 FFF7FEFF 		bl	I2C_SendData
 116:arch/stm32/mcu_periph/i2c_arch.c ****     if (trans->len_w > 1) {
 908              		.loc 1 116 0
 909 0076 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 910 0078 012B     		cmp	r3, #1
 911 007a 0ED9     		bls	.L67
 117:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[1]);
 912              		.loc 1 117 0
 913 007c A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 914 007e 686A     		ldr	r0, [r5, #36]
 915 0080 FFF7FEFF 		bl	I2C_SendData
 118:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 2;
 916              		.loc 1 118 0
 917 0084 0223     		movs	r3, #2
 119:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 918              		.loc 1 119 0
 919 0086 686A     		ldr	r0, [r5, #36]
 920 0088 4FF48061 		mov	r1, #1024
 921 008c 0122     		movs	r2, #1
 118:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 2;
 922              		.loc 1 118 0
 923 008e 85F82330 		strb	r3, [r5, #35]
 119:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 924              		.loc 1 119 0
 925 0092 FFF7FEFF 		bl	I2C_ITConfig
 120:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CSendingByte;
 926              		.loc 1 120 0
 927 0096 0423     		movs	r3, #4
 928 0098 0DE1     		b	.L84
 929              	.L67:
 123:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf = 1;
 930              		.loc 1 123 0
 931 009a 0121     		movs	r1, #1
 932 009c 85F82310 		strb	r1, [r5, #35]
 124:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 933              		.loc 1 124 0
 934 00a0 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 935 00a2 0BB9     		cbnz	r3, .L68
 125:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 936              		.loc 1 125 0
 937 00a4 686A     		ldr	r0, [r5, #36]
 938 00a6 D6E0     		b	.L89
 939              	.L68:
 129:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 940              		.loc 1 129 0
 941 00a8 686A     		ldr	r0, [r5, #36]
 942 00aa 37E0     		b	.L86
 943              	.L58:
 944              	.LBE84:
 945              	.LBE83:
 946              	.LBB85:
 947              	.LBB86:
 147:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 948              		.loc 1 147 0
 949 00ac 6F4B     		ldr	r3, .L90+16
 146:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 950              		.loc 1 146 0
 951 00ae 6C4D     		ldr	r5, .L90+4
 147:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 952              		.loc 1 147 0
 953 00b0 00EA0303 		and	r3, r0, r3
 954              	.LVL24:
 146:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 955              		.loc 1 146 0
 956 00b4 6E6A     		ldr	r6, [r5, #36]
 147:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_TXE) {
 957              		.loc 1 147 0
 958 00b6 002B     		cmp	r3, #0
 959 00b8 00F00481 		beq	.L83
 148:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_w) {
 960              		.loc 1 148 0
 961 00bc 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 962 00c0 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 963 00c2 9A42     		cmp	r2, r3
 964 00c4 0DD9     		bls	.L69
 149:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_SendData(periph->reg_addr, trans->buf[periph->idx_buf]);
 965              		.loc 1 149 0
 966 00c6 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 967 00ca 3046     		mov	r0, r6
 968              	.LVL25:
 969 00cc E418     		adds	r4, r4, r3
 970              	.LVL26:
 971 00ce 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 972 00d0 FFF7FEFF 		bl	I2C_SendData
 150:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 973              		.loc 1 150 0
 974 00d4 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 975 00d8 0133     		adds	r3, r3, #1
 976 00da DBB2     		uxtb	r3, r3
 977 00dc 85F82330 		strb	r3, [r5, #35]
 978 00e0 70BD     		pop	{r4, r5, r6, pc}
 979              	.LVL27:
 980              	.L69:
 153:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, DISABLE);
 981              		.loc 1 153 0
 982 00e2 3046     		mov	r0, r6
 983              	.LVL28:
 984 00e4 4FF48061 		mov	r1, #1024
 985 00e8 0022     		movs	r2, #0
 986 00ea FFF7FEFF 		bl	I2C_ITConfig
 154:arch/stm32/mcu_periph/i2c_arch.c ****       if (trans->type == I2CTransTx) {
 987              		.loc 1 154 0
 988 00ee 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 989 00f0 93B9     		cbnz	r3, .L70
 990              	.LBB87:
 155:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 991              		.loc 1 155 0
 992 00f2 686A     		ldr	r0, [r5, #36]
 993 00f4 0121     		movs	r1, #1
 994 00f6 FFF7FEFF 		bl	I2C_GenerateSTOP
 995 00fa 08E0     		b	.L71
 996              	.L73:
 159:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 997              		.loc 1 159 0
 998 00fc 5C4B     		ldr	r3, .L90+20
 999 00fe 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1000 0100 0132     		adds	r2, r2, #1
 1001 0102 D2B2     		uxtb	r2, r2
 1002 0104 1A70     		strb	r2, [r3, #0]
 160:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 1003              		.loc 1 160 0
 1004 0106 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1005 0108 642B     		cmp	r3, #100
 1006 010a 00F29180 		bhi	.L80
 1007              	.L71:
 158:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 1008              		.loc 1 158 0
 1009 010e 3388     		ldrh	r3, [r6, #0]
 1010 0110 13F4007F 		tst	r3, #512
 1011 0114 F2D1     		bne	.L73
 1012 0116 8BE0     		b	.L80
 1013              	.L70:
 1014              	.LBE87:
 165:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTART(periph->reg_addr, ENABLE);
 1015              		.loc 1 165 0
 1016 0118 686A     		ldr	r0, [r5, #36]
 1017 011a 0121     		movs	r1, #1
 1018              	.L86:
 1019 011c FFF7FEFF 		bl	I2C_GenerateSTART
 166:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CRestartRequested;
 1020              		.loc 1 166 0
 1021 0120 0823     		movs	r3, #8
 1022 0122 C8E0     		b	.L84
 1023              	.L61:
 1024              	.LBE86:
 1025              	.LBE85:
 1026              	.LBB88:
 1027              	.LBB89:
 180:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 1028              		.loc 1 180 0
 1029 0124 534B     		ldr	r3, .L90+24
 1030 0126 00EA0303 		and	r3, r0, r3
 1031              	.LVL29:
 1032 012a 63B1     		cbz	r3, .L74
 1033              	.LBB90:
 181:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1034              		.loc 1 181 0
 1035 012c 4C4D     		ldr	r5, .L90+4
 1036 012e 686A     		ldr	r0, [r5, #36]
 1037              	.LVL30:
 1038 0130 FFF7FEFF 		bl	I2C_ReceiveData
 182:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 1039              		.loc 1 182 0
 1040 0134 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1041 0138 6288     		ldrh	r2, [r4, #2]
 1042 013a 9A42     		cmp	r2, r3
 1043 013c 03D9     		bls	.L74
 183:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 1044              		.loc 1 183 0
 1045 013e 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1046 0142 E318     		adds	r3, r4, r3
 1047 0144 5871     		strb	r0, [r3, #5]
 1048              	.LVL31:
 1049              	.L74:
 1050              	.LBE90:
 186:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_ITConfig(periph->reg_addr, I2C_IT_EVT|I2C_IT_BUF, DISABLE);  // should only need to disable e
 1051              		.loc 1 186 0
 1052 0146 464B     		ldr	r3, .L90+4
 1053 0148 4FF4C061 		mov	r1, #1536
 1054 014c 586A     		ldr	r0, [r3, #36]
 1055              	.LVL32:
 1056 014e 0022     		movs	r2, #0
 1057 0150 FFF7FEFF 		bl	I2C_ITConfig
 187:arch/stm32/mcu_periph/i2c_arch.c ****   trans->status = I2CTransSuccess;
 1058              		.loc 1 187 0
 1059 0154 0223     		movs	r3, #2
 1060 0156 84F82530 		strb	r3, [r4, #37]
 1061              	.LBE89:
 1062              	.LBE88:
 1063              	.LBE66:
 1064              	.LBE64:
 569:arch/stm32/mcu_periph/i2c_arch.c **** }
 1065              		.loc 1 569 0
 1066 015a BDE87040 		pop	{r4, r5, r6, lr}
 1067              	.LBB93:
 1068              	.LBB65:
 1069              	.LBB80:
 1070              	.LBB91:
 188:arch/stm32/mcu_periph/i2c_arch.c ****   end_of_transaction(periph);
 1071              		.loc 1 188 0
 1072 015e FFF7FEBF 		b	T.28
 1073              	.L57:
 1074              	.LBE91:
 1075              	.LBE80:
 1076              	.LBB77:
 1077              	.LBB78:
 198:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 1078              		.loc 1 198 0
 1079 0162 414B     		ldr	r3, .L90+12
 196:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 1080              		.loc 1 196 0
 1081 0164 3E4D     		ldr	r5, .L90+4
 198:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 1082              		.loc 1 198 0
 1083 0166 00EA0303 		and	r3, r0, r3
 1084              	.LVL33:
 196:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 1085              		.loc 1 196 0
 1086 016a 6E6A     		ldr	r6, [r5, #36]
 1087              	.LVL34:
 198:arch/stm32/mcu_periph/i2c_arch.c ****   if ((event & I2C_FLAG_ADDR) && !(event & I2C_FLAG_TRA)) {
 1088              		.loc 1 198 0
 1089 016c 002B     		cmp	r3, #0
 1090 016e 00F0A980 		beq	.L83
 1091 0172 10F48021 		ands	r1, r0, #262144
 1092 0176 40F0A580 		bne	.L83
 199:arch/stm32/mcu_periph/i2c_arch.c ****     periph->idx_buf = 0;
 1093              		.loc 1 199 0
 1094 017a 85F82310 		strb	r1, [r5, #35]
 200:arch/stm32/mcu_periph/i2c_arch.c ****     if(trans->len_r == 1) {                                         // If we're going to read only 
 1095              		.loc 1 200 0
 1096 017e 6488     		ldrh	r4, [r4, #2]
 1097              	.LVL35:
 1098 0180 012C     		cmp	r4, #1
 1099 0182 15D1     		bne	.L75
 1100              	.LBB79:
 201:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);             // make sure it's gonna be nack
 1101              		.loc 1 201 0
 1102 0184 3046     		mov	r0, r6
 1103              	.LVL36:
 1104 0186 FFF7FEFF 		bl	I2C_AcknowledgeConfig
 202:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and followed by a stop
 1105              		.loc 1 202 0
 1106 018a 686A     		ldr	r0, [r5, #36]
 1107 018c 2146     		mov	r1, r4
 1108 018e FFF7FEFF 		bl	I2C_GenerateSTOP
 1109 0192 07E0     		b	.L76
 1110              	.L78:
 206:arch/stm32/mcu_periph/i2c_arch.c ****         counter++;
 1111              		.loc 1 206 0
 1112 0194 384B     		ldr	r3, .L90+28
 1113 0196 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1114 0198 0132     		adds	r2, r2, #1
 1115 019a D2B2     		uxtb	r2, r2
 1116 019c 1A70     		strb	r2, [r3, #0]
 207:arch/stm32/mcu_periph/i2c_arch.c ****         if (counter > 100) break;
 1117              		.loc 1 207 0
 1118 019e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1119 01a0 642B     		cmp	r3, #100
 1120 01a2 03D8     		bhi	.L77
 1121              	.L76:
 205:arch/stm32/mcu_periph/i2c_arch.c ****       while ((regs->CR1 & 0x200) == 0x200) {
 1122              		.loc 1 205 0
 1123 01a4 3388     		ldrh	r3, [r6, #0]
 1124 01a6 13F4007F 		tst	r3, #512
 1125 01aa F3D1     		bne	.L78
 1126              	.L77:
 209:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingLastByte;                           // and remember we did
 1127              		.loc 1 209 0
 1128 01ac 0622     		movs	r2, #6
 1129 01ae 40E0     		b	.L85
 1130              	.LVL37:
 1131              	.L75:
 1132              	.LBE79:
 212:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_AcknowledgeConfig(periph->reg_addr, ENABLE);               // if it's more than one byte,
 1133              		.loc 1 212 0
 1134 01b0 3046     		mov	r0, r6
 1135              	.LVL38:
 1136 01b2 0121     		movs	r1, #1
 1137 01b4 FFF7FEFF 		bl	I2C_AcknowledgeConfig
 213:arch/stm32/mcu_periph/i2c_arch.c ****       I2C_ITConfig(periph->reg_addr, I2C_IT_BUF, ENABLE);
 1138              		.loc 1 213 0
 1139 01b8 686A     		ldr	r0, [r5, #36]
 1140 01ba 4FF48061 		mov	r1, #1024
 1141 01be 0122     		movs	r2, #1
 1142 01c0 FFF7FEFF 		bl	I2C_ITConfig
 214:arch/stm32/mcu_periph/i2c_arch.c ****       periph->status = I2CReadingByte;                               // and remember we did
 1143              		.loc 1 214 0
 1144 01c4 0523     		movs	r3, #5
 1145 01c6 76E0     		b	.L84
 1146              	.LVL39:
 1147              	.L59:
 1148              	.LBE78:
 1149              	.LBE77:
 1150              	.LBB73:
 1151              	.LBB74:
 228:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 1152              		.loc 1 228 0
 1153 01c8 2A4B     		ldr	r3, .L90+24
 227:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 1154              		.loc 1 227 0
 1155 01ca 254D     		ldr	r5, .L90+4
 228:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 1156              		.loc 1 228 0
 1157 01cc 00EA0303 		and	r3, r0, r3
 1158              	.LVL40:
 227:arch/stm32/mcu_periph/i2c_arch.c ****   I2C_TypeDef *regs = (I2C_TypeDef *) periph->reg_addr;
 1159              		.loc 1 227 0
 1160 01d0 6E6A     		ldr	r6, [r5, #36]
 228:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_RXNE) {
 1161              		.loc 1 228 0
 1162 01d2 002B     		cmp	r3, #0
 1163 01d4 76D0     		beq	.L83
 1164              	.LBB75:
 229:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1165              		.loc 1 229 0
 1166 01d6 3046     		mov	r0, r6
 1167              	.LVL41:
 1168 01d8 FFF7FEFF 		bl	I2C_ReceiveData
 230:arch/stm32/mcu_periph/i2c_arch.c ****     if (periph->idx_buf < trans->len_r) {
 1169              		.loc 1 230 0
 1170 01dc 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1171 01e0 6288     		ldrh	r2, [r4, #2]
 1172 01e2 9A42     		cmp	r2, r3
 1173 01e4 6ED9     		bls	.L83
 231:arch/stm32/mcu_periph/i2c_arch.c ****       trans->buf[periph->idx_buf] = read_byte;
 1174              		.loc 1 231 0
 1175 01e6 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1176 01ea E318     		adds	r3, r4, r3
 1177 01ec 5871     		strb	r0, [r3, #5]
 232:arch/stm32/mcu_periph/i2c_arch.c ****       periph->idx_buf++;
 1178              		.loc 1 232 0
 1179 01ee 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1180 01f2 0133     		adds	r3, r3, #1
 1181 01f4 DBB2     		uxtb	r3, r3
 1182 01f6 85F82330 		strb	r3, [r5, #35]
 233:arch/stm32/mcu_periph/i2c_arch.c ****       if (periph->idx_buf >= trans->len_r-1) {                    // We're reading our last byte
 1183              		.loc 1 233 0
 1184 01fa 6388     		ldrh	r3, [r4, #2]
 1185 01fc 95F82320 		ldrb	r2, [r5, #35]	@ zero_extendqisi2
 1186 0200 013B     		subs	r3, r3, #1
 1187 0202 9A42     		cmp	r2, r3
 1188 0204 5EDB     		blt	.L83
 1189              	.LBB76:
 234:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_AcknowledgeConfig(periph->reg_addr, DISABLE);         // give them a nack once it's don
 1190              		.loc 1 234 0
 1191 0206 686A     		ldr	r0, [r5, #36]
 1192 0208 0021     		movs	r1, #0
 1193 020a FFF7FEFF 		bl	I2C_AcknowledgeConfig
 235:arch/stm32/mcu_periph/i2c_arch.c ****         I2C_GenerateSTOP(periph->reg_addr, ENABLE);               // and follow with a stop
 1194              		.loc 1 235 0
 1195 020e 686A     		ldr	r0, [r5, #36]
 1196 0210 0121     		movs	r1, #1
 1197 0212 FFF7FEFF 		bl	I2C_GenerateSTOP
 1198 0216 07E0     		b	.L79
 1199              	.L81:
 239:arch/stm32/mcu_periph/i2c_arch.c ****           counter++;
 1200              		.loc 1 239 0
 1201 0218 184B     		ldr	r3, .L90+32
 1202 021a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1203 021c 0132     		adds	r2, r2, #1
 1204 021e D2B2     		uxtb	r2, r2
 1205 0220 1A70     		strb	r2, [r3, #0]
 240:arch/stm32/mcu_periph/i2c_arch.c ****           if (counter > 100) break;
 1206              		.loc 1 240 0
 1207 0222 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1208 0224 642B     		cmp	r3, #100
 1209 0226 03D8     		bhi	.L80
 1210              	.L79:
 238:arch/stm32/mcu_periph/i2c_arch.c ****         while ((regs->CR1 & 0x200) == 0x200) {
 1211              		.loc 1 238 0
 1212 0228 3388     		ldrh	r3, [r6, #0]
 1213 022a 13F4007F 		tst	r3, #512
 1214 022e F3D1     		bne	.L81
 1215              	.L80:
 242:arch/stm32/mcu_periph/i2c_arch.c ****         periph->status = I2CStopRequested;                        // remember we already trigered t
 1216              		.loc 1 242 0
 1217 0230 0722     		movs	r2, #7
 1218              	.LVL42:
 1219              	.L85:
 1220 0232 0B4B     		ldr	r3, .L90+4
 1221 0234 83F82220 		strb	r2, [r3, #34]
 1222 0238 70BD     		pop	{r4, r5, r6, pc}
 1223              	.LVL43:
 1224              	.L60:
 1225              	.LBE76:
 1226              	.LBE75:
 1227              	.LBE74:
 1228              	.LBE73:
 1229              	.LBB69:
 1230              	.LBB70:
 255:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_BTF) {
 1231              		.loc 1 255 0
 1232 023a 114B     		ldr	r3, .L90+36
 1233 023c 00EA0303 		and	r3, r0, r3
 1234              	.LVL44:
 1235 0240 03B3     		cbz	r3, .L82
 1236              	.LBB71:
 256:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1237              		.loc 1 256 0
 1238 0242 074D     		ldr	r5, .L90+4
 1239 0244 686A     		ldr	r0, [r5, #36]
 1240              	.LVL45:
 1241 0246 FFF7FEFF 		bl	I2C_ReceiveData
 257:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1242              		.loc 1 257 0
 1243 024a 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 258:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 1244              		.loc 1 258 0
 1245 024e 0121     		movs	r1, #1
 257:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1246              		.loc 1 257 0
 1247 0250 E418     		adds	r4, r4, r3
 1248              	.LVL46:
 1249 0252 6071     		strb	r0, [r4, #5]
 258:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_GenerateSTOP(periph->reg_addr, ENABLE);
 1250              		.loc 1 258 0
 1251 0254 686A     		ldr	r0, [r5, #36]
 1252              	.LVL47:
 1253              	.L89:
 1254 0256 FFF7FEFF 		bl	I2C_GenerateSTOP
 1255 025a 1FE0     		b	.L88
 1256              	.L91:
 1257              		.align	2
 1258              	.L90:
 1259 025c 00580040 		.word	1073764352
 1260 0260 00000000 		.word	i2c2
 1261 0264 01000010 		.word	268435457
 1262 0268 02000010 		.word	268435458
 1263 026c 80000010 		.word	268435584
 1264 0270 00000000 		.word	.LANCHOR2
 1265 0274 40000010 		.word	268435520
 1266 0278 00000000 		.word	.LANCHOR3
 1267 027c 00000000 		.word	.LANCHOR4
 1268 0280 04000010 		.word	268435460
 1269              	.LVL48:
 1270              	.L82:
 1271              	.LBE71:
 261:arch/stm32/mcu_periph/i2c_arch.c ****   else if (event & I2C_FLAG_RXNE) {       // should really be BTF ?
 1272              		.loc 1 261 0
 1273 0284 104B     		ldr	r3, .L92
 1274 0286 00EA0303 		and	r3, r0, r3
 1275 028a DBB1     		cbz	r3, .L83
 1276              	.LBB72:
 262:arch/stm32/mcu_periph/i2c_arch.c ****     uint8_t read_byte =  I2C_ReceiveData(periph->reg_addr);
 1277              		.loc 1 262 0
 1278 028c 0F4D     		ldr	r5, .L92+4
 1279 028e 686A     		ldr	r0, [r5, #36]
 1280              	.LVL49:
 1281 0290 FFF7FEFF 		bl	I2C_ReceiveData
 263:arch/stm32/mcu_periph/i2c_arch.c ****     trans->buf[periph->idx_buf] = read_byte;
 1282              		.loc 1 263 0
 1283 0294 95F82330 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 1284 0298 E418     		adds	r4, r4, r3
 1285              	.LVL50:
 1286 029a 6071     		strb	r0, [r4, #5]
 1287              	.LVL51:
 1288              	.L88:
 264:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CStopRequested;
 1289              		.loc 1 264 0
 1290 029c 0723     		movs	r3, #7
 1291 029e 0AE0     		b	.L84
 1292              	.L62:
 1293              	.LBE72:
 1294              	.LBE70:
 1295              	.LBE69:
 1296              	.LBB67:
 1297              	.LBB68:
 275:arch/stm32/mcu_periph/i2c_arch.c ****   if (event & I2C_FLAG_SB) {
 1298              		.loc 1 275 0
 1299 02a0 0B4B     		ldr	r3, .L92+8
 1300 02a2 00EA0303 		and	r3, r0, r3
 1301              	.LVL52:
 1302 02a6 6BB1     		cbz	r3, .L83
 276:arch/stm32/mcu_periph/i2c_arch.c ****     I2C_Send7bitAddress(periph->reg_addr, trans->slave_addr, I2C_Direction_Receiver);
 1303              		.loc 1 276 0
 1304 02a8 084D     		ldr	r5, .L92+4
 1305 02aa 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 1306 02ac 686A     		ldr	r0, [r5, #36]
 1307              	.LVL53:
 1308 02ae 0122     		movs	r2, #1
 1309              	.L87:
 1310 02b0 FFF7FEFF 		bl	I2C_Send7bitAddress
 277:arch/stm32/mcu_periph/i2c_arch.c ****     periph->status = I2CAddrRdSent;
 1311              		.loc 1 277 0
 1312 02b4 0323     		movs	r3, #3
 1313              	.LVL54:
 1314              	.L84:
 1315 02b6 85F82230 		strb	r3, [r5, #34]
 1316 02ba 70BD     		pop	{r4, r5, r6, pc}
 1317              	.LVL55:
 1318              	.L54:
 1319              	.LBE68:
 1320              	.LBE67:
 1321              	.LBE65:
 1322              	.LBE93:
 569:arch/stm32/mcu_periph/i2c_arch.c **** }
 1323              		.loc 1 569 0
 1324 02bc BDE87040 		pop	{r4, r5, r6, lr}
 1325              	.LBB94:
 1326              	.LBB92:
 312:arch/stm32/mcu_periph/i2c_arch.c ****     OUT_OF_SYNC_STATE_MACHINE(p, p->status, event);
 1327              		.loc 1 312 0
 1328 02c0 FFF7FEBF 		b	T.30
 1329              	.LVL56:
 1330              	.L83:
 1331 02c4 70BD     		pop	{r4, r5, r6, pc}
 1332              	.L93:
 1333 02c6 00BF     		.align	2
 1334              	.L92:
 1335 02c8 40000010 		.word	268435520
 1336 02cc 00000000 		.word	i2c2
 1337 02d0 01000010 		.word	268435457
 1338              	.LBE92:
 1339              	.LBE94:
 1340              		.cfi_endproc
 1341              	.LFE41:
 1343              		.global	i2c2_errors
 1344              		.section	.bss.i2c2_errors,"aw",%nobits
 1345              		.align	2
 1346              		.set	.LANCHOR1,. + 0
 1349              	i2c2_errors:
 1350 0000 00000000 		.space	108
 1350      00000000 
 1350      00000000 
 1350      00000000 
 1350      00000000 
 1351              		.section	.bss.counter.3511,"aw",%nobits
 1352              		.set	.LANCHOR2,. + 0
 1355              	counter.3511:
 1356 0000 00       		.space	1
 1357              		.section	.data.I2C2_InitStruct,"aw",%progbits
 1358              		.align	2
 1359              		.set	.LANCHOR0,. + 0
 1362              	I2C2_InitStruct:
 1363 0000 0000     		.short	0
 1364 0002 FFBF     		.short	-16385
 1365 0004 0000     		.short	0
 1366 0006 0004     		.short	1024
 1367 0008 0040     		.short	16384
 1368 000a 0000     		.space	2
 1369 000c E0930400 		.word	300000
 1370              		.section	.bss.counter.3569,"aw",%nobits
 1371              		.set	.LANCHOR3,. + 0
 1374              	counter.3569:
 1375 0000 00       		.space	1
 1376              		.section	.bss.counter.3601,"aw",%nobits
 1377              		.set	.LANCHOR4,. + 0
 1380              	counter.3601:
 1381 0000 00       		.space	1
 1382              		.text
 1383              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 i2c_arch.c
     /tmp/ccGTWGEO.s:24     .text.i2c_delay:00000000 $t
     /tmp/ccGTWGEO.s:28     .text.i2c_delay:00000000 i2c_delay
     /tmp/ccGTWGEO.s:62     .text.start_transaction:00000000 $t
     /tmp/ccGTWGEO.s:66     .text.start_transaction:00000000 start_transaction
     /tmp/ccGTWGEO.s:107    .text.i2c_submit:00000000 $t
     /tmp/ccGTWGEO.s:112    .text.i2c_submit:00000000 i2c_submit
     /tmp/ccGTWGEO.s:187    .text.i2c_idle:00000000 $t
     /tmp/ccGTWGEO.s:192    .text.i2c_idle:00000000 i2c_idle
     /tmp/ccGTWGEO.s:218    .text.T.28:00000000 $t
     /tmp/ccGTWGEO.s:222    .text.T.28:00000000 T.28
     /tmp/ccGTWGEO.s:261    .text.T.28:00000034 $d
     /tmp/ccGTWGEO.s:266    .text.T.29:00000000 $t
     /tmp/ccGTWGEO.s:270    .text.T.29:00000000 T.29
     /tmp/ccGTWGEO.s:432    .text.T.29:000000f8 $d
     /tmp/ccGTWGEO.s:438    .text.i2c2_hw_init:00000000 $t
     /tmp/ccGTWGEO.s:443    .text.i2c2_hw_init:00000000 i2c2_hw_init
     /tmp/ccGTWGEO.s:559    .text.i2c2_hw_init:000000a0 $d
     /tmp/ccGTWGEO.s:567    .text.T.30:00000000 $t
     /tmp/ccGTWGEO.s:571    .text.T.30:00000000 T.30
     /tmp/ccGTWGEO.s:615    .text.T.30:00000038 $d
     /tmp/ccGTWGEO.s:620    .text.i2c2_er_irq_handler:00000000 $t
     /tmp/ccGTWGEO.s:625    .text.i2c2_er_irq_handler:00000000 i2c2_er_irq_handler
     /tmp/ccGTWGEO.s:803    .text.i2c2_er_irq_handler:000000e0 $d
     /tmp/ccGTWGEO.s:817    .text.i2c2_ev_irq_handler:00000000 $t
     /tmp/ccGTWGEO.s:822    .text.i2c2_ev_irq_handler:00000000 i2c2_ev_irq_handler
     /tmp/ccGTWGEO.s:852    .text.i2c2_ev_irq_handler:00000022 $d
     /tmp/ccGTWGEO.s:864    .text.i2c2_ev_irq_handler:00000032 $t
     /tmp/ccGTWGEO.s:1259   .text.i2c2_ev_irq_handler:0000025c $d
     /tmp/ccGTWGEO.s:1273   .text.i2c2_ev_irq_handler:00000284 $t
     /tmp/ccGTWGEO.s:1335   .text.i2c2_ev_irq_handler:000002c8 $d
     /tmp/ccGTWGEO.s:1349   .bss.i2c2_errors:00000000 i2c2_errors
     /tmp/ccGTWGEO.s:1345   .bss.i2c2_errors:00000000 $d
     /tmp/ccGTWGEO.s:1355   .bss.counter.3511:00000000 counter.3511
     /tmp/ccGTWGEO.s:1356   .bss.counter.3511:00000000 $d
     /tmp/ccGTWGEO.s:1358   .data.I2C2_InitStruct:00000000 $d
     /tmp/ccGTWGEO.s:1362   .data.I2C2_InitStruct:00000000 I2C2_InitStruct
     /tmp/ccGTWGEO.s:1374   .bss.counter.3569:00000000 counter.3569
     /tmp/ccGTWGEO.s:1375   .bss.counter.3569:00000000 $d
     /tmp/ccGTWGEO.s:1380   .bss.counter.3601:00000000 counter.3601
     /tmp/ccGTWGEO.s:1381   .bss.counter.3601:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C_ITConfig
I2C_GenerateSTART
I2C_GetFlagStatus
i2c2
I2C_DeInit
GPIO_SetBits
GPIO_Init
GPIO_ReadInputDataBit
GPIO_ResetBits
I2C_Init
I2C_SoftwareResetCmd
NVIC_PriorityGroupConfig
NVIC_Init
RCC_APB1PeriphClockCmd
RCC_APB2PeriphClockCmd
I2C_Cmd
I2C_GetITStatus
I2C_ClearITPendingBit
I2C_GetLastEvent
I2C_Send7bitAddress
I2C_SendData
I2C_GenerateSTOP
I2C_ReceiveData
I2C_AcknowledgeConfig
